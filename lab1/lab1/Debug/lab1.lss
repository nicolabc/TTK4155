
lab1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800100  00000a46  00000ada  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a46  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800132  00800132  00000b0c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b0c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000f0  00000000  00000000  00000b68  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006eb  00000000  00000000  00000c58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000460  00000000  00000000  00001343  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004c2  00000000  00000000  000017a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000154  00000000  00000000  00001c68  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002ba  00000000  00000000  00001dbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000210  00000000  00000000  00002076  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  00002286  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e6 e4       	ldi	r30, 0x46	; 70
  84:	fa e0       	ldi	r31, 0x0A	; 10
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a2 33       	cpi	r26, 0x32	; 50
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a2 e3       	ldi	r26, 0x32	; 50
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ac 33       	cpi	r26, 0x3C	; 60
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 87 00 	call	0x10e	; 0x10e <main>
  a6:	0c 94 21 05 	jmp	0xa42	; 0xa42 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <adc_init>:
*/

volatile int adcInProgress = 0;

void adc_init(){
	DDRE &= ~(1<<DDE0); //Hvis vi skal bruke interrupt pin-en i stedet for delay (blir en slags interrupt)
  ae:	30 98       	cbi	0x06, 0	; 6
  b0:	08 95       	ret

000000b2 <avr_init>:
#define set_bit( reg, bit ) (reg |= (1 << bit))
#define clear_bit( reg, bit ) (reg &= ~(1 << bit))
#define test_bit( reg, bit ) (reg & (1 << bit))

void avr_init(void){
	clear_bit(DDRB,PB0); //Setter PB0 til read
  b2:	b8 98       	cbi	0x17, 0	; 23
	clear_bit(DDRB,PB1); //Setter PB1 til read
  b4:	b9 98       	cbi	0x17, 1	; 23
	clear_bit(DDRB,PB2); //Setter PB2 til read
  b6:	ba 98       	cbi	0x17, 2	; 23
	set_bit(PORTB, PB2); //Setter pullup resistor for PB2
  b8:	c2 9a       	sbi	0x18, 2	; 24
  ba:	08 95       	ret

000000bc <enableExternalMemory>:
#define set_bit( reg, bit ) (reg |= (1 << bit))
#define clear_bit( reg, bit ) (reg &= ~(1 << bit))

void enableExternalMemory(void){
	
	set_bit(MCUCR,SRE); // MCUCR |= (1 << SRE); //Setter SRE høy i MCUCR registeret slik at AVR kan skrive til external memory
  bc:	85 b7       	in	r24, 0x35	; 53
  be:	80 68       	ori	r24, 0x80	; 128
  c0:	85 bf       	out	0x35, r24	; 53
	set_bit(SFIOR,XMM2); // SFIOR |= (1 << XMM2); //Maskerer ut PC7-PC4 til JTAG
  c2:	80 b7       	in	r24, 0x30	; 48
  c4:	80 62       	ori	r24, 0x20	; 32
  c6:	80 bf       	out	0x30, r24	; 48
  c8:	08 95       	ret

000000ca <joy_readButton>:
	}
	return DOWN;
}

int joy_readButton(int button){
	if (button == 2){
  ca:	82 30       	cpi	r24, 0x02	; 2
  cc:	91 05       	cpc	r25, r1
  ce:	39 f4       	brne	.+14     	; 0xde <joy_readButton+0x14>
		if ((PINB & (1<<(PB0+button))) > 0){
  d0:	31 e0       	ldi	r19, 0x01	; 1
  d2:	20 e0       	ldi	r18, 0x00	; 0
  d4:	b2 99       	sbic	0x16, 2	; 22
  d6:	30 e0       	ldi	r19, 0x00	; 0
			return 0; //så: om joystickknappen ikke er trykket inn, vil verdien i parentesen være 4. om knappen ikke er trykket inn, returnerer vi 0
  d8:	83 2f       	mov	r24, r19
  da:	92 2f       	mov	r25, r18
  dc:	08 95       	ret
		}
		return 1; //ellers returnerer vi 1
	}
	if (button == 1){
  de:	81 30       	cpi	r24, 0x01	; 1
  e0:	91 05       	cpc	r25, r1
  e2:	39 f4       	brne	.+14     	; 0xf2 <joy_readButton+0x28>
		if ((PINB & (1<<(PB0+button))) > 0){
  e4:	31 e0       	ldi	r19, 0x01	; 1
  e6:	20 e0       	ldi	r18, 0x00	; 0
  e8:	b1 9b       	sbis	0x16, 1	; 22
  ea:	30 e0       	ldi	r19, 0x00	; 0
}

int joy_readButton(int button){
	if (button == 2){
		if ((PINB & (1<<(PB0+button))) > 0){
			return 0; //så: om joystickknappen ikke er trykket inn, vil verdien i parentesen være 4. om knappen ikke er trykket inn, returnerer vi 0
  ec:	83 2f       	mov	r24, r19
  ee:	92 2f       	mov	r25, r18
  f0:	08 95       	ret
		if ((PINB & (1<<(PB0+button))) > 0){
			return 1; //så om høyreknappen er trykket inn, vil verdien i parentesen være 2. Og da returnerer vi 1
		}
		return 0;
	}
	return (PINB & (1<<(PB0+button)));
  f2:	26 b3       	in	r18, 0x16	; 22
  f4:	41 e0       	ldi	r20, 0x01	; 1
  f6:	50 e0       	ldi	r21, 0x00	; 0
  f8:	ba 01       	movw	r22, r20
  fa:	02 c0       	rjmp	.+4      	; 0x100 <joy_readButton+0x36>
  fc:	66 0f       	add	r22, r22
  fe:	77 1f       	adc	r23, r23
 100:	8a 95       	dec	r24
 102:	e2 f7       	brpl	.-8      	; 0xfc <joy_readButton+0x32>
 104:	cb 01       	movw	r24, r22
 106:	30 e0       	ldi	r19, 0x00	; 0
 108:	82 23       	and	r24, r18
 10a:	93 23       	and	r25, r19
 10c:	08 95       	ret

0000010e <main>:
#define test_bit( reg, bit ) (reg & (1 << bit))


int main(void)
{
	USART_Init ( MYUBRR );
 10e:	8f e1       	ldi	r24, 0x1F	; 31
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	0e 94 be 00 	call	0x17c	; 0x17c <USART_Init>
	enableExternalMemory(); 
 116:	0e 94 5e 00 	call	0xbc	; 0xbc <enableExternalMemory>
	
	//Tester sram
	
	//SRAM_test();
	
	avr_init();
 11a:	0e 94 59 00 	call	0xb2	; 0xb2 <avr_init>
	

	volatile char *ext_ram = (char *) 0x1201; //For å aksessere external IC lager vi pointer til adresse
	adc_init();
 11e:	0e 94 57 00 	call	0xae	; 0xae <adc_init>

		//printf("                                                     Retrieved value Y: %i \n", retreived_valueY);
		
		
		
		printf("Left: %i //////  right: %i ////// L3: %i \n", joy_readButton(0), joy_readButton(1), joy_readButton(2));
 122:	c6 e0       	ldi	r28, 0x06	; 6
 124:	d1 e0       	ldi	r29, 0x01	; 1
 126:	82 e0       	ldi	r24, 0x02	; 2
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	0e 94 65 00 	call	0xca	; 0xca <joy_readButton>
 12e:	f8 2e       	mov	r15, r24
 130:	e9 2e       	mov	r14, r25
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	0e 94 65 00 	call	0xca	; 0xca <joy_readButton>
 13a:	18 2f       	mov	r17, r24
 13c:	09 2f       	mov	r16, r25
 13e:	80 e0       	ldi	r24, 0x00	; 0
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	0e 94 65 00 	call	0xca	; 0xca <joy_readButton>
 146:	ef 92       	push	r14
 148:	ff 92       	push	r15
 14a:	0f 93       	push	r16
 14c:	1f 93       	push	r17
 14e:	9f 93       	push	r25
 150:	8f 93       	push	r24
 152:	df 93       	push	r29
 154:	cf 93       	push	r28
 156:	0e 94 14 01 	call	0x228	; 0x228 <printf>
 15a:	8d b7       	in	r24, 0x3d	; 61
 15c:	9e b7       	in	r25, 0x3e	; 62
 15e:	08 96       	adiw	r24, 0x08	; 8
 160:	0f b6       	in	r0, 0x3f	; 63
 162:	f8 94       	cli
 164:	9e bf       	out	0x3e, r25	; 62
 166:	0f be       	out	0x3f, r0	; 63
 168:	8d bf       	out	0x3d, r24	; 61
 16a:	dd cf       	rjmp	.-70     	; 0x126 <main+0x18>

0000016c <USART_Transmit>:
 }
 
 void USART_Transmit( unsigned char data )
 {
	 /* Wait for empty transmit buffer */
	 while( !( UCSR0A & (1<<UDRE0)) );
 16c:	5d 9b       	sbis	0x0b, 5	; 11
 16e:	fe cf       	rjmp	.-4      	; 0x16c <USART_Transmit>
	 
	 /* Put data into buffer, sends the data */
	 UDR0 = data;
 170:	8c b9       	out	0x0c, r24	; 12
 172:	08 95       	ret

00000174 <USART_Receive>:
 }

 unsigned char USART_Receive( void )
 {
	 /*Wait for data to be received*/
	 while( !(UCSR0A & (1<<RXC0)) );
 174:	5f 9b       	sbis	0x0b, 7	; 11
 176:	fe cf       	rjmp	.-4      	; 0x174 <USART_Receive>
	 
	 /* Get and return received data from buffer*/
	 return UDR0;
 178:	8c b1       	in	r24, 0x0c	; 12
 }
 17a:	08 95       	ret

0000017c <USART_Init>:


void USART_Init( unsigned int ubrr )
 {
	 /* Set baud rate */
	 UBRR0H = (unsigned char)(ubrr>>8);
 17c:	90 bd       	out	0x20, r25	; 32
	 UBRR0L = (unsigned char)ubrr;
 17e:	89 b9       	out	0x09, r24	; 9

	 /* Enable receiver and transmitter*/
	 UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 180:	88 e1       	ldi	r24, 0x18	; 24
 182:	8a b9       	out	0x0a, r24	; 10
	 
	 fdevopen(*USART_Transmit, *USART_Receive);
 184:	6a eb       	ldi	r22, 0xBA	; 186
 186:	70 e0       	ldi	r23, 0x00	; 0
 188:	86 eb       	ldi	r24, 0xB6	; 182
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	0e 94 c9 00 	call	0x192	; 0x192 <fdevopen>
 190:	08 95       	ret

00000192 <fdevopen>:
 192:	0f 93       	push	r16
 194:	1f 93       	push	r17
 196:	cf 93       	push	r28
 198:	df 93       	push	r29
 19a:	ec 01       	movw	r28, r24
 19c:	8b 01       	movw	r16, r22
 19e:	00 97       	sbiw	r24, 0x00	; 0
 1a0:	31 f4       	brne	.+12     	; 0x1ae <fdevopen+0x1c>
 1a2:	61 15       	cp	r22, r1
 1a4:	71 05       	cpc	r23, r1
 1a6:	19 f4       	brne	.+6      	; 0x1ae <fdevopen+0x1c>
 1a8:	80 e0       	ldi	r24, 0x00	; 0
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	38 c0       	rjmp	.+112    	; 0x21e <fdevopen+0x8c>
 1ae:	6e e0       	ldi	r22, 0x0E	; 14
 1b0:	70 e0       	ldi	r23, 0x00	; 0
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <calloc>
 1ba:	fc 01       	movw	r30, r24
 1bc:	00 97       	sbiw	r24, 0x00	; 0
 1be:	a1 f3       	breq	.-24     	; 0x1a8 <fdevopen+0x16>
 1c0:	80 e8       	ldi	r24, 0x80	; 128
 1c2:	83 83       	std	Z+3, r24	; 0x03
 1c4:	01 15       	cp	r16, r1
 1c6:	11 05       	cpc	r17, r1
 1c8:	71 f0       	breq	.+28     	; 0x1e6 <fdevopen+0x54>
 1ca:	13 87       	std	Z+11, r17	; 0x0b
 1cc:	02 87       	std	Z+10, r16	; 0x0a
 1ce:	81 e8       	ldi	r24, 0x81	; 129
 1d0:	83 83       	std	Z+3, r24	; 0x03
 1d2:	80 91 32 01 	lds	r24, 0x0132
 1d6:	90 91 33 01 	lds	r25, 0x0133
 1da:	89 2b       	or	r24, r25
 1dc:	21 f4       	brne	.+8      	; 0x1e6 <fdevopen+0x54>
 1de:	f0 93 33 01 	sts	0x0133, r31
 1e2:	e0 93 32 01 	sts	0x0132, r30
 1e6:	20 97       	sbiw	r28, 0x00	; 0
 1e8:	c9 f0       	breq	.+50     	; 0x21c <fdevopen+0x8a>
 1ea:	d1 87       	std	Z+9, r29	; 0x09
 1ec:	c0 87       	std	Z+8, r28	; 0x08
 1ee:	83 81       	ldd	r24, Z+3	; 0x03
 1f0:	82 60       	ori	r24, 0x02	; 2
 1f2:	83 83       	std	Z+3, r24	; 0x03
 1f4:	80 91 34 01 	lds	r24, 0x0134
 1f8:	90 91 35 01 	lds	r25, 0x0135
 1fc:	89 2b       	or	r24, r25
 1fe:	71 f4       	brne	.+28     	; 0x21c <fdevopen+0x8a>
 200:	f0 93 35 01 	sts	0x0135, r31
 204:	e0 93 34 01 	sts	0x0134, r30
 208:	80 91 36 01 	lds	r24, 0x0136
 20c:	90 91 37 01 	lds	r25, 0x0137
 210:	89 2b       	or	r24, r25
 212:	21 f4       	brne	.+8      	; 0x21c <fdevopen+0x8a>
 214:	f0 93 37 01 	sts	0x0137, r31
 218:	e0 93 36 01 	sts	0x0136, r30
 21c:	cf 01       	movw	r24, r30
 21e:	df 91       	pop	r29
 220:	cf 91       	pop	r28
 222:	1f 91       	pop	r17
 224:	0f 91       	pop	r16
 226:	08 95       	ret

00000228 <printf>:
 228:	a0 e0       	ldi	r26, 0x00	; 0
 22a:	b0 e0       	ldi	r27, 0x00	; 0
 22c:	ea e1       	ldi	r30, 0x1A	; 26
 22e:	f1 e0       	ldi	r31, 0x01	; 1
 230:	0c 94 fa 04 	jmp	0x9f4	; 0x9f4 <__prologue_saves__+0x20>
 234:	fe 01       	movw	r30, r28
 236:	35 96       	adiw	r30, 0x05	; 5
 238:	61 91       	ld	r22, Z+
 23a:	71 91       	ld	r23, Z+
 23c:	af 01       	movw	r20, r30
 23e:	80 91 34 01 	lds	r24, 0x0134
 242:	90 91 35 01 	lds	r25, 0x0135
 246:	0e 94 28 01 	call	0x250	; 0x250 <vfprintf>
 24a:	e2 e0       	ldi	r30, 0x02	; 2
 24c:	0c 94 16 05 	jmp	0xa2c	; 0xa2c <__epilogue_restores__+0x20>

00000250 <vfprintf>:
 250:	ac e0       	ldi	r26, 0x0C	; 12
 252:	b0 e0       	ldi	r27, 0x00	; 0
 254:	ee e2       	ldi	r30, 0x2E	; 46
 256:	f1 e0       	ldi	r31, 0x01	; 1
 258:	0c 94 ea 04 	jmp	0x9d4	; 0x9d4 <__prologue_saves__>
 25c:	7c 01       	movw	r14, r24
 25e:	6b 01       	movw	r12, r22
 260:	8a 01       	movw	r16, r20
 262:	fc 01       	movw	r30, r24
 264:	17 82       	std	Z+7, r1	; 0x07
 266:	16 82       	std	Z+6, r1	; 0x06
 268:	83 81       	ldd	r24, Z+3	; 0x03
 26a:	81 ff       	sbrs	r24, 1
 26c:	bd c1       	rjmp	.+890    	; 0x5e8 <__stack+0xe9>
 26e:	ce 01       	movw	r24, r28
 270:	01 96       	adiw	r24, 0x01	; 1
 272:	4c 01       	movw	r8, r24
 274:	f7 01       	movw	r30, r14
 276:	93 81       	ldd	r25, Z+3	; 0x03
 278:	f6 01       	movw	r30, r12
 27a:	93 fd       	sbrc	r25, 3
 27c:	85 91       	lpm	r24, Z+
 27e:	93 ff       	sbrs	r25, 3
 280:	81 91       	ld	r24, Z+
 282:	6f 01       	movw	r12, r30
 284:	88 23       	and	r24, r24
 286:	09 f4       	brne	.+2      	; 0x28a <vfprintf+0x3a>
 288:	ab c1       	rjmp	.+854    	; 0x5e0 <__stack+0xe1>
 28a:	85 32       	cpi	r24, 0x25	; 37
 28c:	39 f4       	brne	.+14     	; 0x29c <vfprintf+0x4c>
 28e:	93 fd       	sbrc	r25, 3
 290:	85 91       	lpm	r24, Z+
 292:	93 ff       	sbrs	r25, 3
 294:	81 91       	ld	r24, Z+
 296:	6f 01       	movw	r12, r30
 298:	85 32       	cpi	r24, 0x25	; 37
 29a:	29 f4       	brne	.+10     	; 0x2a6 <vfprintf+0x56>
 29c:	b7 01       	movw	r22, r14
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <fputc>
 2a4:	e7 cf       	rjmp	.-50     	; 0x274 <vfprintf+0x24>
 2a6:	51 2c       	mov	r5, r1
 2a8:	31 2c       	mov	r3, r1
 2aa:	20 e0       	ldi	r18, 0x00	; 0
 2ac:	20 32       	cpi	r18, 0x20	; 32
 2ae:	a0 f4       	brcc	.+40     	; 0x2d8 <vfprintf+0x88>
 2b0:	8b 32       	cpi	r24, 0x2B	; 43
 2b2:	69 f0       	breq	.+26     	; 0x2ce <vfprintf+0x7e>
 2b4:	30 f4       	brcc	.+12     	; 0x2c2 <vfprintf+0x72>
 2b6:	80 32       	cpi	r24, 0x20	; 32
 2b8:	59 f0       	breq	.+22     	; 0x2d0 <vfprintf+0x80>
 2ba:	83 32       	cpi	r24, 0x23	; 35
 2bc:	69 f4       	brne	.+26     	; 0x2d8 <vfprintf+0x88>
 2be:	20 61       	ori	r18, 0x10	; 16
 2c0:	2c c0       	rjmp	.+88     	; 0x31a <vfprintf+0xca>
 2c2:	8d 32       	cpi	r24, 0x2D	; 45
 2c4:	39 f0       	breq	.+14     	; 0x2d4 <vfprintf+0x84>
 2c6:	80 33       	cpi	r24, 0x30	; 48
 2c8:	39 f4       	brne	.+14     	; 0x2d8 <vfprintf+0x88>
 2ca:	21 60       	ori	r18, 0x01	; 1
 2cc:	26 c0       	rjmp	.+76     	; 0x31a <vfprintf+0xca>
 2ce:	22 60       	ori	r18, 0x02	; 2
 2d0:	24 60       	ori	r18, 0x04	; 4
 2d2:	23 c0       	rjmp	.+70     	; 0x31a <vfprintf+0xca>
 2d4:	28 60       	ori	r18, 0x08	; 8
 2d6:	21 c0       	rjmp	.+66     	; 0x31a <vfprintf+0xca>
 2d8:	27 fd       	sbrc	r18, 7
 2da:	27 c0       	rjmp	.+78     	; 0x32a <vfprintf+0xda>
 2dc:	30 ed       	ldi	r19, 0xD0	; 208
 2de:	38 0f       	add	r19, r24
 2e0:	3a 30       	cpi	r19, 0x0A	; 10
 2e2:	78 f4       	brcc	.+30     	; 0x302 <vfprintf+0xb2>
 2e4:	26 ff       	sbrs	r18, 6
 2e6:	06 c0       	rjmp	.+12     	; 0x2f4 <vfprintf+0xa4>
 2e8:	fa e0       	ldi	r31, 0x0A	; 10
 2ea:	5f 9e       	mul	r5, r31
 2ec:	30 0d       	add	r19, r0
 2ee:	11 24       	eor	r1, r1
 2f0:	53 2e       	mov	r5, r19
 2f2:	13 c0       	rjmp	.+38     	; 0x31a <vfprintf+0xca>
 2f4:	8a e0       	ldi	r24, 0x0A	; 10
 2f6:	38 9e       	mul	r3, r24
 2f8:	30 0d       	add	r19, r0
 2fa:	11 24       	eor	r1, r1
 2fc:	33 2e       	mov	r3, r19
 2fe:	20 62       	ori	r18, 0x20	; 32
 300:	0c c0       	rjmp	.+24     	; 0x31a <vfprintf+0xca>
 302:	8e 32       	cpi	r24, 0x2E	; 46
 304:	21 f4       	brne	.+8      	; 0x30e <vfprintf+0xbe>
 306:	26 fd       	sbrc	r18, 6
 308:	6b c1       	rjmp	.+726    	; 0x5e0 <__stack+0xe1>
 30a:	20 64       	ori	r18, 0x40	; 64
 30c:	06 c0       	rjmp	.+12     	; 0x31a <vfprintf+0xca>
 30e:	8c 36       	cpi	r24, 0x6C	; 108
 310:	11 f4       	brne	.+4      	; 0x316 <vfprintf+0xc6>
 312:	20 68       	ori	r18, 0x80	; 128
 314:	02 c0       	rjmp	.+4      	; 0x31a <vfprintf+0xca>
 316:	88 36       	cpi	r24, 0x68	; 104
 318:	41 f4       	brne	.+16     	; 0x32a <vfprintf+0xda>
 31a:	f6 01       	movw	r30, r12
 31c:	93 fd       	sbrc	r25, 3
 31e:	85 91       	lpm	r24, Z+
 320:	93 ff       	sbrs	r25, 3
 322:	81 91       	ld	r24, Z+
 324:	6f 01       	movw	r12, r30
 326:	81 11       	cpse	r24, r1
 328:	c1 cf       	rjmp	.-126    	; 0x2ac <vfprintf+0x5c>
 32a:	98 2f       	mov	r25, r24
 32c:	9f 7d       	andi	r25, 0xDF	; 223
 32e:	95 54       	subi	r25, 0x45	; 69
 330:	93 30       	cpi	r25, 0x03	; 3
 332:	28 f4       	brcc	.+10     	; 0x33e <vfprintf+0xee>
 334:	0c 5f       	subi	r16, 0xFC	; 252
 336:	1f 4f       	sbci	r17, 0xFF	; 255
 338:	ff e3       	ldi	r31, 0x3F	; 63
 33a:	f9 83       	std	Y+1, r31	; 0x01
 33c:	0d c0       	rjmp	.+26     	; 0x358 <vfprintf+0x108>
 33e:	83 36       	cpi	r24, 0x63	; 99
 340:	31 f0       	breq	.+12     	; 0x34e <vfprintf+0xfe>
 342:	83 37       	cpi	r24, 0x73	; 115
 344:	71 f0       	breq	.+28     	; 0x362 <vfprintf+0x112>
 346:	83 35       	cpi	r24, 0x53	; 83
 348:	09 f0       	breq	.+2      	; 0x34c <vfprintf+0xfc>
 34a:	5b c0       	rjmp	.+182    	; 0x402 <vfprintf+0x1b2>
 34c:	22 c0       	rjmp	.+68     	; 0x392 <vfprintf+0x142>
 34e:	f8 01       	movw	r30, r16
 350:	80 81       	ld	r24, Z
 352:	89 83       	std	Y+1, r24	; 0x01
 354:	0e 5f       	subi	r16, 0xFE	; 254
 356:	1f 4f       	sbci	r17, 0xFF	; 255
 358:	44 24       	eor	r4, r4
 35a:	43 94       	inc	r4
 35c:	51 2c       	mov	r5, r1
 35e:	54 01       	movw	r10, r8
 360:	15 c0       	rjmp	.+42     	; 0x38c <vfprintf+0x13c>
 362:	38 01       	movw	r6, r16
 364:	f2 e0       	ldi	r31, 0x02	; 2
 366:	6f 0e       	add	r6, r31
 368:	71 1c       	adc	r7, r1
 36a:	f8 01       	movw	r30, r16
 36c:	a0 80       	ld	r10, Z
 36e:	b1 80       	ldd	r11, Z+1	; 0x01
 370:	26 ff       	sbrs	r18, 6
 372:	03 c0       	rjmp	.+6      	; 0x37a <vfprintf+0x12a>
 374:	65 2d       	mov	r22, r5
 376:	70 e0       	ldi	r23, 0x00	; 0
 378:	02 c0       	rjmp	.+4      	; 0x37e <vfprintf+0x12e>
 37a:	6f ef       	ldi	r22, 0xFF	; 255
 37c:	7f ef       	ldi	r23, 0xFF	; 255
 37e:	c5 01       	movw	r24, r10
 380:	2c 87       	std	Y+12, r18	; 0x0c
 382:	0e 94 4f 04 	call	0x89e	; 0x89e <strnlen>
 386:	2c 01       	movw	r4, r24
 388:	83 01       	movw	r16, r6
 38a:	2c 85       	ldd	r18, Y+12	; 0x0c
 38c:	2f 77       	andi	r18, 0x7F	; 127
 38e:	22 2e       	mov	r2, r18
 390:	17 c0       	rjmp	.+46     	; 0x3c0 <vfprintf+0x170>
 392:	38 01       	movw	r6, r16
 394:	f2 e0       	ldi	r31, 0x02	; 2
 396:	6f 0e       	add	r6, r31
 398:	71 1c       	adc	r7, r1
 39a:	f8 01       	movw	r30, r16
 39c:	a0 80       	ld	r10, Z
 39e:	b1 80       	ldd	r11, Z+1	; 0x01
 3a0:	26 ff       	sbrs	r18, 6
 3a2:	03 c0       	rjmp	.+6      	; 0x3aa <vfprintf+0x15a>
 3a4:	65 2d       	mov	r22, r5
 3a6:	70 e0       	ldi	r23, 0x00	; 0
 3a8:	02 c0       	rjmp	.+4      	; 0x3ae <vfprintf+0x15e>
 3aa:	6f ef       	ldi	r22, 0xFF	; 255
 3ac:	7f ef       	ldi	r23, 0xFF	; 255
 3ae:	c5 01       	movw	r24, r10
 3b0:	2c 87       	std	Y+12, r18	; 0x0c
 3b2:	0e 94 3d 04 	call	0x87a	; 0x87a <strnlen_P>
 3b6:	2c 01       	movw	r4, r24
 3b8:	2c 85       	ldd	r18, Y+12	; 0x0c
 3ba:	20 68       	ori	r18, 0x80	; 128
 3bc:	22 2e       	mov	r2, r18
 3be:	83 01       	movw	r16, r6
 3c0:	23 fc       	sbrc	r2, 3
 3c2:	1b c0       	rjmp	.+54     	; 0x3fa <vfprintf+0x1aa>
 3c4:	83 2d       	mov	r24, r3
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	48 16       	cp	r4, r24
 3ca:	59 06       	cpc	r5, r25
 3cc:	b0 f4       	brcc	.+44     	; 0x3fa <vfprintf+0x1aa>
 3ce:	b7 01       	movw	r22, r14
 3d0:	80 e2       	ldi	r24, 0x20	; 32
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <fputc>
 3d8:	3a 94       	dec	r3
 3da:	f4 cf       	rjmp	.-24     	; 0x3c4 <vfprintf+0x174>
 3dc:	f5 01       	movw	r30, r10
 3de:	27 fc       	sbrc	r2, 7
 3e0:	85 91       	lpm	r24, Z+
 3e2:	27 fe       	sbrs	r2, 7
 3e4:	81 91       	ld	r24, Z+
 3e6:	5f 01       	movw	r10, r30
 3e8:	b7 01       	movw	r22, r14
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <fputc>
 3f0:	31 10       	cpse	r3, r1
 3f2:	3a 94       	dec	r3
 3f4:	f1 e0       	ldi	r31, 0x01	; 1
 3f6:	4f 1a       	sub	r4, r31
 3f8:	51 08       	sbc	r5, r1
 3fa:	41 14       	cp	r4, r1
 3fc:	51 04       	cpc	r5, r1
 3fe:	71 f7       	brne	.-36     	; 0x3dc <vfprintf+0x18c>
 400:	e5 c0       	rjmp	.+458    	; 0x5cc <__stack+0xcd>
 402:	84 36       	cpi	r24, 0x64	; 100
 404:	11 f0       	breq	.+4      	; 0x40a <vfprintf+0x1ba>
 406:	89 36       	cpi	r24, 0x69	; 105
 408:	39 f5       	brne	.+78     	; 0x458 <vfprintf+0x208>
 40a:	f8 01       	movw	r30, r16
 40c:	27 ff       	sbrs	r18, 7
 40e:	07 c0       	rjmp	.+14     	; 0x41e <vfprintf+0x1ce>
 410:	60 81       	ld	r22, Z
 412:	71 81       	ldd	r23, Z+1	; 0x01
 414:	82 81       	ldd	r24, Z+2	; 0x02
 416:	93 81       	ldd	r25, Z+3	; 0x03
 418:	0c 5f       	subi	r16, 0xFC	; 252
 41a:	1f 4f       	sbci	r17, 0xFF	; 255
 41c:	08 c0       	rjmp	.+16     	; 0x42e <vfprintf+0x1de>
 41e:	60 81       	ld	r22, Z
 420:	71 81       	ldd	r23, Z+1	; 0x01
 422:	88 27       	eor	r24, r24
 424:	77 fd       	sbrc	r23, 7
 426:	80 95       	com	r24
 428:	98 2f       	mov	r25, r24
 42a:	0e 5f       	subi	r16, 0xFE	; 254
 42c:	1f 4f       	sbci	r17, 0xFF	; 255
 42e:	2f 76       	andi	r18, 0x6F	; 111
 430:	b2 2e       	mov	r11, r18
 432:	97 ff       	sbrs	r25, 7
 434:	09 c0       	rjmp	.+18     	; 0x448 <vfprintf+0x1f8>
 436:	90 95       	com	r25
 438:	80 95       	com	r24
 43a:	70 95       	com	r23
 43c:	61 95       	neg	r22
 43e:	7f 4f       	sbci	r23, 0xFF	; 255
 440:	8f 4f       	sbci	r24, 0xFF	; 255
 442:	9f 4f       	sbci	r25, 0xFF	; 255
 444:	20 68       	ori	r18, 0x80	; 128
 446:	b2 2e       	mov	r11, r18
 448:	2a e0       	ldi	r18, 0x0A	; 10
 44a:	30 e0       	ldi	r19, 0x00	; 0
 44c:	a4 01       	movw	r20, r8
 44e:	0e 94 8c 04 	call	0x918	; 0x918 <__ultoa_invert>
 452:	a8 2e       	mov	r10, r24
 454:	a8 18       	sub	r10, r8
 456:	44 c0       	rjmp	.+136    	; 0x4e0 <vfprintf+0x290>
 458:	85 37       	cpi	r24, 0x75	; 117
 45a:	29 f4       	brne	.+10     	; 0x466 <vfprintf+0x216>
 45c:	2f 7e       	andi	r18, 0xEF	; 239
 45e:	b2 2e       	mov	r11, r18
 460:	2a e0       	ldi	r18, 0x0A	; 10
 462:	30 e0       	ldi	r19, 0x00	; 0
 464:	25 c0       	rjmp	.+74     	; 0x4b0 <vfprintf+0x260>
 466:	f2 2f       	mov	r31, r18
 468:	f9 7f       	andi	r31, 0xF9	; 249
 46a:	bf 2e       	mov	r11, r31
 46c:	8f 36       	cpi	r24, 0x6F	; 111
 46e:	c1 f0       	breq	.+48     	; 0x4a0 <vfprintf+0x250>
 470:	18 f4       	brcc	.+6      	; 0x478 <vfprintf+0x228>
 472:	88 35       	cpi	r24, 0x58	; 88
 474:	79 f0       	breq	.+30     	; 0x494 <vfprintf+0x244>
 476:	b4 c0       	rjmp	.+360    	; 0x5e0 <__stack+0xe1>
 478:	80 37       	cpi	r24, 0x70	; 112
 47a:	19 f0       	breq	.+6      	; 0x482 <vfprintf+0x232>
 47c:	88 37       	cpi	r24, 0x78	; 120
 47e:	21 f0       	breq	.+8      	; 0x488 <vfprintf+0x238>
 480:	af c0       	rjmp	.+350    	; 0x5e0 <__stack+0xe1>
 482:	2f 2f       	mov	r18, r31
 484:	20 61       	ori	r18, 0x10	; 16
 486:	b2 2e       	mov	r11, r18
 488:	b4 fe       	sbrs	r11, 4
 48a:	0d c0       	rjmp	.+26     	; 0x4a6 <vfprintf+0x256>
 48c:	8b 2d       	mov	r24, r11
 48e:	84 60       	ori	r24, 0x04	; 4
 490:	b8 2e       	mov	r11, r24
 492:	09 c0       	rjmp	.+18     	; 0x4a6 <vfprintf+0x256>
 494:	24 ff       	sbrs	r18, 4
 496:	0a c0       	rjmp	.+20     	; 0x4ac <vfprintf+0x25c>
 498:	9f 2f       	mov	r25, r31
 49a:	96 60       	ori	r25, 0x06	; 6
 49c:	b9 2e       	mov	r11, r25
 49e:	06 c0       	rjmp	.+12     	; 0x4ac <vfprintf+0x25c>
 4a0:	28 e0       	ldi	r18, 0x08	; 8
 4a2:	30 e0       	ldi	r19, 0x00	; 0
 4a4:	05 c0       	rjmp	.+10     	; 0x4b0 <vfprintf+0x260>
 4a6:	20 e1       	ldi	r18, 0x10	; 16
 4a8:	30 e0       	ldi	r19, 0x00	; 0
 4aa:	02 c0       	rjmp	.+4      	; 0x4b0 <vfprintf+0x260>
 4ac:	20 e1       	ldi	r18, 0x10	; 16
 4ae:	32 e0       	ldi	r19, 0x02	; 2
 4b0:	f8 01       	movw	r30, r16
 4b2:	b7 fe       	sbrs	r11, 7
 4b4:	07 c0       	rjmp	.+14     	; 0x4c4 <vfprintf+0x274>
 4b6:	60 81       	ld	r22, Z
 4b8:	71 81       	ldd	r23, Z+1	; 0x01
 4ba:	82 81       	ldd	r24, Z+2	; 0x02
 4bc:	93 81       	ldd	r25, Z+3	; 0x03
 4be:	0c 5f       	subi	r16, 0xFC	; 252
 4c0:	1f 4f       	sbci	r17, 0xFF	; 255
 4c2:	06 c0       	rjmp	.+12     	; 0x4d0 <vfprintf+0x280>
 4c4:	60 81       	ld	r22, Z
 4c6:	71 81       	ldd	r23, Z+1	; 0x01
 4c8:	80 e0       	ldi	r24, 0x00	; 0
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	0e 5f       	subi	r16, 0xFE	; 254
 4ce:	1f 4f       	sbci	r17, 0xFF	; 255
 4d0:	a4 01       	movw	r20, r8
 4d2:	0e 94 8c 04 	call	0x918	; 0x918 <__ultoa_invert>
 4d6:	a8 2e       	mov	r10, r24
 4d8:	a8 18       	sub	r10, r8
 4da:	fb 2d       	mov	r31, r11
 4dc:	ff 77       	andi	r31, 0x7F	; 127
 4de:	bf 2e       	mov	r11, r31
 4e0:	b6 fe       	sbrs	r11, 6
 4e2:	0b c0       	rjmp	.+22     	; 0x4fa <vfprintf+0x2aa>
 4e4:	2b 2d       	mov	r18, r11
 4e6:	2e 7f       	andi	r18, 0xFE	; 254
 4e8:	a5 14       	cp	r10, r5
 4ea:	50 f4       	brcc	.+20     	; 0x500 <__stack+0x1>
 4ec:	b4 fe       	sbrs	r11, 4
 4ee:	0a c0       	rjmp	.+20     	; 0x504 <__stack+0x5>
 4f0:	b2 fc       	sbrc	r11, 2
 4f2:	08 c0       	rjmp	.+16     	; 0x504 <__stack+0x5>
 4f4:	2b 2d       	mov	r18, r11
 4f6:	2e 7e       	andi	r18, 0xEE	; 238
 4f8:	05 c0       	rjmp	.+10     	; 0x504 <__stack+0x5>
 4fa:	7a 2c       	mov	r7, r10
 4fc:	2b 2d       	mov	r18, r11
 4fe:	03 c0       	rjmp	.+6      	; 0x506 <__stack+0x7>
 500:	7a 2c       	mov	r7, r10
 502:	01 c0       	rjmp	.+2      	; 0x506 <__stack+0x7>
 504:	75 2c       	mov	r7, r5
 506:	24 ff       	sbrs	r18, 4
 508:	0d c0       	rjmp	.+26     	; 0x524 <__stack+0x25>
 50a:	fe 01       	movw	r30, r28
 50c:	ea 0d       	add	r30, r10
 50e:	f1 1d       	adc	r31, r1
 510:	80 81       	ld	r24, Z
 512:	80 33       	cpi	r24, 0x30	; 48
 514:	11 f4       	brne	.+4      	; 0x51a <__stack+0x1b>
 516:	29 7e       	andi	r18, 0xE9	; 233
 518:	09 c0       	rjmp	.+18     	; 0x52c <__stack+0x2d>
 51a:	22 ff       	sbrs	r18, 2
 51c:	06 c0       	rjmp	.+12     	; 0x52a <__stack+0x2b>
 51e:	73 94       	inc	r7
 520:	73 94       	inc	r7
 522:	04 c0       	rjmp	.+8      	; 0x52c <__stack+0x2d>
 524:	82 2f       	mov	r24, r18
 526:	86 78       	andi	r24, 0x86	; 134
 528:	09 f0       	breq	.+2      	; 0x52c <__stack+0x2d>
 52a:	73 94       	inc	r7
 52c:	23 fd       	sbrc	r18, 3
 52e:	13 c0       	rjmp	.+38     	; 0x556 <__stack+0x57>
 530:	20 ff       	sbrs	r18, 0
 532:	06 c0       	rjmp	.+12     	; 0x540 <__stack+0x41>
 534:	5a 2c       	mov	r5, r10
 536:	73 14       	cp	r7, r3
 538:	18 f4       	brcc	.+6      	; 0x540 <__stack+0x41>
 53a:	53 0c       	add	r5, r3
 53c:	57 18       	sub	r5, r7
 53e:	73 2c       	mov	r7, r3
 540:	73 14       	cp	r7, r3
 542:	68 f4       	brcc	.+26     	; 0x55e <__stack+0x5f>
 544:	b7 01       	movw	r22, r14
 546:	80 e2       	ldi	r24, 0x20	; 32
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	2c 87       	std	Y+12, r18	; 0x0c
 54c:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <fputc>
 550:	73 94       	inc	r7
 552:	2c 85       	ldd	r18, Y+12	; 0x0c
 554:	f5 cf       	rjmp	.-22     	; 0x540 <__stack+0x41>
 556:	73 14       	cp	r7, r3
 558:	10 f4       	brcc	.+4      	; 0x55e <__stack+0x5f>
 55a:	37 18       	sub	r3, r7
 55c:	01 c0       	rjmp	.+2      	; 0x560 <__stack+0x61>
 55e:	31 2c       	mov	r3, r1
 560:	24 ff       	sbrs	r18, 4
 562:	12 c0       	rjmp	.+36     	; 0x588 <__stack+0x89>
 564:	b7 01       	movw	r22, r14
 566:	80 e3       	ldi	r24, 0x30	; 48
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	2c 87       	std	Y+12, r18	; 0x0c
 56c:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <fputc>
 570:	2c 85       	ldd	r18, Y+12	; 0x0c
 572:	22 ff       	sbrs	r18, 2
 574:	17 c0       	rjmp	.+46     	; 0x5a4 <__stack+0xa5>
 576:	21 ff       	sbrs	r18, 1
 578:	03 c0       	rjmp	.+6      	; 0x580 <__stack+0x81>
 57a:	88 e5       	ldi	r24, 0x58	; 88
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	02 c0       	rjmp	.+4      	; 0x584 <__stack+0x85>
 580:	88 e7       	ldi	r24, 0x78	; 120
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	b7 01       	movw	r22, r14
 586:	0c c0       	rjmp	.+24     	; 0x5a0 <__stack+0xa1>
 588:	82 2f       	mov	r24, r18
 58a:	86 78       	andi	r24, 0x86	; 134
 58c:	59 f0       	breq	.+22     	; 0x5a4 <__stack+0xa5>
 58e:	21 fd       	sbrc	r18, 1
 590:	02 c0       	rjmp	.+4      	; 0x596 <__stack+0x97>
 592:	80 e2       	ldi	r24, 0x20	; 32
 594:	01 c0       	rjmp	.+2      	; 0x598 <__stack+0x99>
 596:	8b e2       	ldi	r24, 0x2B	; 43
 598:	27 fd       	sbrc	r18, 7
 59a:	8d e2       	ldi	r24, 0x2D	; 45
 59c:	b7 01       	movw	r22, r14
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <fputc>
 5a4:	a5 14       	cp	r10, r5
 5a6:	38 f4       	brcc	.+14     	; 0x5b6 <__stack+0xb7>
 5a8:	b7 01       	movw	r22, r14
 5aa:	80 e3       	ldi	r24, 0x30	; 48
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <fputc>
 5b2:	5a 94       	dec	r5
 5b4:	f7 cf       	rjmp	.-18     	; 0x5a4 <__stack+0xa5>
 5b6:	aa 94       	dec	r10
 5b8:	f4 01       	movw	r30, r8
 5ba:	ea 0d       	add	r30, r10
 5bc:	f1 1d       	adc	r31, r1
 5be:	80 81       	ld	r24, Z
 5c0:	b7 01       	movw	r22, r14
 5c2:	90 e0       	ldi	r25, 0x00	; 0
 5c4:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <fputc>
 5c8:	a1 10       	cpse	r10, r1
 5ca:	f5 cf       	rjmp	.-22     	; 0x5b6 <__stack+0xb7>
 5cc:	33 20       	and	r3, r3
 5ce:	09 f4       	brne	.+2      	; 0x5d2 <__stack+0xd3>
 5d0:	51 ce       	rjmp	.-862    	; 0x274 <vfprintf+0x24>
 5d2:	b7 01       	movw	r22, r14
 5d4:	80 e2       	ldi	r24, 0x20	; 32
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <fputc>
 5dc:	3a 94       	dec	r3
 5de:	f6 cf       	rjmp	.-20     	; 0x5cc <__stack+0xcd>
 5e0:	f7 01       	movw	r30, r14
 5e2:	86 81       	ldd	r24, Z+6	; 0x06
 5e4:	97 81       	ldd	r25, Z+7	; 0x07
 5e6:	02 c0       	rjmp	.+4      	; 0x5ec <__stack+0xed>
 5e8:	8f ef       	ldi	r24, 0xFF	; 255
 5ea:	9f ef       	ldi	r25, 0xFF	; 255
 5ec:	2c 96       	adiw	r28, 0x0c	; 12
 5ee:	e2 e1       	ldi	r30, 0x12	; 18
 5f0:	0c 94 06 05 	jmp	0xa0c	; 0xa0c <__epilogue_restores__>

000005f4 <calloc>:
 5f4:	0f 93       	push	r16
 5f6:	1f 93       	push	r17
 5f8:	cf 93       	push	r28
 5fa:	df 93       	push	r29
 5fc:	86 9f       	mul	r24, r22
 5fe:	80 01       	movw	r16, r0
 600:	87 9f       	mul	r24, r23
 602:	10 0d       	add	r17, r0
 604:	96 9f       	mul	r25, r22
 606:	10 0d       	add	r17, r0
 608:	11 24       	eor	r1, r1
 60a:	c8 01       	movw	r24, r16
 60c:	0e 94 16 03 	call	0x62c	; 0x62c <malloc>
 610:	ec 01       	movw	r28, r24
 612:	00 97       	sbiw	r24, 0x00	; 0
 614:	29 f0       	breq	.+10     	; 0x620 <calloc+0x2c>
 616:	a8 01       	movw	r20, r16
 618:	60 e0       	ldi	r22, 0x00	; 0
 61a:	70 e0       	ldi	r23, 0x00	; 0
 61c:	0e 94 48 04 	call	0x890	; 0x890 <memset>
 620:	ce 01       	movw	r24, r28
 622:	df 91       	pop	r29
 624:	cf 91       	pop	r28
 626:	1f 91       	pop	r17
 628:	0f 91       	pop	r16
 62a:	08 95       	ret

0000062c <malloc>:
 62c:	cf 93       	push	r28
 62e:	df 93       	push	r29
 630:	82 30       	cpi	r24, 0x02	; 2
 632:	91 05       	cpc	r25, r1
 634:	10 f4       	brcc	.+4      	; 0x63a <malloc+0xe>
 636:	82 e0       	ldi	r24, 0x02	; 2
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	e0 91 3a 01 	lds	r30, 0x013A
 63e:	f0 91 3b 01 	lds	r31, 0x013B
 642:	20 e0       	ldi	r18, 0x00	; 0
 644:	30 e0       	ldi	r19, 0x00	; 0
 646:	a0 e0       	ldi	r26, 0x00	; 0
 648:	b0 e0       	ldi	r27, 0x00	; 0
 64a:	30 97       	sbiw	r30, 0x00	; 0
 64c:	39 f1       	breq	.+78     	; 0x69c <malloc+0x70>
 64e:	40 81       	ld	r20, Z
 650:	51 81       	ldd	r21, Z+1	; 0x01
 652:	48 17       	cp	r20, r24
 654:	59 07       	cpc	r21, r25
 656:	b8 f0       	brcs	.+46     	; 0x686 <malloc+0x5a>
 658:	48 17       	cp	r20, r24
 65a:	59 07       	cpc	r21, r25
 65c:	71 f4       	brne	.+28     	; 0x67a <malloc+0x4e>
 65e:	82 81       	ldd	r24, Z+2	; 0x02
 660:	93 81       	ldd	r25, Z+3	; 0x03
 662:	10 97       	sbiw	r26, 0x00	; 0
 664:	29 f0       	breq	.+10     	; 0x670 <malloc+0x44>
 666:	13 96       	adiw	r26, 0x03	; 3
 668:	9c 93       	st	X, r25
 66a:	8e 93       	st	-X, r24
 66c:	12 97       	sbiw	r26, 0x02	; 2
 66e:	2c c0       	rjmp	.+88     	; 0x6c8 <malloc+0x9c>
 670:	90 93 3b 01 	sts	0x013B, r25
 674:	80 93 3a 01 	sts	0x013A, r24
 678:	27 c0       	rjmp	.+78     	; 0x6c8 <malloc+0x9c>
 67a:	21 15       	cp	r18, r1
 67c:	31 05       	cpc	r19, r1
 67e:	31 f0       	breq	.+12     	; 0x68c <malloc+0x60>
 680:	42 17       	cp	r20, r18
 682:	53 07       	cpc	r21, r19
 684:	18 f0       	brcs	.+6      	; 0x68c <malloc+0x60>
 686:	a9 01       	movw	r20, r18
 688:	db 01       	movw	r26, r22
 68a:	01 c0       	rjmp	.+2      	; 0x68e <malloc+0x62>
 68c:	ef 01       	movw	r28, r30
 68e:	9a 01       	movw	r18, r20
 690:	bd 01       	movw	r22, r26
 692:	df 01       	movw	r26, r30
 694:	02 80       	ldd	r0, Z+2	; 0x02
 696:	f3 81       	ldd	r31, Z+3	; 0x03
 698:	e0 2d       	mov	r30, r0
 69a:	d7 cf       	rjmp	.-82     	; 0x64a <malloc+0x1e>
 69c:	21 15       	cp	r18, r1
 69e:	31 05       	cpc	r19, r1
 6a0:	f9 f0       	breq	.+62     	; 0x6e0 <malloc+0xb4>
 6a2:	28 1b       	sub	r18, r24
 6a4:	39 0b       	sbc	r19, r25
 6a6:	24 30       	cpi	r18, 0x04	; 4
 6a8:	31 05       	cpc	r19, r1
 6aa:	80 f4       	brcc	.+32     	; 0x6cc <malloc+0xa0>
 6ac:	8a 81       	ldd	r24, Y+2	; 0x02
 6ae:	9b 81       	ldd	r25, Y+3	; 0x03
 6b0:	61 15       	cp	r22, r1
 6b2:	71 05       	cpc	r23, r1
 6b4:	21 f0       	breq	.+8      	; 0x6be <malloc+0x92>
 6b6:	fb 01       	movw	r30, r22
 6b8:	93 83       	std	Z+3, r25	; 0x03
 6ba:	82 83       	std	Z+2, r24	; 0x02
 6bc:	04 c0       	rjmp	.+8      	; 0x6c6 <malloc+0x9a>
 6be:	90 93 3b 01 	sts	0x013B, r25
 6c2:	80 93 3a 01 	sts	0x013A, r24
 6c6:	fe 01       	movw	r30, r28
 6c8:	32 96       	adiw	r30, 0x02	; 2
 6ca:	44 c0       	rjmp	.+136    	; 0x754 <malloc+0x128>
 6cc:	fe 01       	movw	r30, r28
 6ce:	e2 0f       	add	r30, r18
 6d0:	f3 1f       	adc	r31, r19
 6d2:	81 93       	st	Z+, r24
 6d4:	91 93       	st	Z+, r25
 6d6:	22 50       	subi	r18, 0x02	; 2
 6d8:	31 09       	sbc	r19, r1
 6da:	39 83       	std	Y+1, r19	; 0x01
 6dc:	28 83       	st	Y, r18
 6de:	3a c0       	rjmp	.+116    	; 0x754 <malloc+0x128>
 6e0:	20 91 38 01 	lds	r18, 0x0138
 6e4:	30 91 39 01 	lds	r19, 0x0139
 6e8:	23 2b       	or	r18, r19
 6ea:	41 f4       	brne	.+16     	; 0x6fc <malloc+0xd0>
 6ec:	20 91 02 01 	lds	r18, 0x0102
 6f0:	30 91 03 01 	lds	r19, 0x0103
 6f4:	30 93 39 01 	sts	0x0139, r19
 6f8:	20 93 38 01 	sts	0x0138, r18
 6fc:	20 91 00 01 	lds	r18, 0x0100
 700:	30 91 01 01 	lds	r19, 0x0101
 704:	21 15       	cp	r18, r1
 706:	31 05       	cpc	r19, r1
 708:	41 f4       	brne	.+16     	; 0x71a <malloc+0xee>
 70a:	2d b7       	in	r18, 0x3d	; 61
 70c:	3e b7       	in	r19, 0x3e	; 62
 70e:	40 91 04 01 	lds	r20, 0x0104
 712:	50 91 05 01 	lds	r21, 0x0105
 716:	24 1b       	sub	r18, r20
 718:	35 0b       	sbc	r19, r21
 71a:	e0 91 38 01 	lds	r30, 0x0138
 71e:	f0 91 39 01 	lds	r31, 0x0139
 722:	e2 17       	cp	r30, r18
 724:	f3 07       	cpc	r31, r19
 726:	a0 f4       	brcc	.+40     	; 0x750 <malloc+0x124>
 728:	2e 1b       	sub	r18, r30
 72a:	3f 0b       	sbc	r19, r31
 72c:	28 17       	cp	r18, r24
 72e:	39 07       	cpc	r19, r25
 730:	78 f0       	brcs	.+30     	; 0x750 <malloc+0x124>
 732:	ac 01       	movw	r20, r24
 734:	4e 5f       	subi	r20, 0xFE	; 254
 736:	5f 4f       	sbci	r21, 0xFF	; 255
 738:	24 17       	cp	r18, r20
 73a:	35 07       	cpc	r19, r21
 73c:	48 f0       	brcs	.+18     	; 0x750 <malloc+0x124>
 73e:	4e 0f       	add	r20, r30
 740:	5f 1f       	adc	r21, r31
 742:	50 93 39 01 	sts	0x0139, r21
 746:	40 93 38 01 	sts	0x0138, r20
 74a:	81 93       	st	Z+, r24
 74c:	91 93       	st	Z+, r25
 74e:	02 c0       	rjmp	.+4      	; 0x754 <malloc+0x128>
 750:	e0 e0       	ldi	r30, 0x00	; 0
 752:	f0 e0       	ldi	r31, 0x00	; 0
 754:	cf 01       	movw	r24, r30
 756:	df 91       	pop	r29
 758:	cf 91       	pop	r28
 75a:	08 95       	ret

0000075c <free>:
 75c:	cf 93       	push	r28
 75e:	df 93       	push	r29
 760:	00 97       	sbiw	r24, 0x00	; 0
 762:	09 f4       	brne	.+2      	; 0x766 <free+0xa>
 764:	87 c0       	rjmp	.+270    	; 0x874 <free+0x118>
 766:	fc 01       	movw	r30, r24
 768:	32 97       	sbiw	r30, 0x02	; 2
 76a:	13 82       	std	Z+3, r1	; 0x03
 76c:	12 82       	std	Z+2, r1	; 0x02
 76e:	c0 91 3a 01 	lds	r28, 0x013A
 772:	d0 91 3b 01 	lds	r29, 0x013B
 776:	20 97       	sbiw	r28, 0x00	; 0
 778:	81 f4       	brne	.+32     	; 0x79a <free+0x3e>
 77a:	20 81       	ld	r18, Z
 77c:	31 81       	ldd	r19, Z+1	; 0x01
 77e:	28 0f       	add	r18, r24
 780:	39 1f       	adc	r19, r25
 782:	80 91 38 01 	lds	r24, 0x0138
 786:	90 91 39 01 	lds	r25, 0x0139
 78a:	82 17       	cp	r24, r18
 78c:	93 07       	cpc	r25, r19
 78e:	79 f5       	brne	.+94     	; 0x7ee <free+0x92>
 790:	f0 93 39 01 	sts	0x0139, r31
 794:	e0 93 38 01 	sts	0x0138, r30
 798:	6d c0       	rjmp	.+218    	; 0x874 <free+0x118>
 79a:	de 01       	movw	r26, r28
 79c:	20 e0       	ldi	r18, 0x00	; 0
 79e:	30 e0       	ldi	r19, 0x00	; 0
 7a0:	ae 17       	cp	r26, r30
 7a2:	bf 07       	cpc	r27, r31
 7a4:	50 f4       	brcc	.+20     	; 0x7ba <free+0x5e>
 7a6:	12 96       	adiw	r26, 0x02	; 2
 7a8:	4d 91       	ld	r20, X+
 7aa:	5c 91       	ld	r21, X
 7ac:	13 97       	sbiw	r26, 0x03	; 3
 7ae:	9d 01       	movw	r18, r26
 7b0:	41 15       	cp	r20, r1
 7b2:	51 05       	cpc	r21, r1
 7b4:	09 f1       	breq	.+66     	; 0x7f8 <free+0x9c>
 7b6:	da 01       	movw	r26, r20
 7b8:	f3 cf       	rjmp	.-26     	; 0x7a0 <free+0x44>
 7ba:	b3 83       	std	Z+3, r27	; 0x03
 7bc:	a2 83       	std	Z+2, r26	; 0x02
 7be:	40 81       	ld	r20, Z
 7c0:	51 81       	ldd	r21, Z+1	; 0x01
 7c2:	84 0f       	add	r24, r20
 7c4:	95 1f       	adc	r25, r21
 7c6:	8a 17       	cp	r24, r26
 7c8:	9b 07       	cpc	r25, r27
 7ca:	71 f4       	brne	.+28     	; 0x7e8 <free+0x8c>
 7cc:	8d 91       	ld	r24, X+
 7ce:	9c 91       	ld	r25, X
 7d0:	11 97       	sbiw	r26, 0x01	; 1
 7d2:	84 0f       	add	r24, r20
 7d4:	95 1f       	adc	r25, r21
 7d6:	02 96       	adiw	r24, 0x02	; 2
 7d8:	91 83       	std	Z+1, r25	; 0x01
 7da:	80 83       	st	Z, r24
 7dc:	12 96       	adiw	r26, 0x02	; 2
 7de:	8d 91       	ld	r24, X+
 7e0:	9c 91       	ld	r25, X
 7e2:	13 97       	sbiw	r26, 0x03	; 3
 7e4:	93 83       	std	Z+3, r25	; 0x03
 7e6:	82 83       	std	Z+2, r24	; 0x02
 7e8:	21 15       	cp	r18, r1
 7ea:	31 05       	cpc	r19, r1
 7ec:	29 f4       	brne	.+10     	; 0x7f8 <free+0x9c>
 7ee:	f0 93 3b 01 	sts	0x013B, r31
 7f2:	e0 93 3a 01 	sts	0x013A, r30
 7f6:	3e c0       	rjmp	.+124    	; 0x874 <free+0x118>
 7f8:	d9 01       	movw	r26, r18
 7fa:	13 96       	adiw	r26, 0x03	; 3
 7fc:	fc 93       	st	X, r31
 7fe:	ee 93       	st	-X, r30
 800:	12 97       	sbiw	r26, 0x02	; 2
 802:	4d 91       	ld	r20, X+
 804:	5d 91       	ld	r21, X+
 806:	a4 0f       	add	r26, r20
 808:	b5 1f       	adc	r27, r21
 80a:	ea 17       	cp	r30, r26
 80c:	fb 07       	cpc	r31, r27
 80e:	79 f4       	brne	.+30     	; 0x82e <free+0xd2>
 810:	80 81       	ld	r24, Z
 812:	91 81       	ldd	r25, Z+1	; 0x01
 814:	84 0f       	add	r24, r20
 816:	95 1f       	adc	r25, r21
 818:	02 96       	adiw	r24, 0x02	; 2
 81a:	d9 01       	movw	r26, r18
 81c:	11 96       	adiw	r26, 0x01	; 1
 81e:	9c 93       	st	X, r25
 820:	8e 93       	st	-X, r24
 822:	82 81       	ldd	r24, Z+2	; 0x02
 824:	93 81       	ldd	r25, Z+3	; 0x03
 826:	13 96       	adiw	r26, 0x03	; 3
 828:	9c 93       	st	X, r25
 82a:	8e 93       	st	-X, r24
 82c:	12 97       	sbiw	r26, 0x02	; 2
 82e:	e0 e0       	ldi	r30, 0x00	; 0
 830:	f0 e0       	ldi	r31, 0x00	; 0
 832:	8a 81       	ldd	r24, Y+2	; 0x02
 834:	9b 81       	ldd	r25, Y+3	; 0x03
 836:	00 97       	sbiw	r24, 0x00	; 0
 838:	19 f0       	breq	.+6      	; 0x840 <free+0xe4>
 83a:	fe 01       	movw	r30, r28
 83c:	ec 01       	movw	r28, r24
 83e:	f9 cf       	rjmp	.-14     	; 0x832 <free+0xd6>
 840:	ce 01       	movw	r24, r28
 842:	02 96       	adiw	r24, 0x02	; 2
 844:	28 81       	ld	r18, Y
 846:	39 81       	ldd	r19, Y+1	; 0x01
 848:	82 0f       	add	r24, r18
 84a:	93 1f       	adc	r25, r19
 84c:	20 91 38 01 	lds	r18, 0x0138
 850:	30 91 39 01 	lds	r19, 0x0139
 854:	28 17       	cp	r18, r24
 856:	39 07       	cpc	r19, r25
 858:	69 f4       	brne	.+26     	; 0x874 <free+0x118>
 85a:	30 97       	sbiw	r30, 0x00	; 0
 85c:	29 f4       	brne	.+10     	; 0x868 <free+0x10c>
 85e:	10 92 3b 01 	sts	0x013B, r1
 862:	10 92 3a 01 	sts	0x013A, r1
 866:	02 c0       	rjmp	.+4      	; 0x86c <free+0x110>
 868:	13 82       	std	Z+3, r1	; 0x03
 86a:	12 82       	std	Z+2, r1	; 0x02
 86c:	d0 93 39 01 	sts	0x0139, r29
 870:	c0 93 38 01 	sts	0x0138, r28
 874:	df 91       	pop	r29
 876:	cf 91       	pop	r28
 878:	08 95       	ret

0000087a <strnlen_P>:
 87a:	fc 01       	movw	r30, r24
 87c:	05 90       	lpm	r0, Z+
 87e:	61 50       	subi	r22, 0x01	; 1
 880:	70 40       	sbci	r23, 0x00	; 0
 882:	01 10       	cpse	r0, r1
 884:	d8 f7       	brcc	.-10     	; 0x87c <strnlen_P+0x2>
 886:	80 95       	com	r24
 888:	90 95       	com	r25
 88a:	8e 0f       	add	r24, r30
 88c:	9f 1f       	adc	r25, r31
 88e:	08 95       	ret

00000890 <memset>:
 890:	dc 01       	movw	r26, r24
 892:	01 c0       	rjmp	.+2      	; 0x896 <memset+0x6>
 894:	6d 93       	st	X+, r22
 896:	41 50       	subi	r20, 0x01	; 1
 898:	50 40       	sbci	r21, 0x00	; 0
 89a:	e0 f7       	brcc	.-8      	; 0x894 <memset+0x4>
 89c:	08 95       	ret

0000089e <strnlen>:
 89e:	fc 01       	movw	r30, r24
 8a0:	61 50       	subi	r22, 0x01	; 1
 8a2:	70 40       	sbci	r23, 0x00	; 0
 8a4:	01 90       	ld	r0, Z+
 8a6:	01 10       	cpse	r0, r1
 8a8:	d8 f7       	brcc	.-10     	; 0x8a0 <strnlen+0x2>
 8aa:	80 95       	com	r24
 8ac:	90 95       	com	r25
 8ae:	8e 0f       	add	r24, r30
 8b0:	9f 1f       	adc	r25, r31
 8b2:	08 95       	ret

000008b4 <fputc>:
 8b4:	0f 93       	push	r16
 8b6:	1f 93       	push	r17
 8b8:	cf 93       	push	r28
 8ba:	df 93       	push	r29
 8bc:	18 2f       	mov	r17, r24
 8be:	09 2f       	mov	r16, r25
 8c0:	eb 01       	movw	r28, r22
 8c2:	8b 81       	ldd	r24, Y+3	; 0x03
 8c4:	81 fd       	sbrc	r24, 1
 8c6:	03 c0       	rjmp	.+6      	; 0x8ce <fputc+0x1a>
 8c8:	8f ef       	ldi	r24, 0xFF	; 255
 8ca:	9f ef       	ldi	r25, 0xFF	; 255
 8cc:	20 c0       	rjmp	.+64     	; 0x90e <fputc+0x5a>
 8ce:	82 ff       	sbrs	r24, 2
 8d0:	10 c0       	rjmp	.+32     	; 0x8f2 <fputc+0x3e>
 8d2:	4e 81       	ldd	r20, Y+6	; 0x06
 8d4:	5f 81       	ldd	r21, Y+7	; 0x07
 8d6:	2c 81       	ldd	r18, Y+4	; 0x04
 8d8:	3d 81       	ldd	r19, Y+5	; 0x05
 8da:	42 17       	cp	r20, r18
 8dc:	53 07       	cpc	r21, r19
 8de:	7c f4       	brge	.+30     	; 0x8fe <fputc+0x4a>
 8e0:	e8 81       	ld	r30, Y
 8e2:	f9 81       	ldd	r31, Y+1	; 0x01
 8e4:	9f 01       	movw	r18, r30
 8e6:	2f 5f       	subi	r18, 0xFF	; 255
 8e8:	3f 4f       	sbci	r19, 0xFF	; 255
 8ea:	39 83       	std	Y+1, r19	; 0x01
 8ec:	28 83       	st	Y, r18
 8ee:	10 83       	st	Z, r17
 8f0:	06 c0       	rjmp	.+12     	; 0x8fe <fputc+0x4a>
 8f2:	e8 85       	ldd	r30, Y+8	; 0x08
 8f4:	f9 85       	ldd	r31, Y+9	; 0x09
 8f6:	81 2f       	mov	r24, r17
 8f8:	09 95       	icall
 8fa:	89 2b       	or	r24, r25
 8fc:	29 f7       	brne	.-54     	; 0x8c8 <fputc+0x14>
 8fe:	2e 81       	ldd	r18, Y+6	; 0x06
 900:	3f 81       	ldd	r19, Y+7	; 0x07
 902:	2f 5f       	subi	r18, 0xFF	; 255
 904:	3f 4f       	sbci	r19, 0xFF	; 255
 906:	3f 83       	std	Y+7, r19	; 0x07
 908:	2e 83       	std	Y+6, r18	; 0x06
 90a:	81 2f       	mov	r24, r17
 90c:	90 2f       	mov	r25, r16
 90e:	df 91       	pop	r29
 910:	cf 91       	pop	r28
 912:	1f 91       	pop	r17
 914:	0f 91       	pop	r16
 916:	08 95       	ret

00000918 <__ultoa_invert>:
 918:	fa 01       	movw	r30, r20
 91a:	aa 27       	eor	r26, r26
 91c:	28 30       	cpi	r18, 0x08	; 8
 91e:	51 f1       	breq	.+84     	; 0x974 <__ultoa_invert+0x5c>
 920:	20 31       	cpi	r18, 0x10	; 16
 922:	81 f1       	breq	.+96     	; 0x984 <__ultoa_invert+0x6c>
 924:	e8 94       	clt
 926:	6f 93       	push	r22
 928:	6e 7f       	andi	r22, 0xFE	; 254
 92a:	6e 5f       	subi	r22, 0xFE	; 254
 92c:	7f 4f       	sbci	r23, 0xFF	; 255
 92e:	8f 4f       	sbci	r24, 0xFF	; 255
 930:	9f 4f       	sbci	r25, 0xFF	; 255
 932:	af 4f       	sbci	r26, 0xFF	; 255
 934:	b1 e0       	ldi	r27, 0x01	; 1
 936:	3e d0       	rcall	.+124    	; 0x9b4 <__ultoa_invert+0x9c>
 938:	b4 e0       	ldi	r27, 0x04	; 4
 93a:	3c d0       	rcall	.+120    	; 0x9b4 <__ultoa_invert+0x9c>
 93c:	67 0f       	add	r22, r23
 93e:	78 1f       	adc	r23, r24
 940:	89 1f       	adc	r24, r25
 942:	9a 1f       	adc	r25, r26
 944:	a1 1d       	adc	r26, r1
 946:	68 0f       	add	r22, r24
 948:	79 1f       	adc	r23, r25
 94a:	8a 1f       	adc	r24, r26
 94c:	91 1d       	adc	r25, r1
 94e:	a1 1d       	adc	r26, r1
 950:	6a 0f       	add	r22, r26
 952:	71 1d       	adc	r23, r1
 954:	81 1d       	adc	r24, r1
 956:	91 1d       	adc	r25, r1
 958:	a1 1d       	adc	r26, r1
 95a:	20 d0       	rcall	.+64     	; 0x99c <__ultoa_invert+0x84>
 95c:	09 f4       	brne	.+2      	; 0x960 <__ultoa_invert+0x48>
 95e:	68 94       	set
 960:	3f 91       	pop	r19
 962:	2a e0       	ldi	r18, 0x0A	; 10
 964:	26 9f       	mul	r18, r22
 966:	11 24       	eor	r1, r1
 968:	30 19       	sub	r19, r0
 96a:	30 5d       	subi	r19, 0xD0	; 208
 96c:	31 93       	st	Z+, r19
 96e:	de f6       	brtc	.-74     	; 0x926 <__ultoa_invert+0xe>
 970:	cf 01       	movw	r24, r30
 972:	08 95       	ret
 974:	46 2f       	mov	r20, r22
 976:	47 70       	andi	r20, 0x07	; 7
 978:	40 5d       	subi	r20, 0xD0	; 208
 97a:	41 93       	st	Z+, r20
 97c:	b3 e0       	ldi	r27, 0x03	; 3
 97e:	0f d0       	rcall	.+30     	; 0x99e <__ultoa_invert+0x86>
 980:	c9 f7       	brne	.-14     	; 0x974 <__ultoa_invert+0x5c>
 982:	f6 cf       	rjmp	.-20     	; 0x970 <__ultoa_invert+0x58>
 984:	46 2f       	mov	r20, r22
 986:	4f 70       	andi	r20, 0x0F	; 15
 988:	40 5d       	subi	r20, 0xD0	; 208
 98a:	4a 33       	cpi	r20, 0x3A	; 58
 98c:	18 f0       	brcs	.+6      	; 0x994 <__ultoa_invert+0x7c>
 98e:	49 5d       	subi	r20, 0xD9	; 217
 990:	31 fd       	sbrc	r19, 1
 992:	40 52       	subi	r20, 0x20	; 32
 994:	41 93       	st	Z+, r20
 996:	02 d0       	rcall	.+4      	; 0x99c <__ultoa_invert+0x84>
 998:	a9 f7       	brne	.-22     	; 0x984 <__ultoa_invert+0x6c>
 99a:	ea cf       	rjmp	.-44     	; 0x970 <__ultoa_invert+0x58>
 99c:	b4 e0       	ldi	r27, 0x04	; 4
 99e:	a6 95       	lsr	r26
 9a0:	97 95       	ror	r25
 9a2:	87 95       	ror	r24
 9a4:	77 95       	ror	r23
 9a6:	67 95       	ror	r22
 9a8:	ba 95       	dec	r27
 9aa:	c9 f7       	brne	.-14     	; 0x99e <__ultoa_invert+0x86>
 9ac:	00 97       	sbiw	r24, 0x00	; 0
 9ae:	61 05       	cpc	r22, r1
 9b0:	71 05       	cpc	r23, r1
 9b2:	08 95       	ret
 9b4:	9b 01       	movw	r18, r22
 9b6:	ac 01       	movw	r20, r24
 9b8:	0a 2e       	mov	r0, r26
 9ba:	06 94       	lsr	r0
 9bc:	57 95       	ror	r21
 9be:	47 95       	ror	r20
 9c0:	37 95       	ror	r19
 9c2:	27 95       	ror	r18
 9c4:	ba 95       	dec	r27
 9c6:	c9 f7       	brne	.-14     	; 0x9ba <__ultoa_invert+0xa2>
 9c8:	62 0f       	add	r22, r18
 9ca:	73 1f       	adc	r23, r19
 9cc:	84 1f       	adc	r24, r20
 9ce:	95 1f       	adc	r25, r21
 9d0:	a0 1d       	adc	r26, r0
 9d2:	08 95       	ret

000009d4 <__prologue_saves__>:
 9d4:	2f 92       	push	r2
 9d6:	3f 92       	push	r3
 9d8:	4f 92       	push	r4
 9da:	5f 92       	push	r5
 9dc:	6f 92       	push	r6
 9de:	7f 92       	push	r7
 9e0:	8f 92       	push	r8
 9e2:	9f 92       	push	r9
 9e4:	af 92       	push	r10
 9e6:	bf 92       	push	r11
 9e8:	cf 92       	push	r12
 9ea:	df 92       	push	r13
 9ec:	ef 92       	push	r14
 9ee:	ff 92       	push	r15
 9f0:	0f 93       	push	r16
 9f2:	1f 93       	push	r17
 9f4:	cf 93       	push	r28
 9f6:	df 93       	push	r29
 9f8:	cd b7       	in	r28, 0x3d	; 61
 9fa:	de b7       	in	r29, 0x3e	; 62
 9fc:	ca 1b       	sub	r28, r26
 9fe:	db 0b       	sbc	r29, r27
 a00:	0f b6       	in	r0, 0x3f	; 63
 a02:	f8 94       	cli
 a04:	de bf       	out	0x3e, r29	; 62
 a06:	0f be       	out	0x3f, r0	; 63
 a08:	cd bf       	out	0x3d, r28	; 61
 a0a:	09 94       	ijmp

00000a0c <__epilogue_restores__>:
 a0c:	2a 88       	ldd	r2, Y+18	; 0x12
 a0e:	39 88       	ldd	r3, Y+17	; 0x11
 a10:	48 88       	ldd	r4, Y+16	; 0x10
 a12:	5f 84       	ldd	r5, Y+15	; 0x0f
 a14:	6e 84       	ldd	r6, Y+14	; 0x0e
 a16:	7d 84       	ldd	r7, Y+13	; 0x0d
 a18:	8c 84       	ldd	r8, Y+12	; 0x0c
 a1a:	9b 84       	ldd	r9, Y+11	; 0x0b
 a1c:	aa 84       	ldd	r10, Y+10	; 0x0a
 a1e:	b9 84       	ldd	r11, Y+9	; 0x09
 a20:	c8 84       	ldd	r12, Y+8	; 0x08
 a22:	df 80       	ldd	r13, Y+7	; 0x07
 a24:	ee 80       	ldd	r14, Y+6	; 0x06
 a26:	fd 80       	ldd	r15, Y+5	; 0x05
 a28:	0c 81       	ldd	r16, Y+4	; 0x04
 a2a:	1b 81       	ldd	r17, Y+3	; 0x03
 a2c:	aa 81       	ldd	r26, Y+2	; 0x02
 a2e:	b9 81       	ldd	r27, Y+1	; 0x01
 a30:	ce 0f       	add	r28, r30
 a32:	d1 1d       	adc	r29, r1
 a34:	0f b6       	in	r0, 0x3f	; 63
 a36:	f8 94       	cli
 a38:	de bf       	out	0x3e, r29	; 62
 a3a:	0f be       	out	0x3f, r0	; 63
 a3c:	cd bf       	out	0x3d, r28	; 61
 a3e:	ed 01       	movw	r28, r26
 a40:	08 95       	ret

00000a42 <_exit>:
 a42:	f8 94       	cli

00000a44 <__stop_program>:
 a44:	ff cf       	rjmp	.-2      	; 0xa44 <__stop_program>
