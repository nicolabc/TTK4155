
lab1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  0000042e  000004c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000042e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800106  00800106  000004c8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004c8  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  000004f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000355  00000000  00000000  00000568  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000236  00000000  00000000  000008bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000270  00000000  00000000  00000af3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000008c  00000000  00000000  00000d64  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000216  00000000  00000000  00000df0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000026  00000000  00000000  00001006  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  0000102c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ee e2       	ldi	r30, 0x2E	; 46
  84:	f4 e0       	ldi	r31, 0x04	; 4
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 30       	cpi	r26, 0x06	; 6
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a6 e0       	ldi	r26, 0x06	; 6
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 31       	cpi	r26, 0x10	; 16
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 5e 00 	call	0xbc	; 0xbc <main>
  a6:	0c 94 15 02 	jmp	0x42a	; 0x42a <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <enableExternalMemory>:
  ae:	85 b7       	in	r24, 0x35	; 53
  b0:	80 68       	ori	r24, 0x80	; 128
  b2:	85 bf       	out	0x35, r24	; 53
  b4:	80 b7       	in	r24, 0x30	; 48
  b6:	80 62       	ori	r24, 0x20	; 32
  b8:	80 bf       	out	0x30, r24	; 48
  ba:	08 95       	ret

000000bc <main>:
//#define loop_until_bit_is_clear( reg, bit ) while( test_bit( reg, bit ) )


int main(void)
{
	USART_Init ( MYUBRR );
  bc:	8f e1       	ldi	r24, 0x1F	; 31
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	0e 94 75 00 	call	0xea	; 0xea <USART_Init>
	set_bit(DDRA,PA1);	// setter PA1 til output
  c4:	d1 9a       	sbi	0x1a, 1	; 26
	clear_bit(PORTA,PA1);	 // setter PA1 høy (så det blir 5V på utgangen til PA1)
  c6:	d9 98       	cbi	0x1b, 1	; 27
	
	set_bit(DDRE, PE1); //Lab 2, setter PE1 til output (Tror vi)
  c8:	31 9a       	sbi	0x06, 1	; 6
	set_bit(PORTE, PE1); //Lab 2, setter PE1 til høy (Latch enable)
  ca:	39 9a       	sbi	0x07, 1	; 7
	//PORTA |= (1<<PA1); // setter PA1 høy (så det blir 5V på utgangen til PA1)
	

	
	//Tester sram
	enableExternalMemory(); //Trenger vi denne alltid på???
  cc:	0e 94 57 00 	call	0xae	; 0xae <enableExternalMemory>
	set_bit(PORTC, PC0);
	*/
	
	volatile char *ext_ram = (char *) 0x13FF; //For å aksessere external IC lager vi pointer til adresse
	while(1){
		ext_ram[0] = 1; //For å faktisk gjøre noe med adressen må noe skrives dit
  d0:	ef ef       	ldi	r30, 0xFF	; 255
  d2:	f3 e1       	ldi	r31, 0x13	; 19
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	80 83       	st	Z, r24
  d8:	fe cf       	rjmp	.-4      	; 0xd6 <main+0x1a>

000000da <USART_Transmit>:
  da:	5d 9b       	sbis	0x0b, 5	; 11
  dc:	fe cf       	rjmp	.-4      	; 0xda <USART_Transmit>
  de:	8c b9       	out	0x0c, r24	; 12
  e0:	08 95       	ret

000000e2 <USART_Receive>:
  e2:	5f 9b       	sbis	0x0b, 7	; 11
  e4:	fe cf       	rjmp	.-4      	; 0xe2 <USART_Receive>
  e6:	8c b1       	in	r24, 0x0c	; 12
  e8:	08 95       	ret

000000ea <USART_Init>:
  ea:	90 bd       	out	0x20, r25	; 32
  ec:	89 b9       	out	0x09, r24	; 9
  ee:	88 e1       	ldi	r24, 0x18	; 24
  f0:	8a b9       	out	0x0a, r24	; 10
  f2:	61 e7       	ldi	r22, 0x71	; 113
  f4:	70 e0       	ldi	r23, 0x00	; 0
  f6:	8d e6       	ldi	r24, 0x6D	; 109
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	0e 94 80 00 	call	0x100	; 0x100 <fdevopen>
  fe:	08 95       	ret

00000100 <fdevopen>:
 100:	0f 93       	push	r16
 102:	1f 93       	push	r17
 104:	cf 93       	push	r28
 106:	df 93       	push	r29
 108:	ec 01       	movw	r28, r24
 10a:	8b 01       	movw	r16, r22
 10c:	00 97       	sbiw	r24, 0x00	; 0
 10e:	31 f4       	brne	.+12     	; 0x11c <fdevopen+0x1c>
 110:	61 15       	cp	r22, r1
 112:	71 05       	cpc	r23, r1
 114:	19 f4       	brne	.+6      	; 0x11c <fdevopen+0x1c>
 116:	80 e0       	ldi	r24, 0x00	; 0
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	38 c0       	rjmp	.+112    	; 0x18c <fdevopen+0x8c>
 11c:	6e e0       	ldi	r22, 0x0E	; 14
 11e:	70 e0       	ldi	r23, 0x00	; 0
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	0e 94 cb 00 	call	0x196	; 0x196 <calloc>
 128:	fc 01       	movw	r30, r24
 12a:	00 97       	sbiw	r24, 0x00	; 0
 12c:	a1 f3       	breq	.-24     	; 0x116 <fdevopen+0x16>
 12e:	80 e8       	ldi	r24, 0x80	; 128
 130:	83 83       	std	Z+3, r24	; 0x03
 132:	01 15       	cp	r16, r1
 134:	11 05       	cpc	r17, r1
 136:	71 f0       	breq	.+28     	; 0x154 <fdevopen+0x54>
 138:	13 87       	std	Z+11, r17	; 0x0b
 13a:	02 87       	std	Z+10, r16	; 0x0a
 13c:	81 e8       	ldi	r24, 0x81	; 129
 13e:	83 83       	std	Z+3, r24	; 0x03
 140:	80 91 06 01 	lds	r24, 0x0106
 144:	90 91 07 01 	lds	r25, 0x0107
 148:	89 2b       	or	r24, r25
 14a:	21 f4       	brne	.+8      	; 0x154 <fdevopen+0x54>
 14c:	f0 93 07 01 	sts	0x0107, r31
 150:	e0 93 06 01 	sts	0x0106, r30
 154:	20 97       	sbiw	r28, 0x00	; 0
 156:	c9 f0       	breq	.+50     	; 0x18a <fdevopen+0x8a>
 158:	d1 87       	std	Z+9, r29	; 0x09
 15a:	c0 87       	std	Z+8, r28	; 0x08
 15c:	83 81       	ldd	r24, Z+3	; 0x03
 15e:	82 60       	ori	r24, 0x02	; 2
 160:	83 83       	std	Z+3, r24	; 0x03
 162:	80 91 08 01 	lds	r24, 0x0108
 166:	90 91 09 01 	lds	r25, 0x0109
 16a:	89 2b       	or	r24, r25
 16c:	71 f4       	brne	.+28     	; 0x18a <fdevopen+0x8a>
 16e:	f0 93 09 01 	sts	0x0109, r31
 172:	e0 93 08 01 	sts	0x0108, r30
 176:	80 91 0a 01 	lds	r24, 0x010A
 17a:	90 91 0b 01 	lds	r25, 0x010B
 17e:	89 2b       	or	r24, r25
 180:	21 f4       	brne	.+8      	; 0x18a <fdevopen+0x8a>
 182:	f0 93 0b 01 	sts	0x010B, r31
 186:	e0 93 0a 01 	sts	0x010A, r30
 18a:	cf 01       	movw	r24, r30
 18c:	df 91       	pop	r29
 18e:	cf 91       	pop	r28
 190:	1f 91       	pop	r17
 192:	0f 91       	pop	r16
 194:	08 95       	ret

00000196 <calloc>:
 196:	0f 93       	push	r16
 198:	1f 93       	push	r17
 19a:	cf 93       	push	r28
 19c:	df 93       	push	r29
 19e:	86 9f       	mul	r24, r22
 1a0:	80 01       	movw	r16, r0
 1a2:	87 9f       	mul	r24, r23
 1a4:	10 0d       	add	r17, r0
 1a6:	96 9f       	mul	r25, r22
 1a8:	10 0d       	add	r17, r0
 1aa:	11 24       	eor	r1, r1
 1ac:	c8 01       	movw	r24, r16
 1ae:	0e 94 e7 00 	call	0x1ce	; 0x1ce <malloc>
 1b2:	ec 01       	movw	r28, r24
 1b4:	00 97       	sbiw	r24, 0x00	; 0
 1b6:	29 f0       	breq	.+10     	; 0x1c2 <calloc+0x2c>
 1b8:	a8 01       	movw	r20, r16
 1ba:	60 e0       	ldi	r22, 0x00	; 0
 1bc:	70 e0       	ldi	r23, 0x00	; 0
 1be:	0e 94 0e 02 	call	0x41c	; 0x41c <memset>
 1c2:	ce 01       	movw	r24, r28
 1c4:	df 91       	pop	r29
 1c6:	cf 91       	pop	r28
 1c8:	1f 91       	pop	r17
 1ca:	0f 91       	pop	r16
 1cc:	08 95       	ret

000001ce <malloc>:
 1ce:	cf 93       	push	r28
 1d0:	df 93       	push	r29
 1d2:	82 30       	cpi	r24, 0x02	; 2
 1d4:	91 05       	cpc	r25, r1
 1d6:	10 f4       	brcc	.+4      	; 0x1dc <malloc+0xe>
 1d8:	82 e0       	ldi	r24, 0x02	; 2
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	e0 91 0e 01 	lds	r30, 0x010E
 1e0:	f0 91 0f 01 	lds	r31, 0x010F
 1e4:	20 e0       	ldi	r18, 0x00	; 0
 1e6:	30 e0       	ldi	r19, 0x00	; 0
 1e8:	a0 e0       	ldi	r26, 0x00	; 0
 1ea:	b0 e0       	ldi	r27, 0x00	; 0
 1ec:	30 97       	sbiw	r30, 0x00	; 0
 1ee:	39 f1       	breq	.+78     	; 0x23e <malloc+0x70>
 1f0:	40 81       	ld	r20, Z
 1f2:	51 81       	ldd	r21, Z+1	; 0x01
 1f4:	48 17       	cp	r20, r24
 1f6:	59 07       	cpc	r21, r25
 1f8:	b8 f0       	brcs	.+46     	; 0x228 <malloc+0x5a>
 1fa:	48 17       	cp	r20, r24
 1fc:	59 07       	cpc	r21, r25
 1fe:	71 f4       	brne	.+28     	; 0x21c <malloc+0x4e>
 200:	82 81       	ldd	r24, Z+2	; 0x02
 202:	93 81       	ldd	r25, Z+3	; 0x03
 204:	10 97       	sbiw	r26, 0x00	; 0
 206:	29 f0       	breq	.+10     	; 0x212 <malloc+0x44>
 208:	13 96       	adiw	r26, 0x03	; 3
 20a:	9c 93       	st	X, r25
 20c:	8e 93       	st	-X, r24
 20e:	12 97       	sbiw	r26, 0x02	; 2
 210:	2c c0       	rjmp	.+88     	; 0x26a <malloc+0x9c>
 212:	90 93 0f 01 	sts	0x010F, r25
 216:	80 93 0e 01 	sts	0x010E, r24
 21a:	27 c0       	rjmp	.+78     	; 0x26a <malloc+0x9c>
 21c:	21 15       	cp	r18, r1
 21e:	31 05       	cpc	r19, r1
 220:	31 f0       	breq	.+12     	; 0x22e <malloc+0x60>
 222:	42 17       	cp	r20, r18
 224:	53 07       	cpc	r21, r19
 226:	18 f0       	brcs	.+6      	; 0x22e <malloc+0x60>
 228:	a9 01       	movw	r20, r18
 22a:	db 01       	movw	r26, r22
 22c:	01 c0       	rjmp	.+2      	; 0x230 <malloc+0x62>
 22e:	ef 01       	movw	r28, r30
 230:	9a 01       	movw	r18, r20
 232:	bd 01       	movw	r22, r26
 234:	df 01       	movw	r26, r30
 236:	02 80       	ldd	r0, Z+2	; 0x02
 238:	f3 81       	ldd	r31, Z+3	; 0x03
 23a:	e0 2d       	mov	r30, r0
 23c:	d7 cf       	rjmp	.-82     	; 0x1ec <malloc+0x1e>
 23e:	21 15       	cp	r18, r1
 240:	31 05       	cpc	r19, r1
 242:	f9 f0       	breq	.+62     	; 0x282 <malloc+0xb4>
 244:	28 1b       	sub	r18, r24
 246:	39 0b       	sbc	r19, r25
 248:	24 30       	cpi	r18, 0x04	; 4
 24a:	31 05       	cpc	r19, r1
 24c:	80 f4       	brcc	.+32     	; 0x26e <malloc+0xa0>
 24e:	8a 81       	ldd	r24, Y+2	; 0x02
 250:	9b 81       	ldd	r25, Y+3	; 0x03
 252:	61 15       	cp	r22, r1
 254:	71 05       	cpc	r23, r1
 256:	21 f0       	breq	.+8      	; 0x260 <malloc+0x92>
 258:	fb 01       	movw	r30, r22
 25a:	93 83       	std	Z+3, r25	; 0x03
 25c:	82 83       	std	Z+2, r24	; 0x02
 25e:	04 c0       	rjmp	.+8      	; 0x268 <malloc+0x9a>
 260:	90 93 0f 01 	sts	0x010F, r25
 264:	80 93 0e 01 	sts	0x010E, r24
 268:	fe 01       	movw	r30, r28
 26a:	32 96       	adiw	r30, 0x02	; 2
 26c:	44 c0       	rjmp	.+136    	; 0x2f6 <malloc+0x128>
 26e:	fe 01       	movw	r30, r28
 270:	e2 0f       	add	r30, r18
 272:	f3 1f       	adc	r31, r19
 274:	81 93       	st	Z+, r24
 276:	91 93       	st	Z+, r25
 278:	22 50       	subi	r18, 0x02	; 2
 27a:	31 09       	sbc	r19, r1
 27c:	39 83       	std	Y+1, r19	; 0x01
 27e:	28 83       	st	Y, r18
 280:	3a c0       	rjmp	.+116    	; 0x2f6 <malloc+0x128>
 282:	20 91 0c 01 	lds	r18, 0x010C
 286:	30 91 0d 01 	lds	r19, 0x010D
 28a:	23 2b       	or	r18, r19
 28c:	41 f4       	brne	.+16     	; 0x29e <malloc+0xd0>
 28e:	20 91 02 01 	lds	r18, 0x0102
 292:	30 91 03 01 	lds	r19, 0x0103
 296:	30 93 0d 01 	sts	0x010D, r19
 29a:	20 93 0c 01 	sts	0x010C, r18
 29e:	20 91 00 01 	lds	r18, 0x0100
 2a2:	30 91 01 01 	lds	r19, 0x0101
 2a6:	21 15       	cp	r18, r1
 2a8:	31 05       	cpc	r19, r1
 2aa:	41 f4       	brne	.+16     	; 0x2bc <malloc+0xee>
 2ac:	2d b7       	in	r18, 0x3d	; 61
 2ae:	3e b7       	in	r19, 0x3e	; 62
 2b0:	40 91 04 01 	lds	r20, 0x0104
 2b4:	50 91 05 01 	lds	r21, 0x0105
 2b8:	24 1b       	sub	r18, r20
 2ba:	35 0b       	sbc	r19, r21
 2bc:	e0 91 0c 01 	lds	r30, 0x010C
 2c0:	f0 91 0d 01 	lds	r31, 0x010D
 2c4:	e2 17       	cp	r30, r18
 2c6:	f3 07       	cpc	r31, r19
 2c8:	a0 f4       	brcc	.+40     	; 0x2f2 <malloc+0x124>
 2ca:	2e 1b       	sub	r18, r30
 2cc:	3f 0b       	sbc	r19, r31
 2ce:	28 17       	cp	r18, r24
 2d0:	39 07       	cpc	r19, r25
 2d2:	78 f0       	brcs	.+30     	; 0x2f2 <malloc+0x124>
 2d4:	ac 01       	movw	r20, r24
 2d6:	4e 5f       	subi	r20, 0xFE	; 254
 2d8:	5f 4f       	sbci	r21, 0xFF	; 255
 2da:	24 17       	cp	r18, r20
 2dc:	35 07       	cpc	r19, r21
 2de:	48 f0       	brcs	.+18     	; 0x2f2 <malloc+0x124>
 2e0:	4e 0f       	add	r20, r30
 2e2:	5f 1f       	adc	r21, r31
 2e4:	50 93 0d 01 	sts	0x010D, r21
 2e8:	40 93 0c 01 	sts	0x010C, r20
 2ec:	81 93       	st	Z+, r24
 2ee:	91 93       	st	Z+, r25
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <malloc+0x128>
 2f2:	e0 e0       	ldi	r30, 0x00	; 0
 2f4:	f0 e0       	ldi	r31, 0x00	; 0
 2f6:	cf 01       	movw	r24, r30
 2f8:	df 91       	pop	r29
 2fa:	cf 91       	pop	r28
 2fc:	08 95       	ret

000002fe <free>:
 2fe:	cf 93       	push	r28
 300:	df 93       	push	r29
 302:	00 97       	sbiw	r24, 0x00	; 0
 304:	09 f4       	brne	.+2      	; 0x308 <free+0xa>
 306:	87 c0       	rjmp	.+270    	; 0x416 <free+0x118>
 308:	fc 01       	movw	r30, r24
 30a:	32 97       	sbiw	r30, 0x02	; 2
 30c:	13 82       	std	Z+3, r1	; 0x03
 30e:	12 82       	std	Z+2, r1	; 0x02
 310:	c0 91 0e 01 	lds	r28, 0x010E
 314:	d0 91 0f 01 	lds	r29, 0x010F
 318:	20 97       	sbiw	r28, 0x00	; 0
 31a:	81 f4       	brne	.+32     	; 0x33c <free+0x3e>
 31c:	20 81       	ld	r18, Z
 31e:	31 81       	ldd	r19, Z+1	; 0x01
 320:	28 0f       	add	r18, r24
 322:	39 1f       	adc	r19, r25
 324:	80 91 0c 01 	lds	r24, 0x010C
 328:	90 91 0d 01 	lds	r25, 0x010D
 32c:	82 17       	cp	r24, r18
 32e:	93 07       	cpc	r25, r19
 330:	79 f5       	brne	.+94     	; 0x390 <free+0x92>
 332:	f0 93 0d 01 	sts	0x010D, r31
 336:	e0 93 0c 01 	sts	0x010C, r30
 33a:	6d c0       	rjmp	.+218    	; 0x416 <free+0x118>
 33c:	de 01       	movw	r26, r28
 33e:	20 e0       	ldi	r18, 0x00	; 0
 340:	30 e0       	ldi	r19, 0x00	; 0
 342:	ae 17       	cp	r26, r30
 344:	bf 07       	cpc	r27, r31
 346:	50 f4       	brcc	.+20     	; 0x35c <free+0x5e>
 348:	12 96       	adiw	r26, 0x02	; 2
 34a:	4d 91       	ld	r20, X+
 34c:	5c 91       	ld	r21, X
 34e:	13 97       	sbiw	r26, 0x03	; 3
 350:	9d 01       	movw	r18, r26
 352:	41 15       	cp	r20, r1
 354:	51 05       	cpc	r21, r1
 356:	09 f1       	breq	.+66     	; 0x39a <free+0x9c>
 358:	da 01       	movw	r26, r20
 35a:	f3 cf       	rjmp	.-26     	; 0x342 <free+0x44>
 35c:	b3 83       	std	Z+3, r27	; 0x03
 35e:	a2 83       	std	Z+2, r26	; 0x02
 360:	40 81       	ld	r20, Z
 362:	51 81       	ldd	r21, Z+1	; 0x01
 364:	84 0f       	add	r24, r20
 366:	95 1f       	adc	r25, r21
 368:	8a 17       	cp	r24, r26
 36a:	9b 07       	cpc	r25, r27
 36c:	71 f4       	brne	.+28     	; 0x38a <free+0x8c>
 36e:	8d 91       	ld	r24, X+
 370:	9c 91       	ld	r25, X
 372:	11 97       	sbiw	r26, 0x01	; 1
 374:	84 0f       	add	r24, r20
 376:	95 1f       	adc	r25, r21
 378:	02 96       	adiw	r24, 0x02	; 2
 37a:	91 83       	std	Z+1, r25	; 0x01
 37c:	80 83       	st	Z, r24
 37e:	12 96       	adiw	r26, 0x02	; 2
 380:	8d 91       	ld	r24, X+
 382:	9c 91       	ld	r25, X
 384:	13 97       	sbiw	r26, 0x03	; 3
 386:	93 83       	std	Z+3, r25	; 0x03
 388:	82 83       	std	Z+2, r24	; 0x02
 38a:	21 15       	cp	r18, r1
 38c:	31 05       	cpc	r19, r1
 38e:	29 f4       	brne	.+10     	; 0x39a <free+0x9c>
 390:	f0 93 0f 01 	sts	0x010F, r31
 394:	e0 93 0e 01 	sts	0x010E, r30
 398:	3e c0       	rjmp	.+124    	; 0x416 <free+0x118>
 39a:	d9 01       	movw	r26, r18
 39c:	13 96       	adiw	r26, 0x03	; 3
 39e:	fc 93       	st	X, r31
 3a0:	ee 93       	st	-X, r30
 3a2:	12 97       	sbiw	r26, 0x02	; 2
 3a4:	4d 91       	ld	r20, X+
 3a6:	5d 91       	ld	r21, X+
 3a8:	a4 0f       	add	r26, r20
 3aa:	b5 1f       	adc	r27, r21
 3ac:	ea 17       	cp	r30, r26
 3ae:	fb 07       	cpc	r31, r27
 3b0:	79 f4       	brne	.+30     	; 0x3d0 <free+0xd2>
 3b2:	80 81       	ld	r24, Z
 3b4:	91 81       	ldd	r25, Z+1	; 0x01
 3b6:	84 0f       	add	r24, r20
 3b8:	95 1f       	adc	r25, r21
 3ba:	02 96       	adiw	r24, 0x02	; 2
 3bc:	d9 01       	movw	r26, r18
 3be:	11 96       	adiw	r26, 0x01	; 1
 3c0:	9c 93       	st	X, r25
 3c2:	8e 93       	st	-X, r24
 3c4:	82 81       	ldd	r24, Z+2	; 0x02
 3c6:	93 81       	ldd	r25, Z+3	; 0x03
 3c8:	13 96       	adiw	r26, 0x03	; 3
 3ca:	9c 93       	st	X, r25
 3cc:	8e 93       	st	-X, r24
 3ce:	12 97       	sbiw	r26, 0x02	; 2
 3d0:	e0 e0       	ldi	r30, 0x00	; 0
 3d2:	f0 e0       	ldi	r31, 0x00	; 0
 3d4:	8a 81       	ldd	r24, Y+2	; 0x02
 3d6:	9b 81       	ldd	r25, Y+3	; 0x03
 3d8:	00 97       	sbiw	r24, 0x00	; 0
 3da:	19 f0       	breq	.+6      	; 0x3e2 <free+0xe4>
 3dc:	fe 01       	movw	r30, r28
 3de:	ec 01       	movw	r28, r24
 3e0:	f9 cf       	rjmp	.-14     	; 0x3d4 <free+0xd6>
 3e2:	ce 01       	movw	r24, r28
 3e4:	02 96       	adiw	r24, 0x02	; 2
 3e6:	28 81       	ld	r18, Y
 3e8:	39 81       	ldd	r19, Y+1	; 0x01
 3ea:	82 0f       	add	r24, r18
 3ec:	93 1f       	adc	r25, r19
 3ee:	20 91 0c 01 	lds	r18, 0x010C
 3f2:	30 91 0d 01 	lds	r19, 0x010D
 3f6:	28 17       	cp	r18, r24
 3f8:	39 07       	cpc	r19, r25
 3fa:	69 f4       	brne	.+26     	; 0x416 <free+0x118>
 3fc:	30 97       	sbiw	r30, 0x00	; 0
 3fe:	29 f4       	brne	.+10     	; 0x40a <free+0x10c>
 400:	10 92 0f 01 	sts	0x010F, r1
 404:	10 92 0e 01 	sts	0x010E, r1
 408:	02 c0       	rjmp	.+4      	; 0x40e <free+0x110>
 40a:	13 82       	std	Z+3, r1	; 0x03
 40c:	12 82       	std	Z+2, r1	; 0x02
 40e:	d0 93 0d 01 	sts	0x010D, r29
 412:	c0 93 0c 01 	sts	0x010C, r28
 416:	df 91       	pop	r29
 418:	cf 91       	pop	r28
 41a:	08 95       	ret

0000041c <memset>:
 41c:	dc 01       	movw	r26, r24
 41e:	01 c0       	rjmp	.+2      	; 0x422 <memset+0x6>
 420:	6d 93       	st	X+, r22
 422:	41 50       	subi	r20, 0x01	; 1
 424:	50 40       	sbci	r21, 0x00	; 0
 426:	e0 f7       	brcc	.-8      	; 0x420 <memset+0x4>
 428:	08 95       	ret

0000042a <_exit>:
 42a:	f8 94       	cli

0000042c <__stop_program>:
 42c:	ff cf       	rjmp	.-2      	; 0x42c <__stop_program>
