
lab1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c4  00800100  00000e16  00000eaa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e16  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  008001c4  008001c4  00000f6e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f6e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001b8  00000000  00000000  00000fca  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001c86  00000000  00000000  00001182  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a63  00000000  00000000  00002e08  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000ad6  00000000  00000000  0000386b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000414  00000000  00000000  00004344  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000062b  00000000  00000000  00004758  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001447  00000000  00000000  00004d83  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000158  00000000  00000000  000061ca  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e6 e1       	ldi	r30, 0x16	; 22
  84:	fe e0       	ldi	r31, 0x0E	; 14
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a4 3c       	cpi	r26, 0xC4	; 196
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a4 ec       	ldi	r26, 0xC4	; 196
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a6 3d       	cpi	r26, 0xD6	; 214
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 65 00 	call	0xca	; 0xca <main>
  a6:	0c 94 09 07 	jmp	0xe12	; 0xe12 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <adc_init>:
  ae:	30 98       	cbi	0x06, 0	; 6
  b0:	08 95       	ret

000000b2 <avr_init>:
  b2:	b8 98       	cbi	0x17, 0	; 23
  b4:	b9 98       	cbi	0x17, 1	; 23
  b6:	ba 98       	cbi	0x17, 2	; 23
  b8:	c2 9a       	sbi	0x18, 2	; 24
  ba:	08 95       	ret

000000bc <extMem_init>:
  bc:	85 b7       	in	r24, 0x35	; 53
  be:	80 68       	ori	r24, 0x80	; 128
  c0:	85 bf       	out	0x35, r24	; 53
  c2:	80 b7       	in	r24, 0x30	; 48
  c4:	80 62       	ori	r24, 0x20	; 32
  c6:	80 bf       	out	0x30, r24	; 48
  c8:	08 95       	ret

000000ca <main>:


int main(void)
{
	
	USART_Init(MYUBRR);
  ca:	8f e1       	ldi	r24, 0x1F	; 31
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	0e 94 79 02 	call	0x4f2	; 0x4f2 <USART_Init>
	extMem_init(); 
  d2:	0e 94 5e 00 	call	0xbc	; 0xbc <extMem_init>
	avr_init();
  d6:	0e 94 59 00 	call	0xb2	; 0xb2 <avr_init>
	adc_init();
  da:	0e 94 57 00 	call	0xae	; 0xae <adc_init>
	oled_init();
  de:	0e 94 1a 02 	call	0x434	; 0x434 <oled_init>
	oled_clear_screen();
  e2:	0e 94 01 02 	call	0x402	; 0x402 <oled_clear_screen>
	menu_init();
  e6:	0e 94 a9 00 	call	0x152	; 0x152 <menu_init>
	spi_MasterInit();
  ea:	0e 94 4c 02 	call	0x498	; 0x498 <spi_MasterInit>
	
	//oled_refresh(); //Usikkert om denne trengs eller ikke fordi forrige initialisering huskes i SRAM
	
	printf("Tâz1\n");
  ee:	86 e0       	ldi	r24, 0x06	; 6
  f0:	91 e0       	ldi	r25, 0x01	; 1
  f2:	0e 94 0a 04 	call	0x814	; 0x814 <puts>
	spi_MasterTransmit(MCP_WRITE, 1); //Velger instruction
  f6:	61 e0       	ldi	r22, 0x01	; 1
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	0e 94 55 02 	call	0x4aa	; 0x4aa <spi_MasterTransmit>
	
	spi_MasterTransmit(MCP_TXB0SIDH , 1); //Velger adresse 0b00110001
  fe:	61 e0       	ldi	r22, 0x01	; 1
 100:	81 e3       	ldi	r24, 0x31	; 49
 102:	0e 94 55 02 	call	0x4aa	; 0x4aa <spi_MasterTransmit>
	
	spi_MasterTransmit(0xAA, 0); //Velger data som sendes
 106:	60 e0       	ldi	r22, 0x00	; 0
 108:	8a ea       	ldi	r24, 0xAA	; 170
 10a:	0e 94 55 02 	call	0x4aa	; 0x4aa <spi_MasterTransmit>
	while(1){
			spi_MasterTransmit(MCP_READ, 1);
			spi_MasterTransmit(MCP_TXB0SIDH, 1);
			uint8_t returnedData = spi_MasterTransmit(0x00, 0);
			
			printf("Returnert verdi %02X\n", returnedData);
 10e:	cb e0       	ldi	r28, 0x0B	; 11
 110:	d1 e0       	ldi	r29, 0x01	; 1
	spi_MasterTransmit(MCP_TXB0SIDH , 1); //Velger adresse 0b00110001
	
	spi_MasterTransmit(0xAA, 0); //Velger data som sendes
	
	while(1){
			spi_MasterTransmit(MCP_READ, 1);
 112:	61 e0       	ldi	r22, 0x01	; 1
 114:	83 e0       	ldi	r24, 0x03	; 3
 116:	0e 94 55 02 	call	0x4aa	; 0x4aa <spi_MasterTransmit>
			spi_MasterTransmit(MCP_TXB0SIDH, 1);
 11a:	61 e0       	ldi	r22, 0x01	; 1
 11c:	81 e3       	ldi	r24, 0x31	; 49
 11e:	0e 94 55 02 	call	0x4aa	; 0x4aa <spi_MasterTransmit>
			uint8_t returnedData = spi_MasterTransmit(0x00, 0);
 122:	60 e0       	ldi	r22, 0x00	; 0
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	0e 94 55 02 	call	0x4aa	; 0x4aa <spi_MasterTransmit>
			
			printf("Returnert verdi %02X\n", returnedData);
 12a:	1f 92       	push	r1
 12c:	8f 93       	push	r24
 12e:	df 93       	push	r29
 130:	cf 93       	push	r28
 132:	0e 94 f6 03 	call	0x7ec	; 0x7ec <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 136:	9f ef       	ldi	r25, 0xFF	; 255
 138:	2f ef       	ldi	r18, 0xFF	; 255
 13a:	8e e0       	ldi	r24, 0x0E	; 14
 13c:	91 50       	subi	r25, 0x01	; 1
 13e:	20 40       	sbci	r18, 0x00	; 0
 140:	80 40       	sbci	r24, 0x00	; 0
 142:	e1 f7       	brne	.-8      	; 0x13c <main+0x72>
 144:	00 c0       	rjmp	.+0      	; 0x146 <main+0x7c>
 146:	00 00       	nop
 148:	0f 90       	pop	r0
 14a:	0f 90       	pop	r0
 14c:	0f 90       	pop	r0
 14e:	0f 90       	pop	r0
 150:	e0 cf       	rjmp	.-64     	; 0x112 <main+0x48>

00000152 <menu_init>:

node_t* currentSelection;
node_t* currentHead;
node_t* developers;

void menu_init(void){
 152:	2f 92       	push	r2
 154:	3f 92       	push	r3
 156:	4f 92       	push	r4
 158:	5f 92       	push	r5
 15a:	6f 92       	push	r6
 15c:	7f 92       	push	r7
 15e:	8f 92       	push	r8
 160:	9f 92       	push	r9
 162:	af 92       	push	r10
 164:	bf 92       	push	r11
 166:	cf 92       	push	r12
 168:	df 92       	push	r13
 16a:	ef 92       	push	r14
 16c:	ff 92       	push	r15
 16e:	0f 93       	push	r16
 170:	1f 93       	push	r17
 172:	cf 93       	push	r28
 174:	df 93       	push	r29
 176:	00 d0       	rcall	.+0      	; 0x178 <menu_init+0x26>
 178:	00 d0       	rcall	.+0      	; 0x17a <menu_init+0x28>
 17a:	00 d0       	rcall	.+0      	; 0x17c <menu_init+0x2a>
 17c:	cd b7       	in	r28, 0x3d	; 61
 17e:	de b7       	in	r29, 0x3e	; 62
	
	
	node_t* newgame = malloc(sizeof(node_t)); //For å allokere nok minne av størrelse node_t
 180:	8a e0       	ldi	r24, 0x0A	; 10
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	0e 94 84 02 	call	0x508	; 0x508 <malloc>
 188:	9e 83       	std	Y+6, r25	; 0x06
 18a:	8d 83       	std	Y+5, r24	; 0x05
		node_t* easy = malloc(sizeof(node_t));
 18c:	8a e0       	ldi	r24, 0x0A	; 10
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	0e 94 84 02 	call	0x508	; 0x508 <malloc>
 194:	4c 01       	movw	r8, r24
		node_t* normal = malloc(sizeof(node_t));
 196:	8a e0       	ldi	r24, 0x0A	; 10
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	0e 94 84 02 	call	0x508	; 0x508 <malloc>
 19e:	5c 01       	movw	r10, r24
		node_t* hard = malloc(sizeof(node_t));
 1a0:	8a e0       	ldi	r24, 0x0A	; 10
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	0e 94 84 02 	call	0x508	; 0x508 <malloc>
 1a8:	9a 83       	std	Y+2, r25	; 0x02
 1aa:	89 83       	std	Y+1, r24	; 0x01
	
	node_t* highscore = malloc(sizeof(node_t));
 1ac:	8a e0       	ldi	r24, 0x0A	; 10
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	0e 94 84 02 	call	0x508	; 0x508 <malloc>
 1b4:	6c 01       	movw	r12, r24
	node_t* options = malloc(sizeof(node_t));
 1b6:	8a e0       	ldi	r24, 0x0A	; 10
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	0e 94 84 02 	call	0x508	; 0x508 <malloc>
 1be:	8c 01       	movw	r16, r24
		node_t* sound = malloc(sizeof(node_t));
 1c0:	8a e0       	ldi	r24, 0x0A	; 10
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	0e 94 84 02 	call	0x508	; 0x508 <malloc>
 1c8:	7c 01       	movw	r14, r24
			node_t* sound_on = malloc(sizeof(node_t));
 1ca:	8a e0       	ldi	r24, 0x0A	; 10
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	0e 94 84 02 	call	0x508	; 0x508 <malloc>
 1d2:	2c 01       	movw	r4, r24
			node_t* sound_off = malloc(sizeof(node_t));
 1d4:	8a e0       	ldi	r24, 0x0A	; 10
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	0e 94 84 02 	call	0x508	; 0x508 <malloc>
 1dc:	9c 83       	std	Y+4, r25	; 0x04
 1de:	8b 83       	std	Y+3, r24	; 0x03
		node_t* sensitivity = malloc(sizeof(node_t));
 1e0:	8a e0       	ldi	r24, 0x0A	; 10
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	0e 94 84 02 	call	0x508	; 0x508 <malloc>
 1e8:	3c 01       	movw	r6, r24
	
	node_t* credits = malloc(sizeof(node_t));
 1ea:	8a e0       	ldi	r24, 0x0A	; 10
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	0e 94 84 02 	call	0x508	; 0x508 <malloc>
 1f2:	1c 01       	movw	r2, r24
		developers = malloc(sizeof(node_t));
 1f4:	8a e0       	ldi	r24, 0x0A	; 10
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	0e 94 84 02 	call	0x508	; 0x508 <malloc>
 1fc:	9c 01       	movw	r18, r24
 1fe:	90 93 c7 01 	sts	0x01C7, r25
 202:	80 93 c6 01 	sts	0x01C6, r24
	
	currentHead = malloc(sizeof(node_t));
	currentSelection = malloc(sizeof(node_t));
	
	
	currentHead = newgame;
 206:	8d 81       	ldd	r24, Y+5	; 0x05
 208:	9e 81       	ldd	r25, Y+6	; 0x06
 20a:	90 93 c9 01 	sts	0x01C9, r25
 20e:	80 93 c8 01 	sts	0x01C8, r24
	//currentSelection = DER PILEN DIN PEKER NÅ
	currentSelection = newgame;
 212:	90 93 c5 01 	sts	0x01C5, r25
 216:	80 93 c4 01 	sts	0x01C4, r24
		menu_defineMenuEntries(developers,"Daniel Tavakoli          Nicolas Carbone          Byggern Autumn 2017",NULL,NULL,NULL,credits);
		
}

void menu_defineMenuEntries(node_t* myNode, char* nodeName, node_t* next, node_t* previous, node_t* child, node_t* parent){
	myNode->name = nodeName;
 21a:	81 e2       	ldi	r24, 0x21	; 33
 21c:	91 e0       	ldi	r25, 0x01	; 1
 21e:	ad 81       	ldd	r26, Y+5	; 0x05
 220:	be 81       	ldd	r27, Y+6	; 0x06
 222:	11 96       	adiw	r26, 0x01	; 1
 224:	9c 93       	st	X, r25
 226:	8e 93       	st	-X, r24
	myNode->previous = previous;
 228:	15 96       	adiw	r26, 0x05	; 5
 22a:	1c 92       	st	X, r1
 22c:	1e 92       	st	-X, r1
 22e:	14 97       	sbiw	r26, 0x04	; 4
	myNode->next = next;
 230:	13 96       	adiw	r26, 0x03	; 3
 232:	dc 92       	st	X, r13
 234:	ce 92       	st	-X, r12
 236:	12 97       	sbiw	r26, 0x02	; 2
	myNode->child = child;
 238:	17 96       	adiw	r26, 0x07	; 7
 23a:	9c 92       	st	X, r9
 23c:	8e 92       	st	-X, r8
 23e:	16 97       	sbiw	r26, 0x06	; 6
	myNode->parent = parent;
 240:	19 96       	adiw	r26, 0x09	; 9
 242:	1c 92       	st	X, r1
 244:	1e 92       	st	-X, r1
 246:	18 97       	sbiw	r26, 0x08	; 8
		menu_defineMenuEntries(developers,"Daniel Tavakoli          Nicolas Carbone          Byggern Autumn 2017",NULL,NULL,NULL,credits);
		
}

void menu_defineMenuEntries(node_t* myNode, char* nodeName, node_t* next, node_t* previous, node_t* child, node_t* parent){
	myNode->name = nodeName;
 248:	8a e2       	ldi	r24, 0x2A	; 42
 24a:	91 e0       	ldi	r25, 0x01	; 1
 24c:	f4 01       	movw	r30, r8
 24e:	91 83       	std	Z+1, r25	; 0x01
 250:	80 83       	st	Z, r24
	myNode->previous = previous;
 252:	15 82       	std	Z+5, r1	; 0x05
 254:	14 82       	std	Z+4, r1	; 0x04
	myNode->next = next;
 256:	b3 82       	std	Z+3, r11	; 0x03
 258:	a2 82       	std	Z+2, r10	; 0x02
	myNode->child = child;
 25a:	17 82       	std	Z+7, r1	; 0x07
 25c:	16 82       	std	Z+6, r1	; 0x06
	myNode->parent = parent;
 25e:	b1 87       	std	Z+9, r27	; 0x09
 260:	a0 87       	std	Z+8, r26	; 0x08
		menu_defineMenuEntries(developers,"Daniel Tavakoli          Nicolas Carbone          Byggern Autumn 2017",NULL,NULL,NULL,credits);
		
}

void menu_defineMenuEntries(node_t* myNode, char* nodeName, node_t* next, node_t* previous, node_t* child, node_t* parent){
	myNode->name = nodeName;
 262:	8f e2       	ldi	r24, 0x2F	; 47
 264:	91 e0       	ldi	r25, 0x01	; 1
 266:	d5 01       	movw	r26, r10
 268:	11 96       	adiw	r26, 0x01	; 1
 26a:	9c 93       	st	X, r25
 26c:	8e 93       	st	-X, r24
	myNode->previous = previous;
 26e:	15 96       	adiw	r26, 0x05	; 5
 270:	9c 92       	st	X, r9
 272:	8e 92       	st	-X, r8
 274:	14 97       	sbiw	r26, 0x04	; 4
	myNode->next = next;
 276:	e9 81       	ldd	r30, Y+1	; 0x01
 278:	fa 81       	ldd	r31, Y+2	; 0x02
 27a:	13 96       	adiw	r26, 0x03	; 3
 27c:	fc 93       	st	X, r31
 27e:	ee 93       	st	-X, r30
 280:	12 97       	sbiw	r26, 0x02	; 2
	myNode->child = child;
 282:	17 96       	adiw	r26, 0x07	; 7
 284:	1c 92       	st	X, r1
 286:	1e 92       	st	-X, r1
 288:	16 97       	sbiw	r26, 0x06	; 6
	myNode->parent = parent;
 28a:	8d 81       	ldd	r24, Y+5	; 0x05
 28c:	9e 81       	ldd	r25, Y+6	; 0x06
 28e:	19 96       	adiw	r26, 0x09	; 9
 290:	9c 93       	st	X, r25
 292:	8e 93       	st	-X, r24
 294:	18 97       	sbiw	r26, 0x08	; 8
		menu_defineMenuEntries(developers,"Daniel Tavakoli          Nicolas Carbone          Byggern Autumn 2017",NULL,NULL,NULL,credits);
		
}

void menu_defineMenuEntries(node_t* myNode, char* nodeName, node_t* next, node_t* previous, node_t* child, node_t* parent){
	myNode->name = nodeName;
 296:	86 e3       	ldi	r24, 0x36	; 54
 298:	91 e0       	ldi	r25, 0x01	; 1
 29a:	91 83       	std	Z+1, r25	; 0x01
 29c:	80 83       	st	Z, r24
	myNode->previous = previous;
 29e:	b5 82       	std	Z+5, r11	; 0x05
 2a0:	a4 82       	std	Z+4, r10	; 0x04
	myNode->next = next;
 2a2:	13 82       	std	Z+3, r1	; 0x03
 2a4:	12 82       	std	Z+2, r1	; 0x02
	myNode->child = child;
 2a6:	17 82       	std	Z+7, r1	; 0x07
 2a8:	16 82       	std	Z+6, r1	; 0x06
	myNode->parent = parent;
 2aa:	ad 81       	ldd	r26, Y+5	; 0x05
 2ac:	be 81       	ldd	r27, Y+6	; 0x06
 2ae:	b1 87       	std	Z+9, r27	; 0x09
 2b0:	a0 87       	std	Z+8, r26	; 0x08
		menu_defineMenuEntries(developers,"Daniel Tavakoli          Nicolas Carbone          Byggern Autumn 2017",NULL,NULL,NULL,credits);
		
}

void menu_defineMenuEntries(node_t* myNode, char* nodeName, node_t* next, node_t* previous, node_t* child, node_t* parent){
	myNode->name = nodeName;
 2b2:	8b e3       	ldi	r24, 0x3B	; 59
 2b4:	91 e0       	ldi	r25, 0x01	; 1
 2b6:	f6 01       	movw	r30, r12
 2b8:	91 83       	std	Z+1, r25	; 0x01
 2ba:	80 83       	st	Z, r24
	myNode->previous = previous;
 2bc:	b5 83       	std	Z+5, r27	; 0x05
 2be:	a4 83       	std	Z+4, r26	; 0x04
	myNode->next = next;
 2c0:	13 83       	std	Z+3, r17	; 0x03
 2c2:	02 83       	std	Z+2, r16	; 0x02
	myNode->child = child;
 2c4:	17 82       	std	Z+7, r1	; 0x07
 2c6:	16 82       	std	Z+6, r1	; 0x06
	myNode->parent = parent;
 2c8:	11 86       	std	Z+9, r1	; 0x09
 2ca:	10 86       	std	Z+8, r1	; 0x08
		menu_defineMenuEntries(developers,"Daniel Tavakoli          Nicolas Carbone          Byggern Autumn 2017",NULL,NULL,NULL,credits);
		
}

void menu_defineMenuEntries(node_t* myNode, char* nodeName, node_t* next, node_t* previous, node_t* child, node_t* parent){
	myNode->name = nodeName;
 2cc:	85 e4       	ldi	r24, 0x45	; 69
 2ce:	91 e0       	ldi	r25, 0x01	; 1
 2d0:	d8 01       	movw	r26, r16
 2d2:	11 96       	adiw	r26, 0x01	; 1
 2d4:	9c 93       	st	X, r25
 2d6:	8e 93       	st	-X, r24
	myNode->previous = previous;
 2d8:	15 96       	adiw	r26, 0x05	; 5
 2da:	dc 92       	st	X, r13
 2dc:	ce 92       	st	-X, r12
 2de:	14 97       	sbiw	r26, 0x04	; 4
	myNode->next = next;
 2e0:	13 96       	adiw	r26, 0x03	; 3
 2e2:	3c 92       	st	X, r3
 2e4:	2e 92       	st	-X, r2
 2e6:	12 97       	sbiw	r26, 0x02	; 2
	myNode->child = child;
 2e8:	17 96       	adiw	r26, 0x07	; 7
 2ea:	7c 92       	st	X, r7
 2ec:	6e 92       	st	-X, r6
 2ee:	16 97       	sbiw	r26, 0x06	; 6
	myNode->parent = parent;
 2f0:	19 96       	adiw	r26, 0x09	; 9
 2f2:	1c 92       	st	X, r1
 2f4:	1e 92       	st	-X, r1
 2f6:	18 97       	sbiw	r26, 0x08	; 8
		menu_defineMenuEntries(developers,"Daniel Tavakoli          Nicolas Carbone          Byggern Autumn 2017",NULL,NULL,NULL,credits);
		
}

void menu_defineMenuEntries(node_t* myNode, char* nodeName, node_t* next, node_t* previous, node_t* child, node_t* parent){
	myNode->name = nodeName;
 2f8:	8d e4       	ldi	r24, 0x4D	; 77
 2fa:	91 e0       	ldi	r25, 0x01	; 1
 2fc:	f3 01       	movw	r30, r6
 2fe:	91 83       	std	Z+1, r25	; 0x01
 300:	80 83       	st	Z, r24
	myNode->previous = previous;
 302:	15 82       	std	Z+5, r1	; 0x05
 304:	14 82       	std	Z+4, r1	; 0x04
	myNode->next = next;
 306:	f3 82       	std	Z+3, r15	; 0x03
 308:	e2 82       	std	Z+2, r14	; 0x02
	myNode->child = child;
 30a:	17 82       	std	Z+7, r1	; 0x07
 30c:	16 82       	std	Z+6, r1	; 0x06
	myNode->parent = parent;
 30e:	11 87       	std	Z+9, r17	; 0x09
 310:	00 87       	std	Z+8, r16	; 0x08
		menu_defineMenuEntries(developers,"Daniel Tavakoli          Nicolas Carbone          Byggern Autumn 2017",NULL,NULL,NULL,credits);
		
}

void menu_defineMenuEntries(node_t* myNode, char* nodeName, node_t* next, node_t* previous, node_t* child, node_t* parent){
	myNode->name = nodeName;
 312:	89 e5       	ldi	r24, 0x59	; 89
 314:	91 e0       	ldi	r25, 0x01	; 1
 316:	d7 01       	movw	r26, r14
 318:	11 96       	adiw	r26, 0x01	; 1
 31a:	9c 93       	st	X, r25
 31c:	8e 93       	st	-X, r24
	myNode->previous = previous;
 31e:	15 96       	adiw	r26, 0x05	; 5
 320:	7c 92       	st	X, r7
 322:	6e 92       	st	-X, r6
 324:	14 97       	sbiw	r26, 0x04	; 4
	myNode->next = next;
 326:	13 96       	adiw	r26, 0x03	; 3
 328:	1c 92       	st	X, r1
 32a:	1e 92       	st	-X, r1
 32c:	12 97       	sbiw	r26, 0x02	; 2
	myNode->child = child;
 32e:	17 96       	adiw	r26, 0x07	; 7
 330:	5c 92       	st	X, r5
 332:	4e 92       	st	-X, r4
 334:	16 97       	sbiw	r26, 0x06	; 6
	myNode->parent = parent;
 336:	19 96       	adiw	r26, 0x09	; 9
 338:	1c 93       	st	X, r17
 33a:	0e 93       	st	-X, r16
 33c:	18 97       	sbiw	r26, 0x08	; 8
		menu_defineMenuEntries(developers,"Daniel Tavakoli          Nicolas Carbone          Byggern Autumn 2017",NULL,NULL,NULL,credits);
		
}

void menu_defineMenuEntries(node_t* myNode, char* nodeName, node_t* next, node_t* previous, node_t* child, node_t* parent){
	myNode->name = nodeName;
 33e:	8f e5       	ldi	r24, 0x5F	; 95
 340:	91 e0       	ldi	r25, 0x01	; 1
 342:	f2 01       	movw	r30, r4
 344:	91 83       	std	Z+1, r25	; 0x01
 346:	80 83       	st	Z, r24
	myNode->previous = previous;
 348:	15 82       	std	Z+5, r1	; 0x05
 34a:	14 82       	std	Z+4, r1	; 0x04
	myNode->next = next;
 34c:	8b 81       	ldd	r24, Y+3	; 0x03
 34e:	9c 81       	ldd	r25, Y+4	; 0x04
 350:	93 83       	std	Z+3, r25	; 0x03
 352:	82 83       	std	Z+2, r24	; 0x02
	myNode->child = child;
 354:	17 82       	std	Z+7, r1	; 0x07
 356:	16 82       	std	Z+6, r1	; 0x06
	myNode->parent = parent;
 358:	f1 86       	std	Z+9, r15	; 0x09
 35a:	e0 86       	std	Z+8, r14	; 0x08
		menu_defineMenuEntries(developers,"Daniel Tavakoli          Nicolas Carbone          Byggern Autumn 2017",NULL,NULL,NULL,credits);
		
}

void menu_defineMenuEntries(node_t* myNode, char* nodeName, node_t* next, node_t* previous, node_t* child, node_t* parent){
	myNode->name = nodeName;
 35c:	88 e6       	ldi	r24, 0x68	; 104
 35e:	91 e0       	ldi	r25, 0x01	; 1
 360:	ab 81       	ldd	r26, Y+3	; 0x03
 362:	bc 81       	ldd	r27, Y+4	; 0x04
 364:	11 96       	adiw	r26, 0x01	; 1
 366:	9c 93       	st	X, r25
 368:	8e 93       	st	-X, r24
	myNode->previous = previous;
 36a:	15 96       	adiw	r26, 0x05	; 5
 36c:	5c 92       	st	X, r5
 36e:	4e 92       	st	-X, r4
 370:	14 97       	sbiw	r26, 0x04	; 4
	myNode->next = next;
 372:	13 96       	adiw	r26, 0x03	; 3
 374:	1c 92       	st	X, r1
 376:	1e 92       	st	-X, r1
 378:	12 97       	sbiw	r26, 0x02	; 2
	myNode->child = child;
 37a:	17 96       	adiw	r26, 0x07	; 7
 37c:	1c 92       	st	X, r1
 37e:	1e 92       	st	-X, r1
 380:	16 97       	sbiw	r26, 0x06	; 6
	myNode->parent = parent;
 382:	19 96       	adiw	r26, 0x09	; 9
 384:	fc 92       	st	X, r15
 386:	ee 92       	st	-X, r14
 388:	18 97       	sbiw	r26, 0x08	; 8
		menu_defineMenuEntries(developers,"Daniel Tavakoli          Nicolas Carbone          Byggern Autumn 2017",NULL,NULL,NULL,credits);
		
}

void menu_defineMenuEntries(node_t* myNode, char* nodeName, node_t* next, node_t* previous, node_t* child, node_t* parent){
	myNode->name = nodeName;
 38a:	82 e7       	ldi	r24, 0x72	; 114
 38c:	91 e0       	ldi	r25, 0x01	; 1
 38e:	f1 01       	movw	r30, r2
 390:	91 83       	std	Z+1, r25	; 0x01
 392:	80 83       	st	Z, r24
	myNode->previous = previous;
 394:	15 83       	std	Z+5, r17	; 0x05
 396:	04 83       	std	Z+4, r16	; 0x04
	myNode->next = next;
 398:	13 82       	std	Z+3, r1	; 0x03
 39a:	12 82       	std	Z+2, r1	; 0x02
	myNode->child = child;
 39c:	37 83       	std	Z+7, r19	; 0x07
 39e:	26 83       	std	Z+6, r18	; 0x06
	myNode->parent = parent;
 3a0:	11 86       	std	Z+9, r1	; 0x09
 3a2:	10 86       	std	Z+8, r1	; 0x08
		menu_defineMenuEntries(developers,"Daniel Tavakoli          Nicolas Carbone          Byggern Autumn 2017",NULL,NULL,NULL,credits);
		
}

void menu_defineMenuEntries(node_t* myNode, char* nodeName, node_t* next, node_t* previous, node_t* child, node_t* parent){
	myNode->name = nodeName;
 3a4:	8a e7       	ldi	r24, 0x7A	; 122
 3a6:	91 e0       	ldi	r25, 0x01	; 1
 3a8:	d9 01       	movw	r26, r18
 3aa:	11 96       	adiw	r26, 0x01	; 1
 3ac:	9c 93       	st	X, r25
 3ae:	8e 93       	st	-X, r24
	myNode->previous = previous;
 3b0:	15 96       	adiw	r26, 0x05	; 5
 3b2:	1c 92       	st	X, r1
 3b4:	1e 92       	st	-X, r1
 3b6:	14 97       	sbiw	r26, 0x04	; 4
	myNode->next = next;
 3b8:	13 96       	adiw	r26, 0x03	; 3
 3ba:	1c 92       	st	X, r1
 3bc:	1e 92       	st	-X, r1
 3be:	12 97       	sbiw	r26, 0x02	; 2
	myNode->child = child;
 3c0:	17 96       	adiw	r26, 0x07	; 7
 3c2:	1c 92       	st	X, r1
 3c4:	1e 92       	st	-X, r1
 3c6:	16 97       	sbiw	r26, 0x06	; 6
	myNode->parent = parent;
 3c8:	19 96       	adiw	r26, 0x09	; 9
 3ca:	3c 92       	st	X, r3
 3cc:	2e 92       	st	-X, r2
 3ce:	18 97       	sbiw	r26, 0x08	; 8
		
	
	menu_defineMenuEntries(credits,"Credits",NULL,options, developers, NULL);
		menu_defineMenuEntries(developers,"Daniel Tavakoli          Nicolas Carbone          Byggern Autumn 2017",NULL,NULL,NULL,credits);
		
}
 3d0:	26 96       	adiw	r28, 0x06	; 6
 3d2:	0f b6       	in	r0, 0x3f	; 63
 3d4:	f8 94       	cli
 3d6:	de bf       	out	0x3e, r29	; 62
 3d8:	0f be       	out	0x3f, r0	; 63
 3da:	cd bf       	out	0x3d, r28	; 61
 3dc:	df 91       	pop	r29
 3de:	cf 91       	pop	r28
 3e0:	1f 91       	pop	r17
 3e2:	0f 91       	pop	r16
 3e4:	ff 90       	pop	r15
 3e6:	ef 90       	pop	r14
 3e8:	df 90       	pop	r13
 3ea:	cf 90       	pop	r12
 3ec:	bf 90       	pop	r11
 3ee:	af 90       	pop	r10
 3f0:	9f 90       	pop	r9
 3f2:	8f 90       	pop	r8
 3f4:	7f 90       	pop	r7
 3f6:	6f 90       	pop	r6
 3f8:	5f 90       	pop	r5
 3fa:	4f 90       	pop	r4
 3fc:	3f 90       	pop	r3
 3fe:	2f 90       	pop	r2
 400:	08 95       	ret

00000402 <oled_clear_screen>:
 402:	1f 93       	push	r17
 404:	cf 93       	push	r28
 406:	df 93       	push	r29
 408:	10 e0       	ldi	r17, 0x00	; 0
 40a:	d0 e0       	ldi	r29, 0x00	; 0
 40c:	81 2f       	mov	r24, r17
 40e:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <sram_goto_page>
 412:	cd 2f       	mov	r28, r29
 414:	8c 2f       	mov	r24, r28
 416:	0e 94 6e 02 	call	0x4dc	; 0x4dc <sram_goto_column>
 41a:	8d 2f       	mov	r24, r29
 41c:	0e 94 5e 02 	call	0x4bc	; 0x4bc <sram_write_data>
 420:	cf 5f       	subi	r28, 0xFF	; 255
 422:	c0 38       	cpi	r28, 0x80	; 128
 424:	b9 f7       	brne	.-18     	; 0x414 <oled_clear_screen+0x12>
 426:	1f 5f       	subi	r17, 0xFF	; 255
 428:	18 30       	cpi	r17, 0x08	; 8
 42a:	81 f7       	brne	.-32     	; 0x40c <oled_clear_screen+0xa>
 42c:	df 91       	pop	r29
 42e:	cf 91       	pop	r28
 430:	1f 91       	pop	r17
 432:	08 95       	ret

00000434 <oled_init>:
 434:	e0 e0       	ldi	r30, 0x00	; 0
 436:	f0 e1       	ldi	r31, 0x10	; 16
 438:	8e ea       	ldi	r24, 0xAE	; 174
 43a:	80 83       	st	Z, r24
 43c:	81 ea       	ldi	r24, 0xA1	; 161
 43e:	80 83       	st	Z, r24
 440:	8a ed       	ldi	r24, 0xDA	; 218
 442:	80 83       	st	Z, r24
 444:	82 e1       	ldi	r24, 0x12	; 18
 446:	80 83       	st	Z, r24
 448:	88 ec       	ldi	r24, 0xC8	; 200
 44a:	80 83       	st	Z, r24
 44c:	88 ea       	ldi	r24, 0xA8	; 168
 44e:	80 83       	st	Z, r24
 450:	8f e3       	ldi	r24, 0x3F	; 63
 452:	80 83       	st	Z, r24
 454:	85 ed       	ldi	r24, 0xD5	; 213
 456:	80 83       	st	Z, r24
 458:	80 e8       	ldi	r24, 0x80	; 128
 45a:	80 83       	st	Z, r24
 45c:	81 e8       	ldi	r24, 0x81	; 129
 45e:	80 83       	st	Z, r24
 460:	80 e5       	ldi	r24, 0x50	; 80
 462:	80 83       	st	Z, r24
 464:	89 ed       	ldi	r24, 0xD9	; 217
 466:	80 83       	st	Z, r24
 468:	81 e2       	ldi	r24, 0x21	; 33
 46a:	80 83       	st	Z, r24
 46c:	80 e2       	ldi	r24, 0x20	; 32
 46e:	80 83       	st	Z, r24
 470:	82 e0       	ldi	r24, 0x02	; 2
 472:	80 83       	st	Z, r24
 474:	8b ed       	ldi	r24, 0xDB	; 219
 476:	80 83       	st	Z, r24
 478:	80 e3       	ldi	r24, 0x30	; 48
 47a:	80 83       	st	Z, r24
 47c:	8d ea       	ldi	r24, 0xAD	; 173
 47e:	80 83       	st	Z, r24
 480:	10 82       	st	Z, r1
 482:	84 ea       	ldi	r24, 0xA4	; 164
 484:	80 83       	st	Z, r24
 486:	86 ea       	ldi	r24, 0xA6	; 166
 488:	80 83       	st	Z, r24
 48a:	8f ea       	ldi	r24, 0xAF	; 175
 48c:	80 83       	st	Z, r24
 48e:	10 92 ca 01 	sts	0x01CA, r1
 492:	10 92 cb 01 	sts	0x01CB, r1
 496:	08 95       	ret

00000498 <spi_MasterInit>:
 #define set_bit( reg, bit ) (reg |= (1 << bit))
 #define clear_bit( reg, bit ) (reg &= ~(1 << bit))

void spi_MasterInit(void){
    /* Set MOSI and SCK output, all others input */
    DDRB |= (1<<DDB5)|(1<<DDB7);
 498:	87 b3       	in	r24, 0x17	; 23
 49a:	80 6a       	ori	r24, 0xA0	; 160
 49c:	87 bb       	out	0x17, r24	; 23
	DDRB &= ~(1 << DDB6);
 49e:	be 98       	cbi	0x17, 6	; 23
    /* Enable SPI, Master, set clock rate fck/2 */
    SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPI2X);
 4a0:	81 e5       	ldi	r24, 0x51	; 81
 4a2:	8d b9       	out	0x0d, r24	; 13
	
	set_bit(DDRB,DDB4); //Setter PB4 til write/output
 4a4:	bc 9a       	sbi	0x17, 4	; 23
	set_bit(PORTB, PB4);
 4a6:	c4 9a       	sbi	0x18, 4	; 24
 4a8:	08 95       	ret

000004aa <spi_MasterTransmit>:
	
}
uint8_t spi_MasterTransmit(char cData, uint8_t keepLow) { //keepLow holds the SS* signal low so the transmission continues
	//Sette SS* lav
	clear_bit(PORTB,PB4);
 4aa:	c4 98       	cbi	0x18, 4	; 24
	
	/* Start transmission */
    SPDR = cData;
 4ac:	8f b9       	out	0x0f, r24	; 15
    /* Wait for transmission complete. Interrupt flag in SPSR is set (SPIF). */
    while(!(SPSR & (1<<SPIF)));
 4ae:	77 9b       	sbis	0x0e, 7	; 14
 4b0:	fe cf       	rjmp	.-4      	; 0x4ae <spi_MasterTransmit+0x4>
	
	if(!keepLow){ //All transmissions are done. Slave is deselected
 4b2:	61 11       	cpse	r22, r1
 4b4:	01 c0       	rjmp	.+2      	; 0x4b8 <spi_MasterTransmit+0xe>
		 set_bit(PORTB, PB4);
 4b6:	c4 9a       	sbi	0x18, 4	; 24
	}
	return SPDR;
 4b8:	8f b1       	in	r24, 0x0f	; 15
	 
}
 4ba:	08 95       	ret

000004bc <sram_write_data>:
	printf("SRAM test completed with \n%4d errors in write phase and \n %4d errors in retrieval phase \n\n", write_errors, retrieval_errors);
}

void sram_write_data(uint8_t data){
    volatile char *ext_sram = (char *) (0x1800);
    ext_sram[128*PAGE+COL] = data;
 4bc:	90 91 ca 01 	lds	r25, 0x01CA
 4c0:	e0 91 cb 01 	lds	r30, 0x01CB
 4c4:	f0 e0       	ldi	r31, 0x00	; 0
 4c6:	20 e8       	ldi	r18, 0x80	; 128
 4c8:	92 9f       	mul	r25, r18
 4ca:	e0 0d       	add	r30, r0
 4cc:	f1 1d       	adc	r31, r1
 4ce:	11 24       	eor	r1, r1
 4d0:	f8 5e       	subi	r31, 0xE8	; 232
 4d2:	80 83       	st	Z, r24
 4d4:	08 95       	ret

000004d6 <sram_goto_page>:
}

void sram_goto_page(uint8_t newPage){
	PAGE = newPage;
 4d6:	80 93 ca 01 	sts	0x01CA, r24
 4da:	08 95       	ret

000004dc <sram_goto_column>:
}

void sram_goto_column(uint8_t newColumn){
	COL = newColumn;
 4dc:	80 93 cb 01 	sts	0x01CB, r24
 4e0:	08 95       	ret

000004e2 <USART_Transmit>:
 4e2:	5d 9b       	sbis	0x0b, 5	; 11
 4e4:	fe cf       	rjmp	.-4      	; 0x4e2 <USART_Transmit>
 4e6:	8c b9       	out	0x0c, r24	; 12
 4e8:	08 95       	ret

000004ea <USART_Receive>:
 4ea:	5f 9b       	sbis	0x0b, 7	; 11
 4ec:	fe cf       	rjmp	.-4      	; 0x4ea <USART_Receive>
 4ee:	8c b1       	in	r24, 0x0c	; 12
 4f0:	08 95       	ret

000004f2 <USART_Init>:
 4f2:	90 bd       	out	0x20, r25	; 32
 4f4:	89 b9       	out	0x09, r24	; 9
 4f6:	88 e1       	ldi	r24, 0x18	; 24
 4f8:	8a b9       	out	0x0a, r24	; 10
 4fa:	65 e7       	ldi	r22, 0x75	; 117
 4fc:	72 e0       	ldi	r23, 0x02	; 2
 4fe:	81 e7       	ldi	r24, 0x71	; 113
 500:	92 e0       	ldi	r25, 0x02	; 2
 502:	0e 94 ab 03 	call	0x756	; 0x756 <fdevopen>
 506:	08 95       	ret

00000508 <malloc>:
 508:	cf 93       	push	r28
 50a:	df 93       	push	r29
 50c:	82 30       	cpi	r24, 0x02	; 2
 50e:	91 05       	cpc	r25, r1
 510:	10 f4       	brcc	.+4      	; 0x516 <malloc+0xe>
 512:	82 e0       	ldi	r24, 0x02	; 2
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	e0 91 ce 01 	lds	r30, 0x01CE
 51a:	f0 91 cf 01 	lds	r31, 0x01CF
 51e:	20 e0       	ldi	r18, 0x00	; 0
 520:	30 e0       	ldi	r19, 0x00	; 0
 522:	a0 e0       	ldi	r26, 0x00	; 0
 524:	b0 e0       	ldi	r27, 0x00	; 0
 526:	30 97       	sbiw	r30, 0x00	; 0
 528:	39 f1       	breq	.+78     	; 0x578 <malloc+0x70>
 52a:	40 81       	ld	r20, Z
 52c:	51 81       	ldd	r21, Z+1	; 0x01
 52e:	48 17       	cp	r20, r24
 530:	59 07       	cpc	r21, r25
 532:	b8 f0       	brcs	.+46     	; 0x562 <malloc+0x5a>
 534:	48 17       	cp	r20, r24
 536:	59 07       	cpc	r21, r25
 538:	71 f4       	brne	.+28     	; 0x556 <malloc+0x4e>
 53a:	82 81       	ldd	r24, Z+2	; 0x02
 53c:	93 81       	ldd	r25, Z+3	; 0x03
 53e:	10 97       	sbiw	r26, 0x00	; 0
 540:	29 f0       	breq	.+10     	; 0x54c <malloc+0x44>
 542:	13 96       	adiw	r26, 0x03	; 3
 544:	9c 93       	st	X, r25
 546:	8e 93       	st	-X, r24
 548:	12 97       	sbiw	r26, 0x02	; 2
 54a:	2c c0       	rjmp	.+88     	; 0x5a4 <malloc+0x9c>
 54c:	90 93 cf 01 	sts	0x01CF, r25
 550:	80 93 ce 01 	sts	0x01CE, r24
 554:	27 c0       	rjmp	.+78     	; 0x5a4 <malloc+0x9c>
 556:	21 15       	cp	r18, r1
 558:	31 05       	cpc	r19, r1
 55a:	31 f0       	breq	.+12     	; 0x568 <malloc+0x60>
 55c:	42 17       	cp	r20, r18
 55e:	53 07       	cpc	r21, r19
 560:	18 f0       	brcs	.+6      	; 0x568 <malloc+0x60>
 562:	a9 01       	movw	r20, r18
 564:	db 01       	movw	r26, r22
 566:	01 c0       	rjmp	.+2      	; 0x56a <malloc+0x62>
 568:	ef 01       	movw	r28, r30
 56a:	9a 01       	movw	r18, r20
 56c:	bd 01       	movw	r22, r26
 56e:	df 01       	movw	r26, r30
 570:	02 80       	ldd	r0, Z+2	; 0x02
 572:	f3 81       	ldd	r31, Z+3	; 0x03
 574:	e0 2d       	mov	r30, r0
 576:	d7 cf       	rjmp	.-82     	; 0x526 <malloc+0x1e>
 578:	21 15       	cp	r18, r1
 57a:	31 05       	cpc	r19, r1
 57c:	f9 f0       	breq	.+62     	; 0x5bc <malloc+0xb4>
 57e:	28 1b       	sub	r18, r24
 580:	39 0b       	sbc	r19, r25
 582:	24 30       	cpi	r18, 0x04	; 4
 584:	31 05       	cpc	r19, r1
 586:	80 f4       	brcc	.+32     	; 0x5a8 <malloc+0xa0>
 588:	8a 81       	ldd	r24, Y+2	; 0x02
 58a:	9b 81       	ldd	r25, Y+3	; 0x03
 58c:	61 15       	cp	r22, r1
 58e:	71 05       	cpc	r23, r1
 590:	21 f0       	breq	.+8      	; 0x59a <malloc+0x92>
 592:	fb 01       	movw	r30, r22
 594:	93 83       	std	Z+3, r25	; 0x03
 596:	82 83       	std	Z+2, r24	; 0x02
 598:	04 c0       	rjmp	.+8      	; 0x5a2 <malloc+0x9a>
 59a:	90 93 cf 01 	sts	0x01CF, r25
 59e:	80 93 ce 01 	sts	0x01CE, r24
 5a2:	fe 01       	movw	r30, r28
 5a4:	32 96       	adiw	r30, 0x02	; 2
 5a6:	44 c0       	rjmp	.+136    	; 0x630 <malloc+0x128>
 5a8:	fe 01       	movw	r30, r28
 5aa:	e2 0f       	add	r30, r18
 5ac:	f3 1f       	adc	r31, r19
 5ae:	81 93       	st	Z+, r24
 5b0:	91 93       	st	Z+, r25
 5b2:	22 50       	subi	r18, 0x02	; 2
 5b4:	31 09       	sbc	r19, r1
 5b6:	39 83       	std	Y+1, r19	; 0x01
 5b8:	28 83       	st	Y, r18
 5ba:	3a c0       	rjmp	.+116    	; 0x630 <malloc+0x128>
 5bc:	20 91 cc 01 	lds	r18, 0x01CC
 5c0:	30 91 cd 01 	lds	r19, 0x01CD
 5c4:	23 2b       	or	r18, r19
 5c6:	41 f4       	brne	.+16     	; 0x5d8 <malloc+0xd0>
 5c8:	20 91 02 01 	lds	r18, 0x0102
 5cc:	30 91 03 01 	lds	r19, 0x0103
 5d0:	30 93 cd 01 	sts	0x01CD, r19
 5d4:	20 93 cc 01 	sts	0x01CC, r18
 5d8:	20 91 00 01 	lds	r18, 0x0100
 5dc:	30 91 01 01 	lds	r19, 0x0101
 5e0:	21 15       	cp	r18, r1
 5e2:	31 05       	cpc	r19, r1
 5e4:	41 f4       	brne	.+16     	; 0x5f6 <malloc+0xee>
 5e6:	2d b7       	in	r18, 0x3d	; 61
 5e8:	3e b7       	in	r19, 0x3e	; 62
 5ea:	40 91 04 01 	lds	r20, 0x0104
 5ee:	50 91 05 01 	lds	r21, 0x0105
 5f2:	24 1b       	sub	r18, r20
 5f4:	35 0b       	sbc	r19, r21
 5f6:	e0 91 cc 01 	lds	r30, 0x01CC
 5fa:	f0 91 cd 01 	lds	r31, 0x01CD
 5fe:	e2 17       	cp	r30, r18
 600:	f3 07       	cpc	r31, r19
 602:	a0 f4       	brcc	.+40     	; 0x62c <malloc+0x124>
 604:	2e 1b       	sub	r18, r30
 606:	3f 0b       	sbc	r19, r31
 608:	28 17       	cp	r18, r24
 60a:	39 07       	cpc	r19, r25
 60c:	78 f0       	brcs	.+30     	; 0x62c <malloc+0x124>
 60e:	ac 01       	movw	r20, r24
 610:	4e 5f       	subi	r20, 0xFE	; 254
 612:	5f 4f       	sbci	r21, 0xFF	; 255
 614:	24 17       	cp	r18, r20
 616:	35 07       	cpc	r19, r21
 618:	48 f0       	brcs	.+18     	; 0x62c <malloc+0x124>
 61a:	4e 0f       	add	r20, r30
 61c:	5f 1f       	adc	r21, r31
 61e:	50 93 cd 01 	sts	0x01CD, r21
 622:	40 93 cc 01 	sts	0x01CC, r20
 626:	81 93       	st	Z+, r24
 628:	91 93       	st	Z+, r25
 62a:	02 c0       	rjmp	.+4      	; 0x630 <malloc+0x128>
 62c:	e0 e0       	ldi	r30, 0x00	; 0
 62e:	f0 e0       	ldi	r31, 0x00	; 0
 630:	cf 01       	movw	r24, r30
 632:	df 91       	pop	r29
 634:	cf 91       	pop	r28
 636:	08 95       	ret

00000638 <free>:
 638:	cf 93       	push	r28
 63a:	df 93       	push	r29
 63c:	00 97       	sbiw	r24, 0x00	; 0
 63e:	09 f4       	brne	.+2      	; 0x642 <free+0xa>
 640:	87 c0       	rjmp	.+270    	; 0x750 <free+0x118>
 642:	fc 01       	movw	r30, r24
 644:	32 97       	sbiw	r30, 0x02	; 2
 646:	13 82       	std	Z+3, r1	; 0x03
 648:	12 82       	std	Z+2, r1	; 0x02
 64a:	c0 91 ce 01 	lds	r28, 0x01CE
 64e:	d0 91 cf 01 	lds	r29, 0x01CF
 652:	20 97       	sbiw	r28, 0x00	; 0
 654:	81 f4       	brne	.+32     	; 0x676 <free+0x3e>
 656:	20 81       	ld	r18, Z
 658:	31 81       	ldd	r19, Z+1	; 0x01
 65a:	28 0f       	add	r18, r24
 65c:	39 1f       	adc	r19, r25
 65e:	80 91 cc 01 	lds	r24, 0x01CC
 662:	90 91 cd 01 	lds	r25, 0x01CD
 666:	82 17       	cp	r24, r18
 668:	93 07       	cpc	r25, r19
 66a:	79 f5       	brne	.+94     	; 0x6ca <free+0x92>
 66c:	f0 93 cd 01 	sts	0x01CD, r31
 670:	e0 93 cc 01 	sts	0x01CC, r30
 674:	6d c0       	rjmp	.+218    	; 0x750 <free+0x118>
 676:	de 01       	movw	r26, r28
 678:	20 e0       	ldi	r18, 0x00	; 0
 67a:	30 e0       	ldi	r19, 0x00	; 0
 67c:	ae 17       	cp	r26, r30
 67e:	bf 07       	cpc	r27, r31
 680:	50 f4       	brcc	.+20     	; 0x696 <free+0x5e>
 682:	12 96       	adiw	r26, 0x02	; 2
 684:	4d 91       	ld	r20, X+
 686:	5c 91       	ld	r21, X
 688:	13 97       	sbiw	r26, 0x03	; 3
 68a:	9d 01       	movw	r18, r26
 68c:	41 15       	cp	r20, r1
 68e:	51 05       	cpc	r21, r1
 690:	09 f1       	breq	.+66     	; 0x6d4 <free+0x9c>
 692:	da 01       	movw	r26, r20
 694:	f3 cf       	rjmp	.-26     	; 0x67c <free+0x44>
 696:	b3 83       	std	Z+3, r27	; 0x03
 698:	a2 83       	std	Z+2, r26	; 0x02
 69a:	40 81       	ld	r20, Z
 69c:	51 81       	ldd	r21, Z+1	; 0x01
 69e:	84 0f       	add	r24, r20
 6a0:	95 1f       	adc	r25, r21
 6a2:	8a 17       	cp	r24, r26
 6a4:	9b 07       	cpc	r25, r27
 6a6:	71 f4       	brne	.+28     	; 0x6c4 <free+0x8c>
 6a8:	8d 91       	ld	r24, X+
 6aa:	9c 91       	ld	r25, X
 6ac:	11 97       	sbiw	r26, 0x01	; 1
 6ae:	84 0f       	add	r24, r20
 6b0:	95 1f       	adc	r25, r21
 6b2:	02 96       	adiw	r24, 0x02	; 2
 6b4:	91 83       	std	Z+1, r25	; 0x01
 6b6:	80 83       	st	Z, r24
 6b8:	12 96       	adiw	r26, 0x02	; 2
 6ba:	8d 91       	ld	r24, X+
 6bc:	9c 91       	ld	r25, X
 6be:	13 97       	sbiw	r26, 0x03	; 3
 6c0:	93 83       	std	Z+3, r25	; 0x03
 6c2:	82 83       	std	Z+2, r24	; 0x02
 6c4:	21 15       	cp	r18, r1
 6c6:	31 05       	cpc	r19, r1
 6c8:	29 f4       	brne	.+10     	; 0x6d4 <free+0x9c>
 6ca:	f0 93 cf 01 	sts	0x01CF, r31
 6ce:	e0 93 ce 01 	sts	0x01CE, r30
 6d2:	3e c0       	rjmp	.+124    	; 0x750 <free+0x118>
 6d4:	d9 01       	movw	r26, r18
 6d6:	13 96       	adiw	r26, 0x03	; 3
 6d8:	fc 93       	st	X, r31
 6da:	ee 93       	st	-X, r30
 6dc:	12 97       	sbiw	r26, 0x02	; 2
 6de:	4d 91       	ld	r20, X+
 6e0:	5d 91       	ld	r21, X+
 6e2:	a4 0f       	add	r26, r20
 6e4:	b5 1f       	adc	r27, r21
 6e6:	ea 17       	cp	r30, r26
 6e8:	fb 07       	cpc	r31, r27
 6ea:	79 f4       	brne	.+30     	; 0x70a <free+0xd2>
 6ec:	80 81       	ld	r24, Z
 6ee:	91 81       	ldd	r25, Z+1	; 0x01
 6f0:	84 0f       	add	r24, r20
 6f2:	95 1f       	adc	r25, r21
 6f4:	02 96       	adiw	r24, 0x02	; 2
 6f6:	d9 01       	movw	r26, r18
 6f8:	11 96       	adiw	r26, 0x01	; 1
 6fa:	9c 93       	st	X, r25
 6fc:	8e 93       	st	-X, r24
 6fe:	82 81       	ldd	r24, Z+2	; 0x02
 700:	93 81       	ldd	r25, Z+3	; 0x03
 702:	13 96       	adiw	r26, 0x03	; 3
 704:	9c 93       	st	X, r25
 706:	8e 93       	st	-X, r24
 708:	12 97       	sbiw	r26, 0x02	; 2
 70a:	e0 e0       	ldi	r30, 0x00	; 0
 70c:	f0 e0       	ldi	r31, 0x00	; 0
 70e:	8a 81       	ldd	r24, Y+2	; 0x02
 710:	9b 81       	ldd	r25, Y+3	; 0x03
 712:	00 97       	sbiw	r24, 0x00	; 0
 714:	19 f0       	breq	.+6      	; 0x71c <free+0xe4>
 716:	fe 01       	movw	r30, r28
 718:	ec 01       	movw	r28, r24
 71a:	f9 cf       	rjmp	.-14     	; 0x70e <free+0xd6>
 71c:	ce 01       	movw	r24, r28
 71e:	02 96       	adiw	r24, 0x02	; 2
 720:	28 81       	ld	r18, Y
 722:	39 81       	ldd	r19, Y+1	; 0x01
 724:	82 0f       	add	r24, r18
 726:	93 1f       	adc	r25, r19
 728:	20 91 cc 01 	lds	r18, 0x01CC
 72c:	30 91 cd 01 	lds	r19, 0x01CD
 730:	28 17       	cp	r18, r24
 732:	39 07       	cpc	r19, r25
 734:	69 f4       	brne	.+26     	; 0x750 <free+0x118>
 736:	30 97       	sbiw	r30, 0x00	; 0
 738:	29 f4       	brne	.+10     	; 0x744 <free+0x10c>
 73a:	10 92 cf 01 	sts	0x01CF, r1
 73e:	10 92 ce 01 	sts	0x01CE, r1
 742:	02 c0       	rjmp	.+4      	; 0x748 <free+0x110>
 744:	13 82       	std	Z+3, r1	; 0x03
 746:	12 82       	std	Z+2, r1	; 0x02
 748:	d0 93 cd 01 	sts	0x01CD, r29
 74c:	c0 93 cc 01 	sts	0x01CC, r28
 750:	df 91       	pop	r29
 752:	cf 91       	pop	r28
 754:	08 95       	ret

00000756 <fdevopen>:
 756:	0f 93       	push	r16
 758:	1f 93       	push	r17
 75a:	cf 93       	push	r28
 75c:	df 93       	push	r29
 75e:	ec 01       	movw	r28, r24
 760:	8b 01       	movw	r16, r22
 762:	00 97       	sbiw	r24, 0x00	; 0
 764:	31 f4       	brne	.+12     	; 0x772 <fdevopen+0x1c>
 766:	61 15       	cp	r22, r1
 768:	71 05       	cpc	r23, r1
 76a:	19 f4       	brne	.+6      	; 0x772 <fdevopen+0x1c>
 76c:	80 e0       	ldi	r24, 0x00	; 0
 76e:	90 e0       	ldi	r25, 0x00	; 0
 770:	38 c0       	rjmp	.+112    	; 0x7e2 <fdevopen+0x8c>
 772:	6e e0       	ldi	r22, 0x0E	; 14
 774:	70 e0       	ldi	r23, 0x00	; 0
 776:	81 e0       	ldi	r24, 0x01	; 1
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	0e 94 09 06 	call	0xc12	; 0xc12 <calloc>
 77e:	fc 01       	movw	r30, r24
 780:	00 97       	sbiw	r24, 0x00	; 0
 782:	a1 f3       	breq	.-24     	; 0x76c <fdevopen+0x16>
 784:	80 e8       	ldi	r24, 0x80	; 128
 786:	83 83       	std	Z+3, r24	; 0x03
 788:	01 15       	cp	r16, r1
 78a:	11 05       	cpc	r17, r1
 78c:	71 f0       	breq	.+28     	; 0x7aa <fdevopen+0x54>
 78e:	13 87       	std	Z+11, r17	; 0x0b
 790:	02 87       	std	Z+10, r16	; 0x0a
 792:	81 e8       	ldi	r24, 0x81	; 129
 794:	83 83       	std	Z+3, r24	; 0x03
 796:	80 91 d0 01 	lds	r24, 0x01D0
 79a:	90 91 d1 01 	lds	r25, 0x01D1
 79e:	89 2b       	or	r24, r25
 7a0:	21 f4       	brne	.+8      	; 0x7aa <fdevopen+0x54>
 7a2:	f0 93 d1 01 	sts	0x01D1, r31
 7a6:	e0 93 d0 01 	sts	0x01D0, r30
 7aa:	20 97       	sbiw	r28, 0x00	; 0
 7ac:	c9 f0       	breq	.+50     	; 0x7e0 <fdevopen+0x8a>
 7ae:	d1 87       	std	Z+9, r29	; 0x09
 7b0:	c0 87       	std	Z+8, r28	; 0x08
 7b2:	83 81       	ldd	r24, Z+3	; 0x03
 7b4:	82 60       	ori	r24, 0x02	; 2
 7b6:	83 83       	std	Z+3, r24	; 0x03
 7b8:	80 91 d2 01 	lds	r24, 0x01D2
 7bc:	90 91 d3 01 	lds	r25, 0x01D3
 7c0:	89 2b       	or	r24, r25
 7c2:	71 f4       	brne	.+28     	; 0x7e0 <fdevopen+0x8a>
 7c4:	f0 93 d3 01 	sts	0x01D3, r31
 7c8:	e0 93 d2 01 	sts	0x01D2, r30
 7cc:	80 91 d4 01 	lds	r24, 0x01D4
 7d0:	90 91 d5 01 	lds	r25, 0x01D5
 7d4:	89 2b       	or	r24, r25
 7d6:	21 f4       	brne	.+8      	; 0x7e0 <fdevopen+0x8a>
 7d8:	f0 93 d5 01 	sts	0x01D5, r31
 7dc:	e0 93 d4 01 	sts	0x01D4, r30
 7e0:	cf 01       	movw	r24, r30
 7e2:	df 91       	pop	r29
 7e4:	cf 91       	pop	r28
 7e6:	1f 91       	pop	r17
 7e8:	0f 91       	pop	r16
 7ea:	08 95       	ret

000007ec <printf>:
 7ec:	a0 e0       	ldi	r26, 0x00	; 0
 7ee:	b0 e0       	ldi	r27, 0x00	; 0
 7f0:	ec ef       	ldi	r30, 0xFC	; 252
 7f2:	f3 e0       	ldi	r31, 0x03	; 3
 7f4:	0c 94 e2 06 	jmp	0xdc4	; 0xdc4 <__prologue_saves__+0x20>
 7f8:	fe 01       	movw	r30, r28
 7fa:	35 96       	adiw	r30, 0x05	; 5
 7fc:	61 91       	ld	r22, Z+
 7fe:	71 91       	ld	r23, Z+
 800:	af 01       	movw	r20, r30
 802:	80 91 d2 01 	lds	r24, 0x01D2
 806:	90 91 d3 01 	lds	r25, 0x01D3
 80a:	0e 94 37 04 	call	0x86e	; 0x86e <vfprintf>
 80e:	e2 e0       	ldi	r30, 0x02	; 2
 810:	0c 94 fe 06 	jmp	0xdfc	; 0xdfc <__epilogue_restores__+0x20>

00000814 <puts>:
 814:	0f 93       	push	r16
 816:	1f 93       	push	r17
 818:	cf 93       	push	r28
 81a:	df 93       	push	r29
 81c:	e0 91 d2 01 	lds	r30, 0x01D2
 820:	f0 91 d3 01 	lds	r31, 0x01D3
 824:	23 81       	ldd	r18, Z+3	; 0x03
 826:	21 ff       	sbrs	r18, 1
 828:	1b c0       	rjmp	.+54     	; 0x860 <puts+0x4c>
 82a:	ec 01       	movw	r28, r24
 82c:	00 e0       	ldi	r16, 0x00	; 0
 82e:	10 e0       	ldi	r17, 0x00	; 0
 830:	89 91       	ld	r24, Y+
 832:	60 91 d2 01 	lds	r22, 0x01D2
 836:	70 91 d3 01 	lds	r23, 0x01D3
 83a:	db 01       	movw	r26, r22
 83c:	18 96       	adiw	r26, 0x08	; 8
 83e:	ed 91       	ld	r30, X+
 840:	fc 91       	ld	r31, X
 842:	19 97       	sbiw	r26, 0x09	; 9
 844:	88 23       	and	r24, r24
 846:	31 f0       	breq	.+12     	; 0x854 <puts+0x40>
 848:	09 95       	icall
 84a:	89 2b       	or	r24, r25
 84c:	89 f3       	breq	.-30     	; 0x830 <puts+0x1c>
 84e:	0f ef       	ldi	r16, 0xFF	; 255
 850:	1f ef       	ldi	r17, 0xFF	; 255
 852:	ee cf       	rjmp	.-36     	; 0x830 <puts+0x1c>
 854:	8a e0       	ldi	r24, 0x0A	; 10
 856:	09 95       	icall
 858:	89 2b       	or	r24, r25
 85a:	11 f4       	brne	.+4      	; 0x860 <puts+0x4c>
 85c:	c8 01       	movw	r24, r16
 85e:	02 c0       	rjmp	.+4      	; 0x864 <puts+0x50>
 860:	8f ef       	ldi	r24, 0xFF	; 255
 862:	9f ef       	ldi	r25, 0xFF	; 255
 864:	df 91       	pop	r29
 866:	cf 91       	pop	r28
 868:	1f 91       	pop	r17
 86a:	0f 91       	pop	r16
 86c:	08 95       	ret

0000086e <vfprintf>:
 86e:	ac e0       	ldi	r26, 0x0C	; 12
 870:	b0 e0       	ldi	r27, 0x00	; 0
 872:	ed e3       	ldi	r30, 0x3D	; 61
 874:	f4 e0       	ldi	r31, 0x04	; 4
 876:	0c 94 d2 06 	jmp	0xda4	; 0xda4 <__prologue_saves__>
 87a:	7c 01       	movw	r14, r24
 87c:	6b 01       	movw	r12, r22
 87e:	8a 01       	movw	r16, r20
 880:	fc 01       	movw	r30, r24
 882:	17 82       	std	Z+7, r1	; 0x07
 884:	16 82       	std	Z+6, r1	; 0x06
 886:	83 81       	ldd	r24, Z+3	; 0x03
 888:	81 ff       	sbrs	r24, 1
 88a:	bd c1       	rjmp	.+890    	; 0xc06 <vfprintf+0x398>
 88c:	ce 01       	movw	r24, r28
 88e:	01 96       	adiw	r24, 0x01	; 1
 890:	4c 01       	movw	r8, r24
 892:	f7 01       	movw	r30, r14
 894:	93 81       	ldd	r25, Z+3	; 0x03
 896:	f6 01       	movw	r30, r12
 898:	93 fd       	sbrc	r25, 3
 89a:	85 91       	lpm	r24, Z+
 89c:	93 ff       	sbrs	r25, 3
 89e:	81 91       	ld	r24, Z+
 8a0:	6f 01       	movw	r12, r30
 8a2:	88 23       	and	r24, r24
 8a4:	09 f4       	brne	.+2      	; 0x8a8 <vfprintf+0x3a>
 8a6:	ab c1       	rjmp	.+854    	; 0xbfe <vfprintf+0x390>
 8a8:	85 32       	cpi	r24, 0x25	; 37
 8aa:	39 f4       	brne	.+14     	; 0x8ba <vfprintf+0x4c>
 8ac:	93 fd       	sbrc	r25, 3
 8ae:	85 91       	lpm	r24, Z+
 8b0:	93 ff       	sbrs	r25, 3
 8b2:	81 91       	ld	r24, Z+
 8b4:	6f 01       	movw	r12, r30
 8b6:	85 32       	cpi	r24, 0x25	; 37
 8b8:	29 f4       	brne	.+10     	; 0x8c4 <vfprintf+0x56>
 8ba:	b7 01       	movw	r22, r14
 8bc:	90 e0       	ldi	r25, 0x00	; 0
 8be:	0e 94 42 06 	call	0xc84	; 0xc84 <fputc>
 8c2:	e7 cf       	rjmp	.-50     	; 0x892 <vfprintf+0x24>
 8c4:	51 2c       	mov	r5, r1
 8c6:	31 2c       	mov	r3, r1
 8c8:	20 e0       	ldi	r18, 0x00	; 0
 8ca:	20 32       	cpi	r18, 0x20	; 32
 8cc:	a0 f4       	brcc	.+40     	; 0x8f6 <vfprintf+0x88>
 8ce:	8b 32       	cpi	r24, 0x2B	; 43
 8d0:	69 f0       	breq	.+26     	; 0x8ec <vfprintf+0x7e>
 8d2:	30 f4       	brcc	.+12     	; 0x8e0 <vfprintf+0x72>
 8d4:	80 32       	cpi	r24, 0x20	; 32
 8d6:	59 f0       	breq	.+22     	; 0x8ee <vfprintf+0x80>
 8d8:	83 32       	cpi	r24, 0x23	; 35
 8da:	69 f4       	brne	.+26     	; 0x8f6 <vfprintf+0x88>
 8dc:	20 61       	ori	r18, 0x10	; 16
 8de:	2c c0       	rjmp	.+88     	; 0x938 <vfprintf+0xca>
 8e0:	8d 32       	cpi	r24, 0x2D	; 45
 8e2:	39 f0       	breq	.+14     	; 0x8f2 <vfprintf+0x84>
 8e4:	80 33       	cpi	r24, 0x30	; 48
 8e6:	39 f4       	brne	.+14     	; 0x8f6 <vfprintf+0x88>
 8e8:	21 60       	ori	r18, 0x01	; 1
 8ea:	26 c0       	rjmp	.+76     	; 0x938 <vfprintf+0xca>
 8ec:	22 60       	ori	r18, 0x02	; 2
 8ee:	24 60       	ori	r18, 0x04	; 4
 8f0:	23 c0       	rjmp	.+70     	; 0x938 <vfprintf+0xca>
 8f2:	28 60       	ori	r18, 0x08	; 8
 8f4:	21 c0       	rjmp	.+66     	; 0x938 <vfprintf+0xca>
 8f6:	27 fd       	sbrc	r18, 7
 8f8:	27 c0       	rjmp	.+78     	; 0x948 <vfprintf+0xda>
 8fa:	30 ed       	ldi	r19, 0xD0	; 208
 8fc:	38 0f       	add	r19, r24
 8fe:	3a 30       	cpi	r19, 0x0A	; 10
 900:	78 f4       	brcc	.+30     	; 0x920 <vfprintf+0xb2>
 902:	26 ff       	sbrs	r18, 6
 904:	06 c0       	rjmp	.+12     	; 0x912 <vfprintf+0xa4>
 906:	fa e0       	ldi	r31, 0x0A	; 10
 908:	5f 9e       	mul	r5, r31
 90a:	30 0d       	add	r19, r0
 90c:	11 24       	eor	r1, r1
 90e:	53 2e       	mov	r5, r19
 910:	13 c0       	rjmp	.+38     	; 0x938 <vfprintf+0xca>
 912:	8a e0       	ldi	r24, 0x0A	; 10
 914:	38 9e       	mul	r3, r24
 916:	30 0d       	add	r19, r0
 918:	11 24       	eor	r1, r1
 91a:	33 2e       	mov	r3, r19
 91c:	20 62       	ori	r18, 0x20	; 32
 91e:	0c c0       	rjmp	.+24     	; 0x938 <vfprintf+0xca>
 920:	8e 32       	cpi	r24, 0x2E	; 46
 922:	21 f4       	brne	.+8      	; 0x92c <vfprintf+0xbe>
 924:	26 fd       	sbrc	r18, 6
 926:	6b c1       	rjmp	.+726    	; 0xbfe <vfprintf+0x390>
 928:	20 64       	ori	r18, 0x40	; 64
 92a:	06 c0       	rjmp	.+12     	; 0x938 <vfprintf+0xca>
 92c:	8c 36       	cpi	r24, 0x6C	; 108
 92e:	11 f4       	brne	.+4      	; 0x934 <vfprintf+0xc6>
 930:	20 68       	ori	r18, 0x80	; 128
 932:	02 c0       	rjmp	.+4      	; 0x938 <vfprintf+0xca>
 934:	88 36       	cpi	r24, 0x68	; 104
 936:	41 f4       	brne	.+16     	; 0x948 <vfprintf+0xda>
 938:	f6 01       	movw	r30, r12
 93a:	93 fd       	sbrc	r25, 3
 93c:	85 91       	lpm	r24, Z+
 93e:	93 ff       	sbrs	r25, 3
 940:	81 91       	ld	r24, Z+
 942:	6f 01       	movw	r12, r30
 944:	81 11       	cpse	r24, r1
 946:	c1 cf       	rjmp	.-126    	; 0x8ca <vfprintf+0x5c>
 948:	98 2f       	mov	r25, r24
 94a:	9f 7d       	andi	r25, 0xDF	; 223
 94c:	95 54       	subi	r25, 0x45	; 69
 94e:	93 30       	cpi	r25, 0x03	; 3
 950:	28 f4       	brcc	.+10     	; 0x95c <vfprintf+0xee>
 952:	0c 5f       	subi	r16, 0xFC	; 252
 954:	1f 4f       	sbci	r17, 0xFF	; 255
 956:	ff e3       	ldi	r31, 0x3F	; 63
 958:	f9 83       	std	Y+1, r31	; 0x01
 95a:	0d c0       	rjmp	.+26     	; 0x976 <vfprintf+0x108>
 95c:	83 36       	cpi	r24, 0x63	; 99
 95e:	31 f0       	breq	.+12     	; 0x96c <vfprintf+0xfe>
 960:	83 37       	cpi	r24, 0x73	; 115
 962:	71 f0       	breq	.+28     	; 0x980 <vfprintf+0x112>
 964:	83 35       	cpi	r24, 0x53	; 83
 966:	09 f0       	breq	.+2      	; 0x96a <vfprintf+0xfc>
 968:	5b c0       	rjmp	.+182    	; 0xa20 <vfprintf+0x1b2>
 96a:	22 c0       	rjmp	.+68     	; 0x9b0 <vfprintf+0x142>
 96c:	f8 01       	movw	r30, r16
 96e:	80 81       	ld	r24, Z
 970:	89 83       	std	Y+1, r24	; 0x01
 972:	0e 5f       	subi	r16, 0xFE	; 254
 974:	1f 4f       	sbci	r17, 0xFF	; 255
 976:	44 24       	eor	r4, r4
 978:	43 94       	inc	r4
 97a:	51 2c       	mov	r5, r1
 97c:	54 01       	movw	r10, r8
 97e:	15 c0       	rjmp	.+42     	; 0x9aa <vfprintf+0x13c>
 980:	38 01       	movw	r6, r16
 982:	f2 e0       	ldi	r31, 0x02	; 2
 984:	6f 0e       	add	r6, r31
 986:	71 1c       	adc	r7, r1
 988:	f8 01       	movw	r30, r16
 98a:	a0 80       	ld	r10, Z
 98c:	b1 80       	ldd	r11, Z+1	; 0x01
 98e:	26 ff       	sbrs	r18, 6
 990:	03 c0       	rjmp	.+6      	; 0x998 <vfprintf+0x12a>
 992:	65 2d       	mov	r22, r5
 994:	70 e0       	ldi	r23, 0x00	; 0
 996:	02 c0       	rjmp	.+4      	; 0x99c <vfprintf+0x12e>
 998:	6f ef       	ldi	r22, 0xFF	; 255
 99a:	7f ef       	ldi	r23, 0xFF	; 255
 99c:	c5 01       	movw	r24, r10
 99e:	2c 87       	std	Y+12, r18	; 0x0c
 9a0:	0e 94 37 06 	call	0xc6e	; 0xc6e <strnlen>
 9a4:	2c 01       	movw	r4, r24
 9a6:	83 01       	movw	r16, r6
 9a8:	2c 85       	ldd	r18, Y+12	; 0x0c
 9aa:	2f 77       	andi	r18, 0x7F	; 127
 9ac:	22 2e       	mov	r2, r18
 9ae:	17 c0       	rjmp	.+46     	; 0x9de <vfprintf+0x170>
 9b0:	38 01       	movw	r6, r16
 9b2:	f2 e0       	ldi	r31, 0x02	; 2
 9b4:	6f 0e       	add	r6, r31
 9b6:	71 1c       	adc	r7, r1
 9b8:	f8 01       	movw	r30, r16
 9ba:	a0 80       	ld	r10, Z
 9bc:	b1 80       	ldd	r11, Z+1	; 0x01
 9be:	26 ff       	sbrs	r18, 6
 9c0:	03 c0       	rjmp	.+6      	; 0x9c8 <vfprintf+0x15a>
 9c2:	65 2d       	mov	r22, r5
 9c4:	70 e0       	ldi	r23, 0x00	; 0
 9c6:	02 c0       	rjmp	.+4      	; 0x9cc <vfprintf+0x15e>
 9c8:	6f ef       	ldi	r22, 0xFF	; 255
 9ca:	7f ef       	ldi	r23, 0xFF	; 255
 9cc:	c5 01       	movw	r24, r10
 9ce:	2c 87       	std	Y+12, r18	; 0x0c
 9d0:	0e 94 25 06 	call	0xc4a	; 0xc4a <strnlen_P>
 9d4:	2c 01       	movw	r4, r24
 9d6:	2c 85       	ldd	r18, Y+12	; 0x0c
 9d8:	20 68       	ori	r18, 0x80	; 128
 9da:	22 2e       	mov	r2, r18
 9dc:	83 01       	movw	r16, r6
 9de:	23 fc       	sbrc	r2, 3
 9e0:	1b c0       	rjmp	.+54     	; 0xa18 <vfprintf+0x1aa>
 9e2:	83 2d       	mov	r24, r3
 9e4:	90 e0       	ldi	r25, 0x00	; 0
 9e6:	48 16       	cp	r4, r24
 9e8:	59 06       	cpc	r5, r25
 9ea:	b0 f4       	brcc	.+44     	; 0xa18 <vfprintf+0x1aa>
 9ec:	b7 01       	movw	r22, r14
 9ee:	80 e2       	ldi	r24, 0x20	; 32
 9f0:	90 e0       	ldi	r25, 0x00	; 0
 9f2:	0e 94 42 06 	call	0xc84	; 0xc84 <fputc>
 9f6:	3a 94       	dec	r3
 9f8:	f4 cf       	rjmp	.-24     	; 0x9e2 <vfprintf+0x174>
 9fa:	f5 01       	movw	r30, r10
 9fc:	27 fc       	sbrc	r2, 7
 9fe:	85 91       	lpm	r24, Z+
 a00:	27 fe       	sbrs	r2, 7
 a02:	81 91       	ld	r24, Z+
 a04:	5f 01       	movw	r10, r30
 a06:	b7 01       	movw	r22, r14
 a08:	90 e0       	ldi	r25, 0x00	; 0
 a0a:	0e 94 42 06 	call	0xc84	; 0xc84 <fputc>
 a0e:	31 10       	cpse	r3, r1
 a10:	3a 94       	dec	r3
 a12:	f1 e0       	ldi	r31, 0x01	; 1
 a14:	4f 1a       	sub	r4, r31
 a16:	51 08       	sbc	r5, r1
 a18:	41 14       	cp	r4, r1
 a1a:	51 04       	cpc	r5, r1
 a1c:	71 f7       	brne	.-36     	; 0x9fa <vfprintf+0x18c>
 a1e:	e5 c0       	rjmp	.+458    	; 0xbea <vfprintf+0x37c>
 a20:	84 36       	cpi	r24, 0x64	; 100
 a22:	11 f0       	breq	.+4      	; 0xa28 <vfprintf+0x1ba>
 a24:	89 36       	cpi	r24, 0x69	; 105
 a26:	39 f5       	brne	.+78     	; 0xa76 <vfprintf+0x208>
 a28:	f8 01       	movw	r30, r16
 a2a:	27 ff       	sbrs	r18, 7
 a2c:	07 c0       	rjmp	.+14     	; 0xa3c <vfprintf+0x1ce>
 a2e:	60 81       	ld	r22, Z
 a30:	71 81       	ldd	r23, Z+1	; 0x01
 a32:	82 81       	ldd	r24, Z+2	; 0x02
 a34:	93 81       	ldd	r25, Z+3	; 0x03
 a36:	0c 5f       	subi	r16, 0xFC	; 252
 a38:	1f 4f       	sbci	r17, 0xFF	; 255
 a3a:	08 c0       	rjmp	.+16     	; 0xa4c <vfprintf+0x1de>
 a3c:	60 81       	ld	r22, Z
 a3e:	71 81       	ldd	r23, Z+1	; 0x01
 a40:	88 27       	eor	r24, r24
 a42:	77 fd       	sbrc	r23, 7
 a44:	80 95       	com	r24
 a46:	98 2f       	mov	r25, r24
 a48:	0e 5f       	subi	r16, 0xFE	; 254
 a4a:	1f 4f       	sbci	r17, 0xFF	; 255
 a4c:	2f 76       	andi	r18, 0x6F	; 111
 a4e:	b2 2e       	mov	r11, r18
 a50:	97 ff       	sbrs	r25, 7
 a52:	09 c0       	rjmp	.+18     	; 0xa66 <vfprintf+0x1f8>
 a54:	90 95       	com	r25
 a56:	80 95       	com	r24
 a58:	70 95       	com	r23
 a5a:	61 95       	neg	r22
 a5c:	7f 4f       	sbci	r23, 0xFF	; 255
 a5e:	8f 4f       	sbci	r24, 0xFF	; 255
 a60:	9f 4f       	sbci	r25, 0xFF	; 255
 a62:	20 68       	ori	r18, 0x80	; 128
 a64:	b2 2e       	mov	r11, r18
 a66:	2a e0       	ldi	r18, 0x0A	; 10
 a68:	30 e0       	ldi	r19, 0x00	; 0
 a6a:	a4 01       	movw	r20, r8
 a6c:	0e 94 74 06 	call	0xce8	; 0xce8 <__ultoa_invert>
 a70:	a8 2e       	mov	r10, r24
 a72:	a8 18       	sub	r10, r8
 a74:	44 c0       	rjmp	.+136    	; 0xafe <vfprintf+0x290>
 a76:	85 37       	cpi	r24, 0x75	; 117
 a78:	29 f4       	brne	.+10     	; 0xa84 <vfprintf+0x216>
 a7a:	2f 7e       	andi	r18, 0xEF	; 239
 a7c:	b2 2e       	mov	r11, r18
 a7e:	2a e0       	ldi	r18, 0x0A	; 10
 a80:	30 e0       	ldi	r19, 0x00	; 0
 a82:	25 c0       	rjmp	.+74     	; 0xace <vfprintf+0x260>
 a84:	f2 2f       	mov	r31, r18
 a86:	f9 7f       	andi	r31, 0xF9	; 249
 a88:	bf 2e       	mov	r11, r31
 a8a:	8f 36       	cpi	r24, 0x6F	; 111
 a8c:	c1 f0       	breq	.+48     	; 0xabe <vfprintf+0x250>
 a8e:	18 f4       	brcc	.+6      	; 0xa96 <vfprintf+0x228>
 a90:	88 35       	cpi	r24, 0x58	; 88
 a92:	79 f0       	breq	.+30     	; 0xab2 <vfprintf+0x244>
 a94:	b4 c0       	rjmp	.+360    	; 0xbfe <vfprintf+0x390>
 a96:	80 37       	cpi	r24, 0x70	; 112
 a98:	19 f0       	breq	.+6      	; 0xaa0 <vfprintf+0x232>
 a9a:	88 37       	cpi	r24, 0x78	; 120
 a9c:	21 f0       	breq	.+8      	; 0xaa6 <vfprintf+0x238>
 a9e:	af c0       	rjmp	.+350    	; 0xbfe <vfprintf+0x390>
 aa0:	2f 2f       	mov	r18, r31
 aa2:	20 61       	ori	r18, 0x10	; 16
 aa4:	b2 2e       	mov	r11, r18
 aa6:	b4 fe       	sbrs	r11, 4
 aa8:	0d c0       	rjmp	.+26     	; 0xac4 <vfprintf+0x256>
 aaa:	8b 2d       	mov	r24, r11
 aac:	84 60       	ori	r24, 0x04	; 4
 aae:	b8 2e       	mov	r11, r24
 ab0:	09 c0       	rjmp	.+18     	; 0xac4 <vfprintf+0x256>
 ab2:	24 ff       	sbrs	r18, 4
 ab4:	0a c0       	rjmp	.+20     	; 0xaca <vfprintf+0x25c>
 ab6:	9f 2f       	mov	r25, r31
 ab8:	96 60       	ori	r25, 0x06	; 6
 aba:	b9 2e       	mov	r11, r25
 abc:	06 c0       	rjmp	.+12     	; 0xaca <vfprintf+0x25c>
 abe:	28 e0       	ldi	r18, 0x08	; 8
 ac0:	30 e0       	ldi	r19, 0x00	; 0
 ac2:	05 c0       	rjmp	.+10     	; 0xace <vfprintf+0x260>
 ac4:	20 e1       	ldi	r18, 0x10	; 16
 ac6:	30 e0       	ldi	r19, 0x00	; 0
 ac8:	02 c0       	rjmp	.+4      	; 0xace <vfprintf+0x260>
 aca:	20 e1       	ldi	r18, 0x10	; 16
 acc:	32 e0       	ldi	r19, 0x02	; 2
 ace:	f8 01       	movw	r30, r16
 ad0:	b7 fe       	sbrs	r11, 7
 ad2:	07 c0       	rjmp	.+14     	; 0xae2 <vfprintf+0x274>
 ad4:	60 81       	ld	r22, Z
 ad6:	71 81       	ldd	r23, Z+1	; 0x01
 ad8:	82 81       	ldd	r24, Z+2	; 0x02
 ada:	93 81       	ldd	r25, Z+3	; 0x03
 adc:	0c 5f       	subi	r16, 0xFC	; 252
 ade:	1f 4f       	sbci	r17, 0xFF	; 255
 ae0:	06 c0       	rjmp	.+12     	; 0xaee <vfprintf+0x280>
 ae2:	60 81       	ld	r22, Z
 ae4:	71 81       	ldd	r23, Z+1	; 0x01
 ae6:	80 e0       	ldi	r24, 0x00	; 0
 ae8:	90 e0       	ldi	r25, 0x00	; 0
 aea:	0e 5f       	subi	r16, 0xFE	; 254
 aec:	1f 4f       	sbci	r17, 0xFF	; 255
 aee:	a4 01       	movw	r20, r8
 af0:	0e 94 74 06 	call	0xce8	; 0xce8 <__ultoa_invert>
 af4:	a8 2e       	mov	r10, r24
 af6:	a8 18       	sub	r10, r8
 af8:	fb 2d       	mov	r31, r11
 afa:	ff 77       	andi	r31, 0x7F	; 127
 afc:	bf 2e       	mov	r11, r31
 afe:	b6 fe       	sbrs	r11, 6
 b00:	0b c0       	rjmp	.+22     	; 0xb18 <vfprintf+0x2aa>
 b02:	2b 2d       	mov	r18, r11
 b04:	2e 7f       	andi	r18, 0xFE	; 254
 b06:	a5 14       	cp	r10, r5
 b08:	50 f4       	brcc	.+20     	; 0xb1e <vfprintf+0x2b0>
 b0a:	b4 fe       	sbrs	r11, 4
 b0c:	0a c0       	rjmp	.+20     	; 0xb22 <vfprintf+0x2b4>
 b0e:	b2 fc       	sbrc	r11, 2
 b10:	08 c0       	rjmp	.+16     	; 0xb22 <vfprintf+0x2b4>
 b12:	2b 2d       	mov	r18, r11
 b14:	2e 7e       	andi	r18, 0xEE	; 238
 b16:	05 c0       	rjmp	.+10     	; 0xb22 <vfprintf+0x2b4>
 b18:	7a 2c       	mov	r7, r10
 b1a:	2b 2d       	mov	r18, r11
 b1c:	03 c0       	rjmp	.+6      	; 0xb24 <vfprintf+0x2b6>
 b1e:	7a 2c       	mov	r7, r10
 b20:	01 c0       	rjmp	.+2      	; 0xb24 <vfprintf+0x2b6>
 b22:	75 2c       	mov	r7, r5
 b24:	24 ff       	sbrs	r18, 4
 b26:	0d c0       	rjmp	.+26     	; 0xb42 <vfprintf+0x2d4>
 b28:	fe 01       	movw	r30, r28
 b2a:	ea 0d       	add	r30, r10
 b2c:	f1 1d       	adc	r31, r1
 b2e:	80 81       	ld	r24, Z
 b30:	80 33       	cpi	r24, 0x30	; 48
 b32:	11 f4       	brne	.+4      	; 0xb38 <vfprintf+0x2ca>
 b34:	29 7e       	andi	r18, 0xE9	; 233
 b36:	09 c0       	rjmp	.+18     	; 0xb4a <vfprintf+0x2dc>
 b38:	22 ff       	sbrs	r18, 2
 b3a:	06 c0       	rjmp	.+12     	; 0xb48 <vfprintf+0x2da>
 b3c:	73 94       	inc	r7
 b3e:	73 94       	inc	r7
 b40:	04 c0       	rjmp	.+8      	; 0xb4a <vfprintf+0x2dc>
 b42:	82 2f       	mov	r24, r18
 b44:	86 78       	andi	r24, 0x86	; 134
 b46:	09 f0       	breq	.+2      	; 0xb4a <vfprintf+0x2dc>
 b48:	73 94       	inc	r7
 b4a:	23 fd       	sbrc	r18, 3
 b4c:	13 c0       	rjmp	.+38     	; 0xb74 <vfprintf+0x306>
 b4e:	20 ff       	sbrs	r18, 0
 b50:	06 c0       	rjmp	.+12     	; 0xb5e <vfprintf+0x2f0>
 b52:	5a 2c       	mov	r5, r10
 b54:	73 14       	cp	r7, r3
 b56:	18 f4       	brcc	.+6      	; 0xb5e <vfprintf+0x2f0>
 b58:	53 0c       	add	r5, r3
 b5a:	57 18       	sub	r5, r7
 b5c:	73 2c       	mov	r7, r3
 b5e:	73 14       	cp	r7, r3
 b60:	68 f4       	brcc	.+26     	; 0xb7c <vfprintf+0x30e>
 b62:	b7 01       	movw	r22, r14
 b64:	80 e2       	ldi	r24, 0x20	; 32
 b66:	90 e0       	ldi	r25, 0x00	; 0
 b68:	2c 87       	std	Y+12, r18	; 0x0c
 b6a:	0e 94 42 06 	call	0xc84	; 0xc84 <fputc>
 b6e:	73 94       	inc	r7
 b70:	2c 85       	ldd	r18, Y+12	; 0x0c
 b72:	f5 cf       	rjmp	.-22     	; 0xb5e <vfprintf+0x2f0>
 b74:	73 14       	cp	r7, r3
 b76:	10 f4       	brcc	.+4      	; 0xb7c <vfprintf+0x30e>
 b78:	37 18       	sub	r3, r7
 b7a:	01 c0       	rjmp	.+2      	; 0xb7e <vfprintf+0x310>
 b7c:	31 2c       	mov	r3, r1
 b7e:	24 ff       	sbrs	r18, 4
 b80:	12 c0       	rjmp	.+36     	; 0xba6 <vfprintf+0x338>
 b82:	b7 01       	movw	r22, r14
 b84:	80 e3       	ldi	r24, 0x30	; 48
 b86:	90 e0       	ldi	r25, 0x00	; 0
 b88:	2c 87       	std	Y+12, r18	; 0x0c
 b8a:	0e 94 42 06 	call	0xc84	; 0xc84 <fputc>
 b8e:	2c 85       	ldd	r18, Y+12	; 0x0c
 b90:	22 ff       	sbrs	r18, 2
 b92:	17 c0       	rjmp	.+46     	; 0xbc2 <vfprintf+0x354>
 b94:	21 ff       	sbrs	r18, 1
 b96:	03 c0       	rjmp	.+6      	; 0xb9e <vfprintf+0x330>
 b98:	88 e5       	ldi	r24, 0x58	; 88
 b9a:	90 e0       	ldi	r25, 0x00	; 0
 b9c:	02 c0       	rjmp	.+4      	; 0xba2 <vfprintf+0x334>
 b9e:	88 e7       	ldi	r24, 0x78	; 120
 ba0:	90 e0       	ldi	r25, 0x00	; 0
 ba2:	b7 01       	movw	r22, r14
 ba4:	0c c0       	rjmp	.+24     	; 0xbbe <vfprintf+0x350>
 ba6:	82 2f       	mov	r24, r18
 ba8:	86 78       	andi	r24, 0x86	; 134
 baa:	59 f0       	breq	.+22     	; 0xbc2 <vfprintf+0x354>
 bac:	21 fd       	sbrc	r18, 1
 bae:	02 c0       	rjmp	.+4      	; 0xbb4 <vfprintf+0x346>
 bb0:	80 e2       	ldi	r24, 0x20	; 32
 bb2:	01 c0       	rjmp	.+2      	; 0xbb6 <vfprintf+0x348>
 bb4:	8b e2       	ldi	r24, 0x2B	; 43
 bb6:	27 fd       	sbrc	r18, 7
 bb8:	8d e2       	ldi	r24, 0x2D	; 45
 bba:	b7 01       	movw	r22, r14
 bbc:	90 e0       	ldi	r25, 0x00	; 0
 bbe:	0e 94 42 06 	call	0xc84	; 0xc84 <fputc>
 bc2:	a5 14       	cp	r10, r5
 bc4:	38 f4       	brcc	.+14     	; 0xbd4 <vfprintf+0x366>
 bc6:	b7 01       	movw	r22, r14
 bc8:	80 e3       	ldi	r24, 0x30	; 48
 bca:	90 e0       	ldi	r25, 0x00	; 0
 bcc:	0e 94 42 06 	call	0xc84	; 0xc84 <fputc>
 bd0:	5a 94       	dec	r5
 bd2:	f7 cf       	rjmp	.-18     	; 0xbc2 <vfprintf+0x354>
 bd4:	aa 94       	dec	r10
 bd6:	f4 01       	movw	r30, r8
 bd8:	ea 0d       	add	r30, r10
 bda:	f1 1d       	adc	r31, r1
 bdc:	80 81       	ld	r24, Z
 bde:	b7 01       	movw	r22, r14
 be0:	90 e0       	ldi	r25, 0x00	; 0
 be2:	0e 94 42 06 	call	0xc84	; 0xc84 <fputc>
 be6:	a1 10       	cpse	r10, r1
 be8:	f5 cf       	rjmp	.-22     	; 0xbd4 <vfprintf+0x366>
 bea:	33 20       	and	r3, r3
 bec:	09 f4       	brne	.+2      	; 0xbf0 <vfprintf+0x382>
 bee:	51 ce       	rjmp	.-862    	; 0x892 <vfprintf+0x24>
 bf0:	b7 01       	movw	r22, r14
 bf2:	80 e2       	ldi	r24, 0x20	; 32
 bf4:	90 e0       	ldi	r25, 0x00	; 0
 bf6:	0e 94 42 06 	call	0xc84	; 0xc84 <fputc>
 bfa:	3a 94       	dec	r3
 bfc:	f6 cf       	rjmp	.-20     	; 0xbea <vfprintf+0x37c>
 bfe:	f7 01       	movw	r30, r14
 c00:	86 81       	ldd	r24, Z+6	; 0x06
 c02:	97 81       	ldd	r25, Z+7	; 0x07
 c04:	02 c0       	rjmp	.+4      	; 0xc0a <vfprintf+0x39c>
 c06:	8f ef       	ldi	r24, 0xFF	; 255
 c08:	9f ef       	ldi	r25, 0xFF	; 255
 c0a:	2c 96       	adiw	r28, 0x0c	; 12
 c0c:	e2 e1       	ldi	r30, 0x12	; 18
 c0e:	0c 94 ee 06 	jmp	0xddc	; 0xddc <__epilogue_restores__>

00000c12 <calloc>:
 c12:	0f 93       	push	r16
 c14:	1f 93       	push	r17
 c16:	cf 93       	push	r28
 c18:	df 93       	push	r29
 c1a:	86 9f       	mul	r24, r22
 c1c:	80 01       	movw	r16, r0
 c1e:	87 9f       	mul	r24, r23
 c20:	10 0d       	add	r17, r0
 c22:	96 9f       	mul	r25, r22
 c24:	10 0d       	add	r17, r0
 c26:	11 24       	eor	r1, r1
 c28:	c8 01       	movw	r24, r16
 c2a:	0e 94 84 02 	call	0x508	; 0x508 <malloc>
 c2e:	ec 01       	movw	r28, r24
 c30:	00 97       	sbiw	r24, 0x00	; 0
 c32:	29 f0       	breq	.+10     	; 0xc3e <calloc+0x2c>
 c34:	a8 01       	movw	r20, r16
 c36:	60 e0       	ldi	r22, 0x00	; 0
 c38:	70 e0       	ldi	r23, 0x00	; 0
 c3a:	0e 94 30 06 	call	0xc60	; 0xc60 <memset>
 c3e:	ce 01       	movw	r24, r28
 c40:	df 91       	pop	r29
 c42:	cf 91       	pop	r28
 c44:	1f 91       	pop	r17
 c46:	0f 91       	pop	r16
 c48:	08 95       	ret

00000c4a <strnlen_P>:
 c4a:	fc 01       	movw	r30, r24
 c4c:	05 90       	lpm	r0, Z+
 c4e:	61 50       	subi	r22, 0x01	; 1
 c50:	70 40       	sbci	r23, 0x00	; 0
 c52:	01 10       	cpse	r0, r1
 c54:	d8 f7       	brcc	.-10     	; 0xc4c <strnlen_P+0x2>
 c56:	80 95       	com	r24
 c58:	90 95       	com	r25
 c5a:	8e 0f       	add	r24, r30
 c5c:	9f 1f       	adc	r25, r31
 c5e:	08 95       	ret

00000c60 <memset>:
 c60:	dc 01       	movw	r26, r24
 c62:	01 c0       	rjmp	.+2      	; 0xc66 <memset+0x6>
 c64:	6d 93       	st	X+, r22
 c66:	41 50       	subi	r20, 0x01	; 1
 c68:	50 40       	sbci	r21, 0x00	; 0
 c6a:	e0 f7       	brcc	.-8      	; 0xc64 <memset+0x4>
 c6c:	08 95       	ret

00000c6e <strnlen>:
 c6e:	fc 01       	movw	r30, r24
 c70:	61 50       	subi	r22, 0x01	; 1
 c72:	70 40       	sbci	r23, 0x00	; 0
 c74:	01 90       	ld	r0, Z+
 c76:	01 10       	cpse	r0, r1
 c78:	d8 f7       	brcc	.-10     	; 0xc70 <strnlen+0x2>
 c7a:	80 95       	com	r24
 c7c:	90 95       	com	r25
 c7e:	8e 0f       	add	r24, r30
 c80:	9f 1f       	adc	r25, r31
 c82:	08 95       	ret

00000c84 <fputc>:
 c84:	0f 93       	push	r16
 c86:	1f 93       	push	r17
 c88:	cf 93       	push	r28
 c8a:	df 93       	push	r29
 c8c:	18 2f       	mov	r17, r24
 c8e:	09 2f       	mov	r16, r25
 c90:	eb 01       	movw	r28, r22
 c92:	8b 81       	ldd	r24, Y+3	; 0x03
 c94:	81 fd       	sbrc	r24, 1
 c96:	03 c0       	rjmp	.+6      	; 0xc9e <fputc+0x1a>
 c98:	8f ef       	ldi	r24, 0xFF	; 255
 c9a:	9f ef       	ldi	r25, 0xFF	; 255
 c9c:	20 c0       	rjmp	.+64     	; 0xcde <fputc+0x5a>
 c9e:	82 ff       	sbrs	r24, 2
 ca0:	10 c0       	rjmp	.+32     	; 0xcc2 <fputc+0x3e>
 ca2:	4e 81       	ldd	r20, Y+6	; 0x06
 ca4:	5f 81       	ldd	r21, Y+7	; 0x07
 ca6:	2c 81       	ldd	r18, Y+4	; 0x04
 ca8:	3d 81       	ldd	r19, Y+5	; 0x05
 caa:	42 17       	cp	r20, r18
 cac:	53 07       	cpc	r21, r19
 cae:	7c f4       	brge	.+30     	; 0xcce <fputc+0x4a>
 cb0:	e8 81       	ld	r30, Y
 cb2:	f9 81       	ldd	r31, Y+1	; 0x01
 cb4:	9f 01       	movw	r18, r30
 cb6:	2f 5f       	subi	r18, 0xFF	; 255
 cb8:	3f 4f       	sbci	r19, 0xFF	; 255
 cba:	39 83       	std	Y+1, r19	; 0x01
 cbc:	28 83       	st	Y, r18
 cbe:	10 83       	st	Z, r17
 cc0:	06 c0       	rjmp	.+12     	; 0xcce <fputc+0x4a>
 cc2:	e8 85       	ldd	r30, Y+8	; 0x08
 cc4:	f9 85       	ldd	r31, Y+9	; 0x09
 cc6:	81 2f       	mov	r24, r17
 cc8:	09 95       	icall
 cca:	89 2b       	or	r24, r25
 ccc:	29 f7       	brne	.-54     	; 0xc98 <fputc+0x14>
 cce:	2e 81       	ldd	r18, Y+6	; 0x06
 cd0:	3f 81       	ldd	r19, Y+7	; 0x07
 cd2:	2f 5f       	subi	r18, 0xFF	; 255
 cd4:	3f 4f       	sbci	r19, 0xFF	; 255
 cd6:	3f 83       	std	Y+7, r19	; 0x07
 cd8:	2e 83       	std	Y+6, r18	; 0x06
 cda:	81 2f       	mov	r24, r17
 cdc:	90 2f       	mov	r25, r16
 cde:	df 91       	pop	r29
 ce0:	cf 91       	pop	r28
 ce2:	1f 91       	pop	r17
 ce4:	0f 91       	pop	r16
 ce6:	08 95       	ret

00000ce8 <__ultoa_invert>:
 ce8:	fa 01       	movw	r30, r20
 cea:	aa 27       	eor	r26, r26
 cec:	28 30       	cpi	r18, 0x08	; 8
 cee:	51 f1       	breq	.+84     	; 0xd44 <__ultoa_invert+0x5c>
 cf0:	20 31       	cpi	r18, 0x10	; 16
 cf2:	81 f1       	breq	.+96     	; 0xd54 <__ultoa_invert+0x6c>
 cf4:	e8 94       	clt
 cf6:	6f 93       	push	r22
 cf8:	6e 7f       	andi	r22, 0xFE	; 254
 cfa:	6e 5f       	subi	r22, 0xFE	; 254
 cfc:	7f 4f       	sbci	r23, 0xFF	; 255
 cfe:	8f 4f       	sbci	r24, 0xFF	; 255
 d00:	9f 4f       	sbci	r25, 0xFF	; 255
 d02:	af 4f       	sbci	r26, 0xFF	; 255
 d04:	b1 e0       	ldi	r27, 0x01	; 1
 d06:	3e d0       	rcall	.+124    	; 0xd84 <__ultoa_invert+0x9c>
 d08:	b4 e0       	ldi	r27, 0x04	; 4
 d0a:	3c d0       	rcall	.+120    	; 0xd84 <__ultoa_invert+0x9c>
 d0c:	67 0f       	add	r22, r23
 d0e:	78 1f       	adc	r23, r24
 d10:	89 1f       	adc	r24, r25
 d12:	9a 1f       	adc	r25, r26
 d14:	a1 1d       	adc	r26, r1
 d16:	68 0f       	add	r22, r24
 d18:	79 1f       	adc	r23, r25
 d1a:	8a 1f       	adc	r24, r26
 d1c:	91 1d       	adc	r25, r1
 d1e:	a1 1d       	adc	r26, r1
 d20:	6a 0f       	add	r22, r26
 d22:	71 1d       	adc	r23, r1
 d24:	81 1d       	adc	r24, r1
 d26:	91 1d       	adc	r25, r1
 d28:	a1 1d       	adc	r26, r1
 d2a:	20 d0       	rcall	.+64     	; 0xd6c <__ultoa_invert+0x84>
 d2c:	09 f4       	brne	.+2      	; 0xd30 <__ultoa_invert+0x48>
 d2e:	68 94       	set
 d30:	3f 91       	pop	r19
 d32:	2a e0       	ldi	r18, 0x0A	; 10
 d34:	26 9f       	mul	r18, r22
 d36:	11 24       	eor	r1, r1
 d38:	30 19       	sub	r19, r0
 d3a:	30 5d       	subi	r19, 0xD0	; 208
 d3c:	31 93       	st	Z+, r19
 d3e:	de f6       	brtc	.-74     	; 0xcf6 <__ultoa_invert+0xe>
 d40:	cf 01       	movw	r24, r30
 d42:	08 95       	ret
 d44:	46 2f       	mov	r20, r22
 d46:	47 70       	andi	r20, 0x07	; 7
 d48:	40 5d       	subi	r20, 0xD0	; 208
 d4a:	41 93       	st	Z+, r20
 d4c:	b3 e0       	ldi	r27, 0x03	; 3
 d4e:	0f d0       	rcall	.+30     	; 0xd6e <__ultoa_invert+0x86>
 d50:	c9 f7       	brne	.-14     	; 0xd44 <__ultoa_invert+0x5c>
 d52:	f6 cf       	rjmp	.-20     	; 0xd40 <__ultoa_invert+0x58>
 d54:	46 2f       	mov	r20, r22
 d56:	4f 70       	andi	r20, 0x0F	; 15
 d58:	40 5d       	subi	r20, 0xD0	; 208
 d5a:	4a 33       	cpi	r20, 0x3A	; 58
 d5c:	18 f0       	brcs	.+6      	; 0xd64 <__ultoa_invert+0x7c>
 d5e:	49 5d       	subi	r20, 0xD9	; 217
 d60:	31 fd       	sbrc	r19, 1
 d62:	40 52       	subi	r20, 0x20	; 32
 d64:	41 93       	st	Z+, r20
 d66:	02 d0       	rcall	.+4      	; 0xd6c <__ultoa_invert+0x84>
 d68:	a9 f7       	brne	.-22     	; 0xd54 <__ultoa_invert+0x6c>
 d6a:	ea cf       	rjmp	.-44     	; 0xd40 <__ultoa_invert+0x58>
 d6c:	b4 e0       	ldi	r27, 0x04	; 4
 d6e:	a6 95       	lsr	r26
 d70:	97 95       	ror	r25
 d72:	87 95       	ror	r24
 d74:	77 95       	ror	r23
 d76:	67 95       	ror	r22
 d78:	ba 95       	dec	r27
 d7a:	c9 f7       	brne	.-14     	; 0xd6e <__ultoa_invert+0x86>
 d7c:	00 97       	sbiw	r24, 0x00	; 0
 d7e:	61 05       	cpc	r22, r1
 d80:	71 05       	cpc	r23, r1
 d82:	08 95       	ret
 d84:	9b 01       	movw	r18, r22
 d86:	ac 01       	movw	r20, r24
 d88:	0a 2e       	mov	r0, r26
 d8a:	06 94       	lsr	r0
 d8c:	57 95       	ror	r21
 d8e:	47 95       	ror	r20
 d90:	37 95       	ror	r19
 d92:	27 95       	ror	r18
 d94:	ba 95       	dec	r27
 d96:	c9 f7       	brne	.-14     	; 0xd8a <__ultoa_invert+0xa2>
 d98:	62 0f       	add	r22, r18
 d9a:	73 1f       	adc	r23, r19
 d9c:	84 1f       	adc	r24, r20
 d9e:	95 1f       	adc	r25, r21
 da0:	a0 1d       	adc	r26, r0
 da2:	08 95       	ret

00000da4 <__prologue_saves__>:
 da4:	2f 92       	push	r2
 da6:	3f 92       	push	r3
 da8:	4f 92       	push	r4
 daa:	5f 92       	push	r5
 dac:	6f 92       	push	r6
 dae:	7f 92       	push	r7
 db0:	8f 92       	push	r8
 db2:	9f 92       	push	r9
 db4:	af 92       	push	r10
 db6:	bf 92       	push	r11
 db8:	cf 92       	push	r12
 dba:	df 92       	push	r13
 dbc:	ef 92       	push	r14
 dbe:	ff 92       	push	r15
 dc0:	0f 93       	push	r16
 dc2:	1f 93       	push	r17
 dc4:	cf 93       	push	r28
 dc6:	df 93       	push	r29
 dc8:	cd b7       	in	r28, 0x3d	; 61
 dca:	de b7       	in	r29, 0x3e	; 62
 dcc:	ca 1b       	sub	r28, r26
 dce:	db 0b       	sbc	r29, r27
 dd0:	0f b6       	in	r0, 0x3f	; 63
 dd2:	f8 94       	cli
 dd4:	de bf       	out	0x3e, r29	; 62
 dd6:	0f be       	out	0x3f, r0	; 63
 dd8:	cd bf       	out	0x3d, r28	; 61
 dda:	09 94       	ijmp

00000ddc <__epilogue_restores__>:
 ddc:	2a 88       	ldd	r2, Y+18	; 0x12
 dde:	39 88       	ldd	r3, Y+17	; 0x11
 de0:	48 88       	ldd	r4, Y+16	; 0x10
 de2:	5f 84       	ldd	r5, Y+15	; 0x0f
 de4:	6e 84       	ldd	r6, Y+14	; 0x0e
 de6:	7d 84       	ldd	r7, Y+13	; 0x0d
 de8:	8c 84       	ldd	r8, Y+12	; 0x0c
 dea:	9b 84       	ldd	r9, Y+11	; 0x0b
 dec:	aa 84       	ldd	r10, Y+10	; 0x0a
 dee:	b9 84       	ldd	r11, Y+9	; 0x09
 df0:	c8 84       	ldd	r12, Y+8	; 0x08
 df2:	df 80       	ldd	r13, Y+7	; 0x07
 df4:	ee 80       	ldd	r14, Y+6	; 0x06
 df6:	fd 80       	ldd	r15, Y+5	; 0x05
 df8:	0c 81       	ldd	r16, Y+4	; 0x04
 dfa:	1b 81       	ldd	r17, Y+3	; 0x03
 dfc:	aa 81       	ldd	r26, Y+2	; 0x02
 dfe:	b9 81       	ldd	r27, Y+1	; 0x01
 e00:	ce 0f       	add	r28, r30
 e02:	d1 1d       	adc	r29, r1
 e04:	0f b6       	in	r0, 0x3f	; 63
 e06:	f8 94       	cli
 e08:	de bf       	out	0x3e, r29	; 62
 e0a:	0f be       	out	0x3f, r0	; 63
 e0c:	cd bf       	out	0x3d, r28	; 61
 e0e:	ed 01       	movw	r28, r26
 e10:	08 95       	ret

00000e12 <_exit>:
 e12:	f8 94       	cli

00000e14 <__stop_program>:
 e14:	ff cf       	rjmp	.-2      	; 0xe14 <__stop_program>
