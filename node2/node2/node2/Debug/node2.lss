
node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000080  00800200  00001042  000010d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001042  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800280  00800280  00001156  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001156  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000198  00000000  00000000  000011b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000013b4  00000000  00000000  0000134a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a59  00000000  00000000  000026fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000c61  00000000  00000000  00003157  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000328  00000000  00000000  00003db8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006ae  00000000  00000000  000040e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a53  00000000  00000000  0000478e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000130  00000000  00000000  000051e1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
       6:	00 00       	nop
       8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
       a:	00 00       	nop
       c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
       e:	00 00       	nop
      10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
      12:	00 00       	nop
      14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
      16:	00 00       	nop
      18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
      1e:	00 00       	nop
      20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
      22:	00 00       	nop
      24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
      26:	00 00       	nop
      28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
      2e:	00 00       	nop
      30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
      32:	00 00       	nop
      34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
      36:	00 00       	nop
      38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
      3e:	00 00       	nop
      40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
      42:	00 00       	nop
      44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
      46:	00 00       	nop
      48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
      4e:	00 00       	nop
      50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
      52:	00 00       	nop
      54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
      56:	00 00       	nop
      58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
      5e:	00 00       	nop
      60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
      62:	00 00       	nop
      64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
      66:	00 00       	nop
      68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
      6e:	00 00       	nop
      70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
      72:	00 00       	nop
      74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
      76:	00 00       	nop
      78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
      7e:	00 00       	nop
      80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
      82:	00 00       	nop
      84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
      86:	00 00       	nop
      88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
      8e:	00 00       	nop
      90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
      92:	00 00       	nop
      94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
      96:	00 00       	nop
      98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
      be:	00 00       	nop
      c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
      da:	00 00       	nop
      dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
      de:	00 00       	nop
      e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e2 e4       	ldi	r30, 0x42	; 66
      fc:	f0 e1       	ldi	r31, 0x10	; 16
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a0 38       	cpi	r26, 0x80	; 128
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a0 e8       	ldi	r26, 0x80	; 128
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ac 38       	cpi	r26, 0x8C	; 140
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	14 d1       	rcall	.+552    	; 0x348 <main>
     120:	8e c7       	rjmp	.+3868   	; 0x103e <_exit>

00000122 <__bad_interrupt>:
     122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <can_init>:
	can_msg wholeMessage;
	wholeMessage.id = 0;
	wholeMessage.length = 0;
	wholeMessage.data[0] = 0b00000000;
	
	if (mcp2515_read(MCP_CANINTF) & MCP_RX0IF){ //om rx0if er høy, altså interrupt pinnen er høy, betyr det at receive buffer nr 0 har fått inn ny data
     124:	b2 d0       	rcall	.+356    	; 0x28a <mcp2515_init>
     126:	43 e0       	ldi	r20, 0x03	; 3
     128:	63 e0       	ldi	r22, 0x03	; 3
     12a:	8b e2       	ldi	r24, 0x2B	; 43
     12c:	c8 d0       	rcall	.+400    	; 0x2be <mcp2515_bit_modify>
     12e:	60 e0       	ldi	r22, 0x00	; 0
     130:	80 e2       	ldi	r24, 0x20	; 32
     132:	97 d0       	rcall	.+302    	; 0x262 <mcp2515_write>
     134:	60 e0       	ldi	r22, 0x00	; 0
     136:	81 e2       	ldi	r24, 0x21	; 33
     138:	94 d0       	rcall	.+296    	; 0x262 <mcp2515_write>
     13a:	60 e0       	ldi	r22, 0x00	; 0
     13c:	84 e2       	ldi	r24, 0x24	; 36
     13e:	91 d0       	rcall	.+290    	; 0x262 <mcp2515_write>
     140:	60 e0       	ldi	r22, 0x00	; 0
     142:	85 e2       	ldi	r24, 0x25	; 37
     144:	8e d0       	rcall	.+284    	; 0x262 <mcp2515_write>
     146:	40 e0       	ldi	r20, 0x00	; 0
     148:	60 ee       	ldi	r22, 0xE0	; 224
     14a:	8f e0       	ldi	r24, 0x0F	; 15
     14c:	b8 c0       	rjmp	.+368    	; 0x2be <mcp2515_bit_modify>
     14e:	08 95       	ret

00000150 <can_receive_message>:
		unsigned int idH = mcp2515_read(MCP_RXB0SIDH);
		unsigned int idL = mcp2515_read(MCP_RXB0SIDH+1);
     150:	9f 92       	push	r9
     152:	af 92       	push	r10
     154:	bf 92       	push	r11
     156:	cf 92       	push	r12
     158:	df 92       	push	r13
     15a:	ef 92       	push	r14
     15c:	ff 92       	push	r15
     15e:	0f 93       	push	r16
     160:	1f 93       	push	r17
     162:	cf 93       	push	r28
     164:	df 93       	push	r29
     166:	7c 01       	movw	r14, r24
		idL = (idL >> 5); //Fordi de er idL er tre MSB i MCP_RXB0SIDL, må rightshifte 5 ganger
     168:	fc 01       	movw	r30, r24
     16a:	11 82       	std	Z+1, r1	; 0x01
     16c:	10 82       	st	Z, r1
		idH = (idH << 3); //Må leftshifte 
     16e:	12 8a       	std	Z+18, r1	; 0x12
		unsigned int id = (idH | idL); //Kan evt ta +
     170:	13 82       	std	Z+3, r1	; 0x03
     172:	12 82       	std	Z+2, r1	; 0x02
		
		
     174:	8c e2       	ldi	r24, 0x2C	; 44
     176:	6a d0       	rcall	.+212    	; 0x24c <mcp2515_read>
     178:	80 ff       	sbrs	r24, 0
     17a:	47 c0       	rjmp	.+142    	; 0x20a <can_receive_message+0xba>
		uint8_t length = mcp2515_read(MCP_RXB0SIDH+4); //leser av rxb0dlc
     17c:	81 e6       	ldi	r24, 0x61	; 97
     17e:	66 d0       	rcall	.+204    	; 0x24c <mcp2515_read>
     180:	c8 2f       	mov	r28, r24
     182:	d0 e0       	ldi	r29, 0x00	; 0
		if (length > 8){
     184:	82 e6       	ldi	r24, 0x62	; 98
     186:	62 d0       	rcall	.+196    	; 0x24c <mcp2515_read>
     188:	90 e0       	ldi	r25, 0x00	; 0
			printf("Length > 8, not allowed.");
			return wholeMessage;
     18a:	5e 01       	movw	r10, r28
     18c:	aa 0c       	add	r10, r10
     18e:	bb 1c       	adc	r11, r11
     190:	aa 0c       	add	r10, r10
     192:	bb 1c       	adc	r11, r11
     194:	aa 0c       	add	r10, r10
     196:	bb 1c       	adc	r11, r11
		unsigned int id = (idH | idL); //Kan evt ta +
		
		
		uint8_t length = mcp2515_read(MCP_RXB0SIDH+4); //leser av rxb0dlc
		if (length > 8){
			printf("Length > 8, not allowed.");
     198:	96 95       	lsr	r25
     19a:	87 95       	ror	r24
     19c:	92 95       	swap	r25
     19e:	82 95       	swap	r24
     1a0:	8f 70       	andi	r24, 0x0F	; 15
     1a2:	89 27       	eor	r24, r25
     1a4:	9f 70       	andi	r25, 0x0F	; 15
     1a6:	89 27       	eor	r24, r25
			return wholeMessage;
		}
     1a8:	a8 2a       	or	r10, r24
     1aa:	b9 2a       	or	r11, r25
		
		//leser nå av rxb0d0 til rxb0d7 (avhengig av hvor lang meldinga vi har mottatt er), og lagrer det i arrayet message
		int byte = 0;
     1ac:	85 e6       	ldi	r24, 0x65	; 101
     1ae:	4e d0       	rcall	.+156    	; 0x24c <mcp2515_read>
     1b0:	98 2e       	mov	r9, r24
		//lagrer alt i en struct
     1b2:	f8 e0       	ldi	r31, 0x08	; 8
     1b4:	f8 17       	cp	r31, r24
     1b6:	30 f0       	brcs	.+12     	; 0x1c4 <can_receive_message+0x74>
		}
		
		
		wholeMessage.id = id;
		wholeMessage.length = length;
	}
     1b8:	c8 2e       	mov	r12, r24
     1ba:	d1 2c       	mov	r13, r1
     1bc:	1c 14       	cp	r1, r12
     1be:	1d 04       	cpc	r1, r13
     1c0:	5c f0       	brlt	.+22     	; 0x1d8 <can_receive_message+0x88>
     1c2:	1c c0       	rjmp	.+56     	; 0x1fc <can_receive_message+0xac>
		}
		
		//leser nå av rxb0d0 til rxb0d7 (avhengig av hvor lang meldinga vi har mottatt er), og lagrer det i arrayet message
		int byte = 0;
		//lagrer alt i en struct
		for (byte = 0; byte < length; byte++){
     1c4:	8e e1       	ldi	r24, 0x1E	; 30
     1c6:	92 e0       	ldi	r25, 0x02	; 2
     1c8:	9f 93       	push	r25
     1ca:	8f 93       	push	r24
     1cc:	4b d3       	rcall	.+1686   	; 0x864 <printf>
			wholeMessage.data[byte] = mcp2515_read(MCP_RXB0SIDH+5+byte);
     1ce:	0f 90       	pop	r0
     1d0:	0f 90       	pop	r0
     1d2:	80 e0       	ldi	r24, 0x00	; 0
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	1b c0       	rjmp	.+54     	; 0x20e <can_receive_message+0xbe>
     1d8:	87 01       	movw	r16, r14
     1da:	0e 5f       	subi	r16, 0xFE	; 254
     1dc:	1f 4f       	sbci	r17, 0xFF	; 255
		}
		
		
		wholeMessage.id = id;
		wholeMessage.length = length;
	}
     1de:	c0 e0       	ldi	r28, 0x00	; 0
     1e0:	d0 e0       	ldi	r29, 0x00	; 0
	return wholeMessage;
     1e2:	8c 2f       	mov	r24, r28
     1e4:	8a 59       	subi	r24, 0x9A	; 154
     1e6:	32 d0       	rcall	.+100    	; 0x24c <mcp2515_read>
     1e8:	28 2f       	mov	r18, r24
     1ea:	30 e0       	ldi	r19, 0x00	; 0
     1ec:	f8 01       	movw	r30, r16
     1ee:	21 93       	st	Z+, r18
     1f0:	31 93       	st	Z+, r19
     1f2:	8f 01       	movw	r16, r30
		}
		
		
		wholeMessage.id = id;
		wholeMessage.length = length;
	}
     1f4:	21 96       	adiw	r28, 0x01	; 1
     1f6:	cc 15       	cp	r28, r12
     1f8:	dd 05       	cpc	r29, r13
     1fa:	9c f3       	brlt	.-26     	; 0x1e2 <can_receive_message+0x92>
	return wholeMessage;
}



     1fc:	f7 01       	movw	r30, r14
     1fe:	b1 82       	std	Z+1, r11	; 0x01
     200:	a0 82       	st	Z, r10
 //enable rollover
     202:	92 8a       	std	Z+18, r9	; 0x12
     204:	81 e0       	ldi	r24, 0x01	; 1
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	02 c0       	rjmp	.+4      	; 0x20e <can_receive_message+0xbe>
     20a:	81 e0       	ldi	r24, 0x01	; 1
     20c:	90 e0       	ldi	r25, 0x00	; 0
     20e:	df 91       	pop	r29
     210:	cf 91       	pop	r28
     212:	1f 91       	pop	r17
     214:	0f 91       	pop	r16
     216:	ff 90       	pop	r15
     218:	ef 90       	pop	r14
     21a:	df 90       	pop	r13
     21c:	cf 90       	pop	r12
     21e:	bf 90       	pop	r11
     220:	af 90       	pop	r10
     222:	9f 90       	pop	r9
     224:	08 95       	ret

00000226 <joy_getPercent>:

int joyLastDirectionY; //Må gjøres global for å leve etter vi går ut av scope
int joyLastDirectionX;

int joy_getPercent(int raw){
	return (((raw*(1.0)) / 255) * 100);
     226:	bc 01       	movw	r22, r24
     228:	88 27       	eor	r24, r24
     22a:	77 fd       	sbrc	r23, 7
     22c:	80 95       	com	r24
     22e:	98 2f       	mov	r25, r24
     230:	b9 d1       	rcall	.+882    	; 0x5a4 <__floatsisf>
     232:	20 e0       	ldi	r18, 0x00	; 0
     234:	30 e0       	ldi	r19, 0x00	; 0
     236:	4f e7       	ldi	r20, 0x7F	; 127
     238:	53 e4       	ldi	r21, 0x43	; 67
     23a:	19 d1       	rcall	.+562    	; 0x46e <__divsf3>
     23c:	20 e0       	ldi	r18, 0x00	; 0
     23e:	30 e0       	ldi	r19, 0x00	; 0
     240:	48 ec       	ldi	r20, 0xC8	; 200
     242:	52 e4       	ldi	r21, 0x42	; 66
     244:	3b d2       	rcall	.+1142   	; 0x6bc <__mulsf3>
     246:	7b d1       	rcall	.+758    	; 0x53e <__fixsfsi>
}
     248:	cb 01       	movw	r24, r22
     24a:	08 95       	ret

0000024c <mcp2515_read>:
		spi_MasterTransmit(0b10000010); 
	}
	else{ //choose TXB2
		spi_MasterTransmit(0b10000100);
	}
	
     24c:	cf 93       	push	r28
     24e:	c8 2f       	mov	r28, r24
     250:	2f 98       	cbi	0x05, 7	; 5
     252:	83 e0       	ldi	r24, 0x03	; 3
     254:	53 d0       	rcall	.+166    	; 0x2fc <spi_MasterTransmit>
     256:	8c 2f       	mov	r24, r28
     258:	51 d0       	rcall	.+162    	; 0x2fc <spi_MasterTransmit>
     25a:	55 d0       	rcall	.+170    	; 0x306 <spi_MasterRead>
     25c:	2f 9a       	sbi	0x05, 7	; 5
     25e:	cf 91       	pop	r28
     260:	08 95       	ret

00000262 <mcp2515_write>:
     262:	cf 93       	push	r28
     264:	df 93       	push	r29
     266:	d8 2f       	mov	r29, r24
     268:	c6 2f       	mov	r28, r22
     26a:	2f 98       	cbi	0x05, 7	; 5
     26c:	82 e0       	ldi	r24, 0x02	; 2
     26e:	46 d0       	rcall	.+140    	; 0x2fc <spi_MasterTransmit>
     270:	8d 2f       	mov	r24, r29
     272:	44 d0       	rcall	.+136    	; 0x2fc <spi_MasterTransmit>
     274:	8c 2f       	mov	r24, r28
     276:	42 d0       	rcall	.+132    	; 0x2fc <spi_MasterTransmit>
     278:	2f 9a       	sbi	0x05, 7	; 5
     27a:	df 91       	pop	r29
     27c:	cf 91       	pop	r28
     27e:	08 95       	ret

00000280 <mcp2515_reset>:
     280:	2f 98       	cbi	0x05, 7	; 5
     282:	80 ec       	ldi	r24, 0xC0	; 192
     284:	3b d0       	rcall	.+118    	; 0x2fc <spi_MasterTransmit>
     286:	2f 9a       	sbi	0x05, 7	; 5
     288:	08 95       	ret

0000028a <mcp2515_init>:
     28a:	2d d0       	rcall	.+90     	; 0x2e6 <spi_init>
     28c:	f9 df       	rcall	.-14     	; 0x280 <mcp2515_reset>
     28e:	83 e0       	ldi	r24, 0x03	; 3
     290:	8a 95       	dec	r24
     292:	f1 f7       	brne	.-4      	; 0x290 <mcp2515_init+0x6>
     294:	00 00       	nop
     296:	8e e0       	ldi	r24, 0x0E	; 14
     298:	d9 df       	rcall	.-78     	; 0x24c <mcp2515_read>
     29a:	98 2f       	mov	r25, r24
     29c:	90 7e       	andi	r25, 0xE0	; 224
     29e:	81 e0       	ldi	r24, 0x01	; 1
     2a0:	90 38       	cpi	r25, 0x80	; 128
     2a2:	09 f4       	brne	.+2      	; 0x2a6 <mcp2515_init+0x1c>
     2a4:	80 e0       	ldi	r24, 0x00	; 0
     2a6:	08 95       	ret

000002a8 <mcp2515_read_status>:
	set_bit(PORTB,SS); //Setter SS høy
}

     2a8:	cf 93       	push	r28
uint8_t mcp2515_read_status(){
     2aa:	2f 98       	cbi	0x05, 7	; 5
	clear_bit(PORTB,SS); //Setter SS lav
	
	uint8_t statusRegister;
	uint8_t statusRegister2;

     2ac:	80 ea       	ldi	r24, 0xA0	; 160
     2ae:	26 d0       	rcall	.+76     	; 0x2fc <spi_MasterTransmit>
	spi_MasterTransmit(MCP_READ_STATUS);
     2b0:	2a d0       	rcall	.+84     	; 0x306 <spi_MasterRead>
     2b2:	c8 2f       	mov	r28, r24
	statusRegister = spi_MasterRead(); //disse to skal være like hverandre, se s. 69
     2b4:	28 d0       	rcall	.+80     	; 0x306 <spi_MasterRead>
		printf("Status registers in mcp2515_read_status() not identical.");
		return 0;
	}

	set_bit(PORTB,SS); //Setter SS høy

     2b6:	2f 9a       	sbi	0x05, 7	; 5
	return statusRegister;
}

     2b8:	8c 2f       	mov	r24, r28
     2ba:	cf 91       	pop	r28
     2bc:	08 95       	ret

000002be <mcp2515_bit_modify>:

void mcp2515_bit_modify(uint8_t regAdr, uint8_t maskBits, uint8_t data){ //se s. 68
	clear_bit(PORTB,SS); //Setter SS lav
     2be:	1f 93       	push	r17
     2c0:	cf 93       	push	r28
     2c2:	df 93       	push	r29
     2c4:	18 2f       	mov	r17, r24
     2c6:	d6 2f       	mov	r29, r22
     2c8:	c4 2f       	mov	r28, r20

     2ca:	2f 98       	cbi	0x05, 7	; 5
	spi_MasterTransmit(MCP_BITMOD);
	spi_MasterTransmit(regAdr);
     2cc:	85 e0       	ldi	r24, 0x05	; 5
     2ce:	16 d0       	rcall	.+44     	; 0x2fc <spi_MasterTransmit>
	spi_MasterTransmit(maskBits);
     2d0:	81 2f       	mov	r24, r17
     2d2:	14 d0       	rcall	.+40     	; 0x2fc <spi_MasterTransmit>
	spi_MasterTransmit(data);
     2d4:	8d 2f       	mov	r24, r29
     2d6:	12 d0       	rcall	.+36     	; 0x2fc <spi_MasterTransmit>

     2d8:	8c 2f       	mov	r24, r28
     2da:	10 d0       	rcall	.+32     	; 0x2fc <spi_MasterTransmit>
	set_bit(PORTB,SS); //Setter SS høy
}
     2dc:	2f 9a       	sbi	0x05, 7	; 5

     2de:	df 91       	pop	r29
     2e0:	cf 91       	pop	r28
     2e2:	1f 91       	pop	r17
     2e4:	08 95       	ret

000002e6 <spi_init>:
 #define set_bit( reg, bit ) (reg |= (1 << bit))
 #define clear_bit( reg, bit ) (reg &= ~(1 << bit))

void spi_init(void){
    /* Set MOSI and SCK output, all others input */
    DDRB |= (1<<MOSI)|(1<<SCK);
     2e6:	84 b1       	in	r24, 0x04	; 4
     2e8:	86 60       	ori	r24, 0x06	; 6
     2ea:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << MISO);
     2ec:	23 98       	cbi	0x04, 3	; 4
    /* Enable SPI, Master, set clock rate fck/2 */
    SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPI2X);
     2ee:	81 e5       	ldi	r24, 0x51	; 81
     2f0:	8c bd       	out	0x2c, r24	; 44
	
	set_bit(DDRB,SS); //Setter PB4 til write/output
     2f2:	27 9a       	sbi	0x04, 7	; 4
	set_bit(PORTB, SS);
     2f4:	2f 9a       	sbi	0x05, 7	; 5
	
	if(SS==7){ //Hvis vi har arduino'en, trenger å sette PB0 til output og høy
		set_bit(DDRB,PB0); //Setter PB4 til write/output
     2f6:	20 9a       	sbi	0x04, 0	; 4
		set_bit(PORTB, PB0);
     2f8:	28 9a       	sbi	0x05, 0	; 5
     2fa:	08 95       	ret

000002fc <spi_MasterTransmit>:

//Med denne må vi sette SS lav/høy før/etter mastertransmit starter/slutter
void spi_MasterTransmit(char cData) { //keepLow holds the SS* signal low so the transmission continues
	
	/* Start transmission */
	SPDR = cData;
     2fc:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete. Interrupt flag in SPSR is set (SPIF). */
	while(!(SPSR & (1<<SPIF)));
     2fe:	0d b4       	in	r0, 0x2d	; 45
     300:	07 fe       	sbrs	r0, 7
     302:	fd cf       	rjmp	.-6      	; 0x2fe <spi_MasterTransmit+0x2>
}
     304:	08 95       	ret

00000306 <spi_MasterRead>:

//Egentlig ikke nødvendig med denne funksjonen, fordi MasterTransmit gjør det samme, men vi beholder den for lesbarhet av koden
uint8_t spi_MasterRead(){
	//Setter SS lav utenfor funksjonen, altså setter vi SS lav inni mcp2515_read

	spi_MasterTransmit(0x00);
     306:	80 e0       	ldi	r24, 0x00	; 0
     308:	f9 df       	rcall	.-14     	; 0x2fc <spi_MasterTransmit>
	
	//Setter SS høy utenfor funksjonen, altså setter vi SS høy igjen inni mcp2515_read

	return SPDR;
     30a:	8e b5       	in	r24, 0x2e	; 46
	
}
     30c:	08 95       	ret

0000030e <USART_Transmit>:
 }
 
 void USART_Transmit( unsigned char data )
 {
	 /* Wait for empty transmit buffer */
	 while( !( UCSR0A & (1<<UDRE0)) );
     30e:	e0 ec       	ldi	r30, 0xC0	; 192
     310:	f0 e0       	ldi	r31, 0x00	; 0
     312:	90 81       	ld	r25, Z
     314:	95 ff       	sbrs	r25, 5
     316:	fd cf       	rjmp	.-6      	; 0x312 <USART_Transmit+0x4>
	 
	 /* Put data into buffer, sends the data */
	 UDR0 = data;
     318:	80 93 c6 00 	sts	0x00C6, r24
     31c:	08 95       	ret

0000031e <USART_Receive>:
 }

 unsigned char USART_Receive( void )
 {
	 /*Wait for data to be received*/
	 while( !(UCSR0A & (1<<RXC0)) );
     31e:	e0 ec       	ldi	r30, 0xC0	; 192
     320:	f0 e0       	ldi	r31, 0x00	; 0
     322:	80 81       	ld	r24, Z
     324:	88 23       	and	r24, r24
     326:	ec f7       	brge	.-6      	; 0x322 <USART_Receive+0x4>
	 
	 /* Get and return received data from buffer*/
	 return UDR0;
     328:	80 91 c6 00 	lds	r24, 0x00C6
 }
     32c:	08 95       	ret

0000032e <USART_Init>:


void USART_Init( unsigned int ubrr )
 {
	 /* Set baud rate */
	 UBRR0H = (unsigned char)(ubrr>>8);
     32e:	90 93 c5 00 	sts	0x00C5, r25
	 UBRR0L = (unsigned char)ubrr;
     332:	80 93 c4 00 	sts	0x00C4, r24

	 /* Enable receiver and transmitter*/
	 UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     336:	88 e1       	ldi	r24, 0x18	; 24
     338:	80 93 c1 00 	sts	0x00C1, r24
	 
	 fdevopen(*USART_Transmit, *USART_Receive);
     33c:	6f e8       	ldi	r22, 0x8F	; 143
     33e:	71 e0       	ldi	r23, 0x01	; 1
     340:	87 e8       	ldi	r24, 0x87	; 135
     342:	91 e0       	ldi	r25, 0x01	; 1
     344:	45 c2       	rjmp	.+1162   	; 0x7d0 <fdevopen>
     346:	08 95       	ret

00000348 <main>:

volatile int RECEIVE_BUFFER_INTERRUPT = 0;
volatile int TIMER_OVERFLOW_INTERRUPT = 0;

int main(void)
{
     348:	cf 93       	push	r28
     34a:	df 93       	push	r29
     34c:	cd b7       	in	r28, 0x3d	; 61
     34e:	de b7       	in	r29, 0x3e	; 62
     350:	64 97       	sbiw	r28, 0x14	; 20
     352:	0f b6       	in	r0, 0x3f	; 63
     354:	f8 94       	cli
     356:	de bf       	out	0x3e, r29	; 62
     358:	0f be       	out	0x3f, r0	; 63
     35a:	cd bf       	out	0x3d, r28	; 61
	
	USART_Init(MYUBRR);
     35c:	87 e6       	ldi	r24, 0x67	; 103
     35e:	90 e0       	ldi	r25, 0x00	; 0
     360:	e6 df       	rcall	.-52     	; 0x32e <USART_Init>
	can_init();
     362:	e0 de       	rcall	.-576    	; 0x124 <can_init>
	timer_init();
     364:	44 d0       	rcall	.+136    	; 0x3ee <timer_init>
			int mottatt_data_char5 = mottatt.data[5];
			int mottatt_data_char6 = mottatt.data[6];
						
			

			printf("ID: %i  LENGTH: %i   ALL DATA  %i    %i   %i    %i    %i    %i    %i   \n", mottatt.id , mottatt.length, mottatt_data_char0, mottatt_data_char1, mottatt_data_char2, mottatt_data_char3, mottatt_data_char4, mottatt_data_char5, mottatt_data_char6);
     366:	07 e3       	ldi	r16, 0x37	; 55
     368:	12 e0       	ldi	r17, 0x02	; 2
		//	can_send_message(&melding);
		can_msg mottatt;
		
		
		//sjekker om receive bufre inneholder noe. se s. 69 i mcp2515
		volatile uint8_t statusReg = mcp2515_read_status();
     36a:	9e df       	rcall	.-196    	; 0x2a8 <mcp2515_read_status>
     36c:	8c 8b       	std	Y+20, r24	; 0x14
		
		//printf("statusReg: %x \n", statusReg);
		
		if(test_bit(statusReg, 0)){ //Mulig å lage det som en funskjon i ettertid
     36e:	8c 89       	ldd	r24, Y+20	; 0x14
     370:	80 ff       	sbrs	r24, 0
     372:	36 c0       	rjmp	.+108    	; 0x3e0 <main+0x98>

			can_receive_message(&mottatt);		
     374:	ce 01       	movw	r24, r28
     376:	01 96       	adiw	r24, 0x01	; 1
     378:	eb de       	rcall	.-554    	; 0x150 <can_receive_message>
			int mottatt_data_char5 = mottatt.data[5];
			int mottatt_data_char6 = mottatt.data[6];
						
			

			printf("ID: %i  LENGTH: %i   ALL DATA  %i    %i   %i    %i    %i    %i    %i   \n", mottatt.id , mottatt.length, mottatt_data_char0, mottatt_data_char1, mottatt_data_char2, mottatt_data_char3, mottatt_data_char4, mottatt_data_char5, mottatt_data_char6);
     37a:	88 89       	ldd	r24, Y+16	; 0x10
     37c:	8f 93       	push	r24
     37e:	8f 85       	ldd	r24, Y+15	; 0x0f
     380:	8f 93       	push	r24
     382:	8e 85       	ldd	r24, Y+14	; 0x0e
     384:	8f 93       	push	r24
     386:	8d 85       	ldd	r24, Y+13	; 0x0d
     388:	8f 93       	push	r24
     38a:	8c 85       	ldd	r24, Y+12	; 0x0c
     38c:	8f 93       	push	r24
     38e:	8b 85       	ldd	r24, Y+11	; 0x0b
     390:	8f 93       	push	r24
     392:	8a 85       	ldd	r24, Y+10	; 0x0a
     394:	8f 93       	push	r24
     396:	89 85       	ldd	r24, Y+9	; 0x09
     398:	8f 93       	push	r24
     39a:	88 85       	ldd	r24, Y+8	; 0x08
     39c:	8f 93       	push	r24
     39e:	8f 81       	ldd	r24, Y+7	; 0x07
     3a0:	8f 93       	push	r24
     3a2:	8e 81       	ldd	r24, Y+6	; 0x06
     3a4:	8f 93       	push	r24
     3a6:	8d 81       	ldd	r24, Y+5	; 0x05
     3a8:	8f 93       	push	r24
     3aa:	8c 81       	ldd	r24, Y+4	; 0x04
     3ac:	8f 93       	push	r24
     3ae:	8b 81       	ldd	r24, Y+3	; 0x03
     3b0:	8f 93       	push	r24
     3b2:	8b 89       	ldd	r24, Y+19	; 0x13
     3b4:	1f 92       	push	r1
     3b6:	8f 93       	push	r24
     3b8:	8a 81       	ldd	r24, Y+2	; 0x02
     3ba:	8f 93       	push	r24
     3bc:	89 81       	ldd	r24, Y+1	; 0x01
     3be:	8f 93       	push	r24
     3c0:	1f 93       	push	r17
     3c2:	0f 93       	push	r16
     3c4:	4f d2       	rcall	.+1182   	; 0x864 <printf>
			RECEIVE_BUFFER_INTERRUPT = 0; //clearer interruptflagget
     3c6:	10 92 81 02 	sts	0x0281, r1
     3ca:	10 92 80 02 	sts	0x0280, r1
			
			mcp2515_bit_modify(MCP_CANINTF, 0b00000001, 0b00000000); //for å kunne reenable receive buffer 0 interrupten
     3ce:	40 e0       	ldi	r20, 0x00	; 0
     3d0:	61 e0       	ldi	r22, 0x01	; 1
     3d2:	8c e2       	ldi	r24, 0x2C	; 44
     3d4:	74 df       	rcall	.-280    	; 0x2be <mcp2515_bit_modify>
     3d6:	0f b6       	in	r0, 0x3f	; 63
     3d8:	f8 94       	cli
     3da:	de bf       	out	0x3e, r29	; 62
     3dc:	0f be       	out	0x3f, r0	; 63
     3de:	cd bf       	out	0x3d, r28	; 61
			
			
			
					
		}
		servo_positionUpdate(255);
     3e0:	8f ef       	ldi	r24, 0xFF	; 255
     3e2:	90 e0       	ldi	r25, 0x00	; 0
     3e4:	01 d0       	rcall	.+2      	; 0x3e8 <servo_positionUpdate>

		
    }
     3e6:	c1 cf       	rjmp	.-126    	; 0x36a <main+0x22>

000003e8 <servo_positionUpdate>:
#include "servo.h"



void servo_positionUpdate(int rawJoystickValue){
	int percent = joy_getPercent(rawJoystickValue);
     3e8:	1e df       	rcall	.-452    	; 0x226 <joy_getPercent>
	
	
	timer_dutyCycleUpdate(percent);
     3ea:	28 c0       	rjmp	.+80     	; 0x43c <timer_dutyCycleUpdate>
     3ec:	08 95       	ret

000003ee <timer_init>:
#define test_bit( reg, bit ) (reg & (1 << bit))

void timer_init(){
	
	//Fast PWM set up. s.145 in ATmega2560 datasheet
	clear_bit(TCCR1A,WGM10);
     3ee:	a0 e8       	ldi	r26, 0x80	; 128
     3f0:	b0 e0       	ldi	r27, 0x00	; 0
     3f2:	8c 91       	ld	r24, X
     3f4:	8e 7f       	andi	r24, 0xFE	; 254
     3f6:	8c 93       	st	X, r24
	set_bit(TCCR1A,WGM11);
     3f8:	8c 91       	ld	r24, X
     3fa:	82 60       	ori	r24, 0x02	; 2
     3fc:	8c 93       	st	X, r24
	set_bit(TCCR1B,WGM12);
     3fe:	e1 e8       	ldi	r30, 0x81	; 129
     400:	f0 e0       	ldi	r31, 0x00	; 0
     402:	80 81       	ld	r24, Z
     404:	88 60       	ori	r24, 0x08	; 8
     406:	80 83       	st	Z, r24
	set_bit(TCCR1B,WGM13);
     408:	80 81       	ld	r24, Z
     40a:	80 61       	ori	r24, 0x10	; 16
     40c:	80 83       	st	Z, r24
	
	//Setter til non-inverted PWM, s. 155
	set_bit(TCCR1A,COM1A1);
     40e:	8c 91       	ld	r24, X
     410:	80 68       	ori	r24, 0x80	; 128
     412:	8c 93       	st	X, r24
	clear_bit(TCCR1A,COM1A0);
     414:	8c 91       	ld	r24, X
     416:	8f 7b       	andi	r24, 0xBF	; 191
     418:	8c 93       	st	X, r24
	
	//Setter prescaler til 256 s.156-157
	set_bit(TCCR1B,CS12);
     41a:	80 81       	ld	r24, Z
     41c:	84 60       	ori	r24, 0x04	; 4
     41e:	80 83       	st	Z, r24
	clear_bit(TCCR1B,CS11);
     420:	80 81       	ld	r24, Z
     422:	8d 7f       	andi	r24, 0xFD	; 253
     424:	80 83       	st	Z, r24
	clear_bit(TCCR1B,CS10);
     426:	80 81       	ld	r24, Z
     428:	8e 7f       	andi	r24, 0xFE	; 254
     42a:	80 83       	st	Z, r24
	
	//Setter OC1A til output (Skal være PB5 i DDRA register?)
	set_bit(DDRB, PB5);
     42c:	25 9a       	sbi	0x04, 5	; 4
	
	//Setter maksverdi for 20ms periode
	uint16_t prescaler = 256;
	uint16_t F_OC1A = 50; // 1/(20*10^-3)
	uint16_t top = (F_CPU)/(prescaler*F_OC1A)-1; // = 1249 
	ICR1 = top;
     42e:	81 ee       	ldi	r24, 0xE1	; 225
     430:	94 e0       	ldi	r25, 0x04	; 4
     432:	90 93 87 00 	sts	0x0087, r25
     436:	80 93 86 00 	sts	0x0086, r24
     43a:	08 95       	ret

0000043c <timer_dutyCycleUpdate>:
	//sei();
}

int timer_dutyCycleUpdate(int percent){
	
	if (percent <  0 || percent > 100)
     43c:	85 36       	cpi	r24, 0x65	; 101
     43e:	91 05       	cpc	r25, r1
     440:	98 f4       	brcc	.+38     	; 0x468 <timer_dutyCycleUpdate+0x2c>
	{
		return -1;
	}
	uint16_t top = (percent*(131-56))/100+56;
     442:	4b e4       	ldi	r20, 0x4B	; 75
     444:	48 9f       	mul	r20, r24
     446:	90 01       	movw	r18, r0
     448:	49 9f       	mul	r20, r25
     44a:	30 0d       	add	r19, r0
     44c:	11 24       	eor	r1, r1
     44e:	c9 01       	movw	r24, r18
     450:	64 e6       	ldi	r22, 0x64	; 100
     452:	70 e0       	ldi	r23, 0x00	; 0
     454:	96 d1       	rcall	.+812    	; 0x782 <__divmodhi4>
     456:	68 5c       	subi	r22, 0xC8	; 200
     458:	7f 4f       	sbci	r23, 0xFF	; 255
	OCR1A = top;
     45a:	70 93 89 00 	sts	0x0089, r23
     45e:	60 93 88 00 	sts	0x0088, r22
	
	return 1;
     462:	81 e0       	ldi	r24, 0x01	; 1
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	08 95       	ret

int timer_dutyCycleUpdate(int percent){
	
	if (percent <  0 || percent > 100)
	{
		return -1;
     468:	8f ef       	ldi	r24, 0xFF	; 255
     46a:	9f ef       	ldi	r25, 0xFF	; 255
	uint16_t top = (percent*(131-56))/100+56;
	OCR1A = top;
	
	return 1;
	
}
     46c:	08 95       	ret

0000046e <__divsf3>:
     46e:	0c d0       	rcall	.+24     	; 0x488 <__divsf3x>
     470:	eb c0       	rjmp	.+470    	; 0x648 <__fp_round>
     472:	e3 d0       	rcall	.+454    	; 0x63a <__fp_pscB>
     474:	40 f0       	brcs	.+16     	; 0x486 <__divsf3+0x18>
     476:	da d0       	rcall	.+436    	; 0x62c <__fp_pscA>
     478:	30 f0       	brcs	.+12     	; 0x486 <__divsf3+0x18>
     47a:	21 f4       	brne	.+8      	; 0x484 <__divsf3+0x16>
     47c:	5f 3f       	cpi	r21, 0xFF	; 255
     47e:	19 f0       	breq	.+6      	; 0x486 <__divsf3+0x18>
     480:	cc c0       	rjmp	.+408    	; 0x61a <__fp_inf>
     482:	51 11       	cpse	r21, r1
     484:	15 c1       	rjmp	.+554    	; 0x6b0 <__fp_szero>
     486:	cf c0       	rjmp	.+414    	; 0x626 <__fp_nan>

00000488 <__divsf3x>:
     488:	f0 d0       	rcall	.+480    	; 0x66a <__fp_split3>
     48a:	98 f3       	brcs	.-26     	; 0x472 <__divsf3+0x4>

0000048c <__divsf3_pse>:
     48c:	99 23       	and	r25, r25
     48e:	c9 f3       	breq	.-14     	; 0x482 <__divsf3+0x14>
     490:	55 23       	and	r21, r21
     492:	b1 f3       	breq	.-20     	; 0x480 <__divsf3+0x12>
     494:	95 1b       	sub	r25, r21
     496:	55 0b       	sbc	r21, r21
     498:	bb 27       	eor	r27, r27
     49a:	aa 27       	eor	r26, r26
     49c:	62 17       	cp	r22, r18
     49e:	73 07       	cpc	r23, r19
     4a0:	84 07       	cpc	r24, r20
     4a2:	38 f0       	brcs	.+14     	; 0x4b2 <__divsf3_pse+0x26>
     4a4:	9f 5f       	subi	r25, 0xFF	; 255
     4a6:	5f 4f       	sbci	r21, 0xFF	; 255
     4a8:	22 0f       	add	r18, r18
     4aa:	33 1f       	adc	r19, r19
     4ac:	44 1f       	adc	r20, r20
     4ae:	aa 1f       	adc	r26, r26
     4b0:	a9 f3       	breq	.-22     	; 0x49c <__divsf3_pse+0x10>
     4b2:	33 d0       	rcall	.+102    	; 0x51a <__divsf3_pse+0x8e>
     4b4:	0e 2e       	mov	r0, r30
     4b6:	3a f0       	brmi	.+14     	; 0x4c6 <__divsf3_pse+0x3a>
     4b8:	e0 e8       	ldi	r30, 0x80	; 128
     4ba:	30 d0       	rcall	.+96     	; 0x51c <__divsf3_pse+0x90>
     4bc:	91 50       	subi	r25, 0x01	; 1
     4be:	50 40       	sbci	r21, 0x00	; 0
     4c0:	e6 95       	lsr	r30
     4c2:	00 1c       	adc	r0, r0
     4c4:	ca f7       	brpl	.-14     	; 0x4b8 <__divsf3_pse+0x2c>
     4c6:	29 d0       	rcall	.+82     	; 0x51a <__divsf3_pse+0x8e>
     4c8:	fe 2f       	mov	r31, r30
     4ca:	27 d0       	rcall	.+78     	; 0x51a <__divsf3_pse+0x8e>
     4cc:	66 0f       	add	r22, r22
     4ce:	77 1f       	adc	r23, r23
     4d0:	88 1f       	adc	r24, r24
     4d2:	bb 1f       	adc	r27, r27
     4d4:	26 17       	cp	r18, r22
     4d6:	37 07       	cpc	r19, r23
     4d8:	48 07       	cpc	r20, r24
     4da:	ab 07       	cpc	r26, r27
     4dc:	b0 e8       	ldi	r27, 0x80	; 128
     4de:	09 f0       	breq	.+2      	; 0x4e2 <__divsf3_pse+0x56>
     4e0:	bb 0b       	sbc	r27, r27
     4e2:	80 2d       	mov	r24, r0
     4e4:	bf 01       	movw	r22, r30
     4e6:	ff 27       	eor	r31, r31
     4e8:	93 58       	subi	r25, 0x83	; 131
     4ea:	5f 4f       	sbci	r21, 0xFF	; 255
     4ec:	2a f0       	brmi	.+10     	; 0x4f8 <__divsf3_pse+0x6c>
     4ee:	9e 3f       	cpi	r25, 0xFE	; 254
     4f0:	51 05       	cpc	r21, r1
     4f2:	68 f0       	brcs	.+26     	; 0x50e <__divsf3_pse+0x82>
     4f4:	92 c0       	rjmp	.+292    	; 0x61a <__fp_inf>
     4f6:	dc c0       	rjmp	.+440    	; 0x6b0 <__fp_szero>
     4f8:	5f 3f       	cpi	r21, 0xFF	; 255
     4fa:	ec f3       	brlt	.-6      	; 0x4f6 <__divsf3_pse+0x6a>
     4fc:	98 3e       	cpi	r25, 0xE8	; 232
     4fe:	dc f3       	brlt	.-10     	; 0x4f6 <__divsf3_pse+0x6a>
     500:	86 95       	lsr	r24
     502:	77 95       	ror	r23
     504:	67 95       	ror	r22
     506:	b7 95       	ror	r27
     508:	f7 95       	ror	r31
     50a:	9f 5f       	subi	r25, 0xFF	; 255
     50c:	c9 f7       	brne	.-14     	; 0x500 <__divsf3_pse+0x74>
     50e:	88 0f       	add	r24, r24
     510:	91 1d       	adc	r25, r1
     512:	96 95       	lsr	r25
     514:	87 95       	ror	r24
     516:	97 f9       	bld	r25, 7
     518:	08 95       	ret
     51a:	e1 e0       	ldi	r30, 0x01	; 1
     51c:	66 0f       	add	r22, r22
     51e:	77 1f       	adc	r23, r23
     520:	88 1f       	adc	r24, r24
     522:	bb 1f       	adc	r27, r27
     524:	62 17       	cp	r22, r18
     526:	73 07       	cpc	r23, r19
     528:	84 07       	cpc	r24, r20
     52a:	ba 07       	cpc	r27, r26
     52c:	20 f0       	brcs	.+8      	; 0x536 <__divsf3_pse+0xaa>
     52e:	62 1b       	sub	r22, r18
     530:	73 0b       	sbc	r23, r19
     532:	84 0b       	sbc	r24, r20
     534:	ba 0b       	sbc	r27, r26
     536:	ee 1f       	adc	r30, r30
     538:	88 f7       	brcc	.-30     	; 0x51c <__divsf3_pse+0x90>
     53a:	e0 95       	com	r30
     53c:	08 95       	ret

0000053e <__fixsfsi>:
     53e:	04 d0       	rcall	.+8      	; 0x548 <__fixunssfsi>
     540:	68 94       	set
     542:	b1 11       	cpse	r27, r1
     544:	b5 c0       	rjmp	.+362    	; 0x6b0 <__fp_szero>
     546:	08 95       	ret

00000548 <__fixunssfsi>:
     548:	98 d0       	rcall	.+304    	; 0x67a <__fp_splitA>
     54a:	88 f0       	brcs	.+34     	; 0x56e <__fixunssfsi+0x26>
     54c:	9f 57       	subi	r25, 0x7F	; 127
     54e:	90 f0       	brcs	.+36     	; 0x574 <__fixunssfsi+0x2c>
     550:	b9 2f       	mov	r27, r25
     552:	99 27       	eor	r25, r25
     554:	b7 51       	subi	r27, 0x17	; 23
     556:	a0 f0       	brcs	.+40     	; 0x580 <__fixunssfsi+0x38>
     558:	d1 f0       	breq	.+52     	; 0x58e <__fixunssfsi+0x46>
     55a:	66 0f       	add	r22, r22
     55c:	77 1f       	adc	r23, r23
     55e:	88 1f       	adc	r24, r24
     560:	99 1f       	adc	r25, r25
     562:	1a f0       	brmi	.+6      	; 0x56a <__fixunssfsi+0x22>
     564:	ba 95       	dec	r27
     566:	c9 f7       	brne	.-14     	; 0x55a <__fixunssfsi+0x12>
     568:	12 c0       	rjmp	.+36     	; 0x58e <__fixunssfsi+0x46>
     56a:	b1 30       	cpi	r27, 0x01	; 1
     56c:	81 f0       	breq	.+32     	; 0x58e <__fixunssfsi+0x46>
     56e:	9f d0       	rcall	.+318    	; 0x6ae <__fp_zero>
     570:	b1 e0       	ldi	r27, 0x01	; 1
     572:	08 95       	ret
     574:	9c c0       	rjmp	.+312    	; 0x6ae <__fp_zero>
     576:	67 2f       	mov	r22, r23
     578:	78 2f       	mov	r23, r24
     57a:	88 27       	eor	r24, r24
     57c:	b8 5f       	subi	r27, 0xF8	; 248
     57e:	39 f0       	breq	.+14     	; 0x58e <__fixunssfsi+0x46>
     580:	b9 3f       	cpi	r27, 0xF9	; 249
     582:	cc f3       	brlt	.-14     	; 0x576 <__fixunssfsi+0x2e>
     584:	86 95       	lsr	r24
     586:	77 95       	ror	r23
     588:	67 95       	ror	r22
     58a:	b3 95       	inc	r27
     58c:	d9 f7       	brne	.-10     	; 0x584 <__fixunssfsi+0x3c>
     58e:	3e f4       	brtc	.+14     	; 0x59e <__fixunssfsi+0x56>
     590:	90 95       	com	r25
     592:	80 95       	com	r24
     594:	70 95       	com	r23
     596:	61 95       	neg	r22
     598:	7f 4f       	sbci	r23, 0xFF	; 255
     59a:	8f 4f       	sbci	r24, 0xFF	; 255
     59c:	9f 4f       	sbci	r25, 0xFF	; 255
     59e:	08 95       	ret

000005a0 <__floatunsisf>:
     5a0:	e8 94       	clt
     5a2:	09 c0       	rjmp	.+18     	; 0x5b6 <__floatsisf+0x12>

000005a4 <__floatsisf>:
     5a4:	97 fb       	bst	r25, 7
     5a6:	3e f4       	brtc	.+14     	; 0x5b6 <__floatsisf+0x12>
     5a8:	90 95       	com	r25
     5aa:	80 95       	com	r24
     5ac:	70 95       	com	r23
     5ae:	61 95       	neg	r22
     5b0:	7f 4f       	sbci	r23, 0xFF	; 255
     5b2:	8f 4f       	sbci	r24, 0xFF	; 255
     5b4:	9f 4f       	sbci	r25, 0xFF	; 255
     5b6:	99 23       	and	r25, r25
     5b8:	a9 f0       	breq	.+42     	; 0x5e4 <__floatsisf+0x40>
     5ba:	f9 2f       	mov	r31, r25
     5bc:	96 e9       	ldi	r25, 0x96	; 150
     5be:	bb 27       	eor	r27, r27
     5c0:	93 95       	inc	r25
     5c2:	f6 95       	lsr	r31
     5c4:	87 95       	ror	r24
     5c6:	77 95       	ror	r23
     5c8:	67 95       	ror	r22
     5ca:	b7 95       	ror	r27
     5cc:	f1 11       	cpse	r31, r1
     5ce:	f8 cf       	rjmp	.-16     	; 0x5c0 <__floatsisf+0x1c>
     5d0:	fa f4       	brpl	.+62     	; 0x610 <__floatsisf+0x6c>
     5d2:	bb 0f       	add	r27, r27
     5d4:	11 f4       	brne	.+4      	; 0x5da <__floatsisf+0x36>
     5d6:	60 ff       	sbrs	r22, 0
     5d8:	1b c0       	rjmp	.+54     	; 0x610 <__floatsisf+0x6c>
     5da:	6f 5f       	subi	r22, 0xFF	; 255
     5dc:	7f 4f       	sbci	r23, 0xFF	; 255
     5de:	8f 4f       	sbci	r24, 0xFF	; 255
     5e0:	9f 4f       	sbci	r25, 0xFF	; 255
     5e2:	16 c0       	rjmp	.+44     	; 0x610 <__floatsisf+0x6c>
     5e4:	88 23       	and	r24, r24
     5e6:	11 f0       	breq	.+4      	; 0x5ec <__floatsisf+0x48>
     5e8:	96 e9       	ldi	r25, 0x96	; 150
     5ea:	11 c0       	rjmp	.+34     	; 0x60e <__floatsisf+0x6a>
     5ec:	77 23       	and	r23, r23
     5ee:	21 f0       	breq	.+8      	; 0x5f8 <__floatsisf+0x54>
     5f0:	9e e8       	ldi	r25, 0x8E	; 142
     5f2:	87 2f       	mov	r24, r23
     5f4:	76 2f       	mov	r23, r22
     5f6:	05 c0       	rjmp	.+10     	; 0x602 <__floatsisf+0x5e>
     5f8:	66 23       	and	r22, r22
     5fa:	71 f0       	breq	.+28     	; 0x618 <__floatsisf+0x74>
     5fc:	96 e8       	ldi	r25, 0x86	; 134
     5fe:	86 2f       	mov	r24, r22
     600:	70 e0       	ldi	r23, 0x00	; 0
     602:	60 e0       	ldi	r22, 0x00	; 0
     604:	2a f0       	brmi	.+10     	; 0x610 <__floatsisf+0x6c>
     606:	9a 95       	dec	r25
     608:	66 0f       	add	r22, r22
     60a:	77 1f       	adc	r23, r23
     60c:	88 1f       	adc	r24, r24
     60e:	da f7       	brpl	.-10     	; 0x606 <__floatsisf+0x62>
     610:	88 0f       	add	r24, r24
     612:	96 95       	lsr	r25
     614:	87 95       	ror	r24
     616:	97 f9       	bld	r25, 7
     618:	08 95       	ret

0000061a <__fp_inf>:
     61a:	97 f9       	bld	r25, 7
     61c:	9f 67       	ori	r25, 0x7F	; 127
     61e:	80 e8       	ldi	r24, 0x80	; 128
     620:	70 e0       	ldi	r23, 0x00	; 0
     622:	60 e0       	ldi	r22, 0x00	; 0
     624:	08 95       	ret

00000626 <__fp_nan>:
     626:	9f ef       	ldi	r25, 0xFF	; 255
     628:	80 ec       	ldi	r24, 0xC0	; 192
     62a:	08 95       	ret

0000062c <__fp_pscA>:
     62c:	00 24       	eor	r0, r0
     62e:	0a 94       	dec	r0
     630:	16 16       	cp	r1, r22
     632:	17 06       	cpc	r1, r23
     634:	18 06       	cpc	r1, r24
     636:	09 06       	cpc	r0, r25
     638:	08 95       	ret

0000063a <__fp_pscB>:
     63a:	00 24       	eor	r0, r0
     63c:	0a 94       	dec	r0
     63e:	12 16       	cp	r1, r18
     640:	13 06       	cpc	r1, r19
     642:	14 06       	cpc	r1, r20
     644:	05 06       	cpc	r0, r21
     646:	08 95       	ret

00000648 <__fp_round>:
     648:	09 2e       	mov	r0, r25
     64a:	03 94       	inc	r0
     64c:	00 0c       	add	r0, r0
     64e:	11 f4       	brne	.+4      	; 0x654 <__fp_round+0xc>
     650:	88 23       	and	r24, r24
     652:	52 f0       	brmi	.+20     	; 0x668 <__fp_round+0x20>
     654:	bb 0f       	add	r27, r27
     656:	40 f4       	brcc	.+16     	; 0x668 <__fp_round+0x20>
     658:	bf 2b       	or	r27, r31
     65a:	11 f4       	brne	.+4      	; 0x660 <__fp_round+0x18>
     65c:	60 ff       	sbrs	r22, 0
     65e:	04 c0       	rjmp	.+8      	; 0x668 <__fp_round+0x20>
     660:	6f 5f       	subi	r22, 0xFF	; 255
     662:	7f 4f       	sbci	r23, 0xFF	; 255
     664:	8f 4f       	sbci	r24, 0xFF	; 255
     666:	9f 4f       	sbci	r25, 0xFF	; 255
     668:	08 95       	ret

0000066a <__fp_split3>:
     66a:	57 fd       	sbrc	r21, 7
     66c:	90 58       	subi	r25, 0x80	; 128
     66e:	44 0f       	add	r20, r20
     670:	55 1f       	adc	r21, r21
     672:	59 f0       	breq	.+22     	; 0x68a <__fp_splitA+0x10>
     674:	5f 3f       	cpi	r21, 0xFF	; 255
     676:	71 f0       	breq	.+28     	; 0x694 <__fp_splitA+0x1a>
     678:	47 95       	ror	r20

0000067a <__fp_splitA>:
     67a:	88 0f       	add	r24, r24
     67c:	97 fb       	bst	r25, 7
     67e:	99 1f       	adc	r25, r25
     680:	61 f0       	breq	.+24     	; 0x69a <__fp_splitA+0x20>
     682:	9f 3f       	cpi	r25, 0xFF	; 255
     684:	79 f0       	breq	.+30     	; 0x6a4 <__fp_splitA+0x2a>
     686:	87 95       	ror	r24
     688:	08 95       	ret
     68a:	12 16       	cp	r1, r18
     68c:	13 06       	cpc	r1, r19
     68e:	14 06       	cpc	r1, r20
     690:	55 1f       	adc	r21, r21
     692:	f2 cf       	rjmp	.-28     	; 0x678 <__fp_split3+0xe>
     694:	46 95       	lsr	r20
     696:	f1 df       	rcall	.-30     	; 0x67a <__fp_splitA>
     698:	08 c0       	rjmp	.+16     	; 0x6aa <__fp_splitA+0x30>
     69a:	16 16       	cp	r1, r22
     69c:	17 06       	cpc	r1, r23
     69e:	18 06       	cpc	r1, r24
     6a0:	99 1f       	adc	r25, r25
     6a2:	f1 cf       	rjmp	.-30     	; 0x686 <__fp_splitA+0xc>
     6a4:	86 95       	lsr	r24
     6a6:	71 05       	cpc	r23, r1
     6a8:	61 05       	cpc	r22, r1
     6aa:	08 94       	sec
     6ac:	08 95       	ret

000006ae <__fp_zero>:
     6ae:	e8 94       	clt

000006b0 <__fp_szero>:
     6b0:	bb 27       	eor	r27, r27
     6b2:	66 27       	eor	r22, r22
     6b4:	77 27       	eor	r23, r23
     6b6:	cb 01       	movw	r24, r22
     6b8:	97 f9       	bld	r25, 7
     6ba:	08 95       	ret

000006bc <__mulsf3>:
     6bc:	0b d0       	rcall	.+22     	; 0x6d4 <__mulsf3x>
     6be:	c4 cf       	rjmp	.-120    	; 0x648 <__fp_round>
     6c0:	b5 df       	rcall	.-150    	; 0x62c <__fp_pscA>
     6c2:	28 f0       	brcs	.+10     	; 0x6ce <__mulsf3+0x12>
     6c4:	ba df       	rcall	.-140    	; 0x63a <__fp_pscB>
     6c6:	18 f0       	brcs	.+6      	; 0x6ce <__mulsf3+0x12>
     6c8:	95 23       	and	r25, r21
     6ca:	09 f0       	breq	.+2      	; 0x6ce <__mulsf3+0x12>
     6cc:	a6 cf       	rjmp	.-180    	; 0x61a <__fp_inf>
     6ce:	ab cf       	rjmp	.-170    	; 0x626 <__fp_nan>
     6d0:	11 24       	eor	r1, r1
     6d2:	ee cf       	rjmp	.-36     	; 0x6b0 <__fp_szero>

000006d4 <__mulsf3x>:
     6d4:	ca df       	rcall	.-108    	; 0x66a <__fp_split3>
     6d6:	a0 f3       	brcs	.-24     	; 0x6c0 <__mulsf3+0x4>

000006d8 <__mulsf3_pse>:
     6d8:	95 9f       	mul	r25, r21
     6da:	d1 f3       	breq	.-12     	; 0x6d0 <__mulsf3+0x14>
     6dc:	95 0f       	add	r25, r21
     6de:	50 e0       	ldi	r21, 0x00	; 0
     6e0:	55 1f       	adc	r21, r21
     6e2:	62 9f       	mul	r22, r18
     6e4:	f0 01       	movw	r30, r0
     6e6:	72 9f       	mul	r23, r18
     6e8:	bb 27       	eor	r27, r27
     6ea:	f0 0d       	add	r31, r0
     6ec:	b1 1d       	adc	r27, r1
     6ee:	63 9f       	mul	r22, r19
     6f0:	aa 27       	eor	r26, r26
     6f2:	f0 0d       	add	r31, r0
     6f4:	b1 1d       	adc	r27, r1
     6f6:	aa 1f       	adc	r26, r26
     6f8:	64 9f       	mul	r22, r20
     6fa:	66 27       	eor	r22, r22
     6fc:	b0 0d       	add	r27, r0
     6fe:	a1 1d       	adc	r26, r1
     700:	66 1f       	adc	r22, r22
     702:	82 9f       	mul	r24, r18
     704:	22 27       	eor	r18, r18
     706:	b0 0d       	add	r27, r0
     708:	a1 1d       	adc	r26, r1
     70a:	62 1f       	adc	r22, r18
     70c:	73 9f       	mul	r23, r19
     70e:	b0 0d       	add	r27, r0
     710:	a1 1d       	adc	r26, r1
     712:	62 1f       	adc	r22, r18
     714:	83 9f       	mul	r24, r19
     716:	a0 0d       	add	r26, r0
     718:	61 1d       	adc	r22, r1
     71a:	22 1f       	adc	r18, r18
     71c:	74 9f       	mul	r23, r20
     71e:	33 27       	eor	r19, r19
     720:	a0 0d       	add	r26, r0
     722:	61 1d       	adc	r22, r1
     724:	23 1f       	adc	r18, r19
     726:	84 9f       	mul	r24, r20
     728:	60 0d       	add	r22, r0
     72a:	21 1d       	adc	r18, r1
     72c:	82 2f       	mov	r24, r18
     72e:	76 2f       	mov	r23, r22
     730:	6a 2f       	mov	r22, r26
     732:	11 24       	eor	r1, r1
     734:	9f 57       	subi	r25, 0x7F	; 127
     736:	50 40       	sbci	r21, 0x00	; 0
     738:	8a f0       	brmi	.+34     	; 0x75c <__mulsf3_pse+0x84>
     73a:	e1 f0       	breq	.+56     	; 0x774 <__mulsf3_pse+0x9c>
     73c:	88 23       	and	r24, r24
     73e:	4a f0       	brmi	.+18     	; 0x752 <__mulsf3_pse+0x7a>
     740:	ee 0f       	add	r30, r30
     742:	ff 1f       	adc	r31, r31
     744:	bb 1f       	adc	r27, r27
     746:	66 1f       	adc	r22, r22
     748:	77 1f       	adc	r23, r23
     74a:	88 1f       	adc	r24, r24
     74c:	91 50       	subi	r25, 0x01	; 1
     74e:	50 40       	sbci	r21, 0x00	; 0
     750:	a9 f7       	brne	.-22     	; 0x73c <__mulsf3_pse+0x64>
     752:	9e 3f       	cpi	r25, 0xFE	; 254
     754:	51 05       	cpc	r21, r1
     756:	70 f0       	brcs	.+28     	; 0x774 <__mulsf3_pse+0x9c>
     758:	60 cf       	rjmp	.-320    	; 0x61a <__fp_inf>
     75a:	aa cf       	rjmp	.-172    	; 0x6b0 <__fp_szero>
     75c:	5f 3f       	cpi	r21, 0xFF	; 255
     75e:	ec f3       	brlt	.-6      	; 0x75a <__mulsf3_pse+0x82>
     760:	98 3e       	cpi	r25, 0xE8	; 232
     762:	dc f3       	brlt	.-10     	; 0x75a <__mulsf3_pse+0x82>
     764:	86 95       	lsr	r24
     766:	77 95       	ror	r23
     768:	67 95       	ror	r22
     76a:	b7 95       	ror	r27
     76c:	f7 95       	ror	r31
     76e:	e7 95       	ror	r30
     770:	9f 5f       	subi	r25, 0xFF	; 255
     772:	c1 f7       	brne	.-16     	; 0x764 <__mulsf3_pse+0x8c>
     774:	fe 2b       	or	r31, r30
     776:	88 0f       	add	r24, r24
     778:	91 1d       	adc	r25, r1
     77a:	96 95       	lsr	r25
     77c:	87 95       	ror	r24
     77e:	97 f9       	bld	r25, 7
     780:	08 95       	ret

00000782 <__divmodhi4>:
     782:	97 fb       	bst	r25, 7
     784:	07 2e       	mov	r0, r23
     786:	16 f4       	brtc	.+4      	; 0x78c <__divmodhi4+0xa>
     788:	00 94       	com	r0
     78a:	06 d0       	rcall	.+12     	; 0x798 <__divmodhi4_neg1>
     78c:	77 fd       	sbrc	r23, 7
     78e:	08 d0       	rcall	.+16     	; 0x7a0 <__divmodhi4_neg2>
     790:	0b d0       	rcall	.+22     	; 0x7a8 <__udivmodhi4>
     792:	07 fc       	sbrc	r0, 7
     794:	05 d0       	rcall	.+10     	; 0x7a0 <__divmodhi4_neg2>
     796:	3e f4       	brtc	.+14     	; 0x7a6 <__divmodhi4_exit>

00000798 <__divmodhi4_neg1>:
     798:	90 95       	com	r25
     79a:	81 95       	neg	r24
     79c:	9f 4f       	sbci	r25, 0xFF	; 255
     79e:	08 95       	ret

000007a0 <__divmodhi4_neg2>:
     7a0:	70 95       	com	r23
     7a2:	61 95       	neg	r22
     7a4:	7f 4f       	sbci	r23, 0xFF	; 255

000007a6 <__divmodhi4_exit>:
     7a6:	08 95       	ret

000007a8 <__udivmodhi4>:
     7a8:	aa 1b       	sub	r26, r26
     7aa:	bb 1b       	sub	r27, r27
     7ac:	51 e1       	ldi	r21, 0x11	; 17
     7ae:	07 c0       	rjmp	.+14     	; 0x7be <__udivmodhi4_ep>

000007b0 <__udivmodhi4_loop>:
     7b0:	aa 1f       	adc	r26, r26
     7b2:	bb 1f       	adc	r27, r27
     7b4:	a6 17       	cp	r26, r22
     7b6:	b7 07       	cpc	r27, r23
     7b8:	10 f0       	brcs	.+4      	; 0x7be <__udivmodhi4_ep>
     7ba:	a6 1b       	sub	r26, r22
     7bc:	b7 0b       	sbc	r27, r23

000007be <__udivmodhi4_ep>:
     7be:	88 1f       	adc	r24, r24
     7c0:	99 1f       	adc	r25, r25
     7c2:	5a 95       	dec	r21
     7c4:	a9 f7       	brne	.-22     	; 0x7b0 <__udivmodhi4_loop>
     7c6:	80 95       	com	r24
     7c8:	90 95       	com	r25
     7ca:	bc 01       	movw	r22, r24
     7cc:	cd 01       	movw	r24, r26
     7ce:	08 95       	ret

000007d0 <fdevopen>:
     7d0:	0f 93       	push	r16
     7d2:	1f 93       	push	r17
     7d4:	cf 93       	push	r28
     7d6:	df 93       	push	r29
     7d8:	ec 01       	movw	r28, r24
     7da:	8b 01       	movw	r16, r22
     7dc:	00 97       	sbiw	r24, 0x00	; 0
     7de:	31 f4       	brne	.+12     	; 0x7ec <fdevopen+0x1c>
     7e0:	61 15       	cp	r22, r1
     7e2:	71 05       	cpc	r23, r1
     7e4:	19 f4       	brne	.+6      	; 0x7ec <fdevopen+0x1c>
     7e6:	80 e0       	ldi	r24, 0x00	; 0
     7e8:	90 e0       	ldi	r25, 0x00	; 0
     7ea:	37 c0       	rjmp	.+110    	; 0x85a <fdevopen+0x8a>
     7ec:	6e e0       	ldi	r22, 0x0E	; 14
     7ee:	70 e0       	ldi	r23, 0x00	; 0
     7f0:	81 e0       	ldi	r24, 0x01	; 1
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	36 d2       	rcall	.+1132   	; 0xc62 <calloc>
     7f6:	fc 01       	movw	r30, r24
     7f8:	00 97       	sbiw	r24, 0x00	; 0
     7fa:	a9 f3       	breq	.-22     	; 0x7e6 <fdevopen+0x16>
     7fc:	80 e8       	ldi	r24, 0x80	; 128
     7fe:	83 83       	std	Z+3, r24	; 0x03
     800:	01 15       	cp	r16, r1
     802:	11 05       	cpc	r17, r1
     804:	71 f0       	breq	.+28     	; 0x822 <fdevopen+0x52>
     806:	13 87       	std	Z+11, r17	; 0x0b
     808:	02 87       	std	Z+10, r16	; 0x0a
     80a:	81 e8       	ldi	r24, 0x81	; 129
     80c:	83 83       	std	Z+3, r24	; 0x03
     80e:	80 91 82 02 	lds	r24, 0x0282
     812:	90 91 83 02 	lds	r25, 0x0283
     816:	89 2b       	or	r24, r25
     818:	21 f4       	brne	.+8      	; 0x822 <fdevopen+0x52>
     81a:	f0 93 83 02 	sts	0x0283, r31
     81e:	e0 93 82 02 	sts	0x0282, r30
     822:	20 97       	sbiw	r28, 0x00	; 0
     824:	c9 f0       	breq	.+50     	; 0x858 <fdevopen+0x88>
     826:	d1 87       	std	Z+9, r29	; 0x09
     828:	c0 87       	std	Z+8, r28	; 0x08
     82a:	83 81       	ldd	r24, Z+3	; 0x03
     82c:	82 60       	ori	r24, 0x02	; 2
     82e:	83 83       	std	Z+3, r24	; 0x03
     830:	80 91 84 02 	lds	r24, 0x0284
     834:	90 91 85 02 	lds	r25, 0x0285
     838:	89 2b       	or	r24, r25
     83a:	71 f4       	brne	.+28     	; 0x858 <fdevopen+0x88>
     83c:	f0 93 85 02 	sts	0x0285, r31
     840:	e0 93 84 02 	sts	0x0284, r30
     844:	80 91 86 02 	lds	r24, 0x0286
     848:	90 91 87 02 	lds	r25, 0x0287
     84c:	89 2b       	or	r24, r25
     84e:	21 f4       	brne	.+8      	; 0x858 <fdevopen+0x88>
     850:	f0 93 87 02 	sts	0x0287, r31
     854:	e0 93 86 02 	sts	0x0286, r30
     858:	cf 01       	movw	r24, r30
     85a:	df 91       	pop	r29
     85c:	cf 91       	pop	r28
     85e:	1f 91       	pop	r17
     860:	0f 91       	pop	r16
     862:	08 95       	ret

00000864 <printf>:
     864:	cf 93       	push	r28
     866:	df 93       	push	r29
     868:	cd b7       	in	r28, 0x3d	; 61
     86a:	de b7       	in	r29, 0x3e	; 62
     86c:	fe 01       	movw	r30, r28
     86e:	36 96       	adiw	r30, 0x06	; 6
     870:	61 91       	ld	r22, Z+
     872:	71 91       	ld	r23, Z+
     874:	af 01       	movw	r20, r30
     876:	80 91 84 02 	lds	r24, 0x0284
     87a:	90 91 85 02 	lds	r25, 0x0285
     87e:	03 d0       	rcall	.+6      	; 0x886 <vfprintf>
     880:	df 91       	pop	r29
     882:	cf 91       	pop	r28
     884:	08 95       	ret

00000886 <vfprintf>:
     886:	2f 92       	push	r2
     888:	3f 92       	push	r3
     88a:	4f 92       	push	r4
     88c:	5f 92       	push	r5
     88e:	6f 92       	push	r6
     890:	7f 92       	push	r7
     892:	8f 92       	push	r8
     894:	9f 92       	push	r9
     896:	af 92       	push	r10
     898:	bf 92       	push	r11
     89a:	cf 92       	push	r12
     89c:	df 92       	push	r13
     89e:	ef 92       	push	r14
     8a0:	ff 92       	push	r15
     8a2:	0f 93       	push	r16
     8a4:	1f 93       	push	r17
     8a6:	cf 93       	push	r28
     8a8:	df 93       	push	r29
     8aa:	cd b7       	in	r28, 0x3d	; 61
     8ac:	de b7       	in	r29, 0x3e	; 62
     8ae:	2c 97       	sbiw	r28, 0x0c	; 12
     8b0:	0f b6       	in	r0, 0x3f	; 63
     8b2:	f8 94       	cli
     8b4:	de bf       	out	0x3e, r29	; 62
     8b6:	0f be       	out	0x3f, r0	; 63
     8b8:	cd bf       	out	0x3d, r28	; 61
     8ba:	7c 01       	movw	r14, r24
     8bc:	6b 01       	movw	r12, r22
     8be:	8a 01       	movw	r16, r20
     8c0:	fc 01       	movw	r30, r24
     8c2:	17 82       	std	Z+7, r1	; 0x07
     8c4:	16 82       	std	Z+6, r1	; 0x06
     8c6:	83 81       	ldd	r24, Z+3	; 0x03
     8c8:	81 ff       	sbrs	r24, 1
     8ca:	b0 c1       	rjmp	.+864    	; 0xc2c <vfprintf+0x3a6>
     8cc:	ce 01       	movw	r24, r28
     8ce:	01 96       	adiw	r24, 0x01	; 1
     8d0:	4c 01       	movw	r8, r24
     8d2:	f7 01       	movw	r30, r14
     8d4:	93 81       	ldd	r25, Z+3	; 0x03
     8d6:	f6 01       	movw	r30, r12
     8d8:	93 fd       	sbrc	r25, 3
     8da:	85 91       	lpm	r24, Z+
     8dc:	93 ff       	sbrs	r25, 3
     8de:	81 91       	ld	r24, Z+
     8e0:	6f 01       	movw	r12, r30
     8e2:	88 23       	and	r24, r24
     8e4:	09 f4       	brne	.+2      	; 0x8e8 <vfprintf+0x62>
     8e6:	9e c1       	rjmp	.+828    	; 0xc24 <vfprintf+0x39e>
     8e8:	85 32       	cpi	r24, 0x25	; 37
     8ea:	39 f4       	brne	.+14     	; 0x8fa <vfprintf+0x74>
     8ec:	93 fd       	sbrc	r25, 3
     8ee:	85 91       	lpm	r24, Z+
     8f0:	93 ff       	sbrs	r25, 3
     8f2:	81 91       	ld	r24, Z+
     8f4:	6f 01       	movw	r12, r30
     8f6:	85 32       	cpi	r24, 0x25	; 37
     8f8:	21 f4       	brne	.+8      	; 0x902 <vfprintf+0x7c>
     8fa:	b7 01       	movw	r22, r14
     8fc:	90 e0       	ldi	r25, 0x00	; 0
     8fe:	0f d3       	rcall	.+1566   	; 0xf1e <fputc>
     900:	e8 cf       	rjmp	.-48     	; 0x8d2 <vfprintf+0x4c>
     902:	51 2c       	mov	r5, r1
     904:	31 2c       	mov	r3, r1
     906:	20 e0       	ldi	r18, 0x00	; 0
     908:	20 32       	cpi	r18, 0x20	; 32
     90a:	a0 f4       	brcc	.+40     	; 0x934 <vfprintf+0xae>
     90c:	8b 32       	cpi	r24, 0x2B	; 43
     90e:	69 f0       	breq	.+26     	; 0x92a <vfprintf+0xa4>
     910:	30 f4       	brcc	.+12     	; 0x91e <vfprintf+0x98>
     912:	80 32       	cpi	r24, 0x20	; 32
     914:	59 f0       	breq	.+22     	; 0x92c <vfprintf+0xa6>
     916:	83 32       	cpi	r24, 0x23	; 35
     918:	69 f4       	brne	.+26     	; 0x934 <vfprintf+0xae>
     91a:	20 61       	ori	r18, 0x10	; 16
     91c:	2c c0       	rjmp	.+88     	; 0x976 <vfprintf+0xf0>
     91e:	8d 32       	cpi	r24, 0x2D	; 45
     920:	39 f0       	breq	.+14     	; 0x930 <vfprintf+0xaa>
     922:	80 33       	cpi	r24, 0x30	; 48
     924:	39 f4       	brne	.+14     	; 0x934 <vfprintf+0xae>
     926:	21 60       	ori	r18, 0x01	; 1
     928:	26 c0       	rjmp	.+76     	; 0x976 <vfprintf+0xf0>
     92a:	22 60       	ori	r18, 0x02	; 2
     92c:	24 60       	ori	r18, 0x04	; 4
     92e:	23 c0       	rjmp	.+70     	; 0x976 <vfprintf+0xf0>
     930:	28 60       	ori	r18, 0x08	; 8
     932:	21 c0       	rjmp	.+66     	; 0x976 <vfprintf+0xf0>
     934:	27 fd       	sbrc	r18, 7
     936:	27 c0       	rjmp	.+78     	; 0x986 <vfprintf+0x100>
     938:	30 ed       	ldi	r19, 0xD0	; 208
     93a:	38 0f       	add	r19, r24
     93c:	3a 30       	cpi	r19, 0x0A	; 10
     93e:	78 f4       	brcc	.+30     	; 0x95e <vfprintf+0xd8>
     940:	26 ff       	sbrs	r18, 6
     942:	06 c0       	rjmp	.+12     	; 0x950 <vfprintf+0xca>
     944:	fa e0       	ldi	r31, 0x0A	; 10
     946:	5f 9e       	mul	r5, r31
     948:	30 0d       	add	r19, r0
     94a:	11 24       	eor	r1, r1
     94c:	53 2e       	mov	r5, r19
     94e:	13 c0       	rjmp	.+38     	; 0x976 <vfprintf+0xf0>
     950:	8a e0       	ldi	r24, 0x0A	; 10
     952:	38 9e       	mul	r3, r24
     954:	30 0d       	add	r19, r0
     956:	11 24       	eor	r1, r1
     958:	33 2e       	mov	r3, r19
     95a:	20 62       	ori	r18, 0x20	; 32
     95c:	0c c0       	rjmp	.+24     	; 0x976 <vfprintf+0xf0>
     95e:	8e 32       	cpi	r24, 0x2E	; 46
     960:	21 f4       	brne	.+8      	; 0x96a <vfprintf+0xe4>
     962:	26 fd       	sbrc	r18, 6
     964:	5f c1       	rjmp	.+702    	; 0xc24 <vfprintf+0x39e>
     966:	20 64       	ori	r18, 0x40	; 64
     968:	06 c0       	rjmp	.+12     	; 0x976 <vfprintf+0xf0>
     96a:	8c 36       	cpi	r24, 0x6C	; 108
     96c:	11 f4       	brne	.+4      	; 0x972 <vfprintf+0xec>
     96e:	20 68       	ori	r18, 0x80	; 128
     970:	02 c0       	rjmp	.+4      	; 0x976 <vfprintf+0xf0>
     972:	88 36       	cpi	r24, 0x68	; 104
     974:	41 f4       	brne	.+16     	; 0x986 <vfprintf+0x100>
     976:	f6 01       	movw	r30, r12
     978:	93 fd       	sbrc	r25, 3
     97a:	85 91       	lpm	r24, Z+
     97c:	93 ff       	sbrs	r25, 3
     97e:	81 91       	ld	r24, Z+
     980:	6f 01       	movw	r12, r30
     982:	81 11       	cpse	r24, r1
     984:	c1 cf       	rjmp	.-126    	; 0x908 <vfprintf+0x82>
     986:	98 2f       	mov	r25, r24
     988:	9f 7d       	andi	r25, 0xDF	; 223
     98a:	95 54       	subi	r25, 0x45	; 69
     98c:	93 30       	cpi	r25, 0x03	; 3
     98e:	28 f4       	brcc	.+10     	; 0x99a <vfprintf+0x114>
     990:	0c 5f       	subi	r16, 0xFC	; 252
     992:	1f 4f       	sbci	r17, 0xFF	; 255
     994:	ff e3       	ldi	r31, 0x3F	; 63
     996:	f9 83       	std	Y+1, r31	; 0x01
     998:	0d c0       	rjmp	.+26     	; 0x9b4 <vfprintf+0x12e>
     99a:	83 36       	cpi	r24, 0x63	; 99
     99c:	31 f0       	breq	.+12     	; 0x9aa <vfprintf+0x124>
     99e:	83 37       	cpi	r24, 0x73	; 115
     9a0:	71 f0       	breq	.+28     	; 0x9be <vfprintf+0x138>
     9a2:	83 35       	cpi	r24, 0x53	; 83
     9a4:	09 f0       	breq	.+2      	; 0x9a8 <vfprintf+0x122>
     9a6:	57 c0       	rjmp	.+174    	; 0xa56 <vfprintf+0x1d0>
     9a8:	21 c0       	rjmp	.+66     	; 0x9ec <vfprintf+0x166>
     9aa:	f8 01       	movw	r30, r16
     9ac:	80 81       	ld	r24, Z
     9ae:	89 83       	std	Y+1, r24	; 0x01
     9b0:	0e 5f       	subi	r16, 0xFE	; 254
     9b2:	1f 4f       	sbci	r17, 0xFF	; 255
     9b4:	44 24       	eor	r4, r4
     9b6:	43 94       	inc	r4
     9b8:	51 2c       	mov	r5, r1
     9ba:	54 01       	movw	r10, r8
     9bc:	14 c0       	rjmp	.+40     	; 0x9e6 <vfprintf+0x160>
     9be:	38 01       	movw	r6, r16
     9c0:	f2 e0       	ldi	r31, 0x02	; 2
     9c2:	6f 0e       	add	r6, r31
     9c4:	71 1c       	adc	r7, r1
     9c6:	f8 01       	movw	r30, r16
     9c8:	a0 80       	ld	r10, Z
     9ca:	b1 80       	ldd	r11, Z+1	; 0x01
     9cc:	26 ff       	sbrs	r18, 6
     9ce:	03 c0       	rjmp	.+6      	; 0x9d6 <vfprintf+0x150>
     9d0:	65 2d       	mov	r22, r5
     9d2:	70 e0       	ldi	r23, 0x00	; 0
     9d4:	02 c0       	rjmp	.+4      	; 0x9da <vfprintf+0x154>
     9d6:	6f ef       	ldi	r22, 0xFF	; 255
     9d8:	7f ef       	ldi	r23, 0xFF	; 255
     9da:	c5 01       	movw	r24, r10
     9dc:	2c 87       	std	Y+12, r18	; 0x0c
     9de:	94 d2       	rcall	.+1320   	; 0xf08 <strnlen>
     9e0:	2c 01       	movw	r4, r24
     9e2:	83 01       	movw	r16, r6
     9e4:	2c 85       	ldd	r18, Y+12	; 0x0c
     9e6:	2f 77       	andi	r18, 0x7F	; 127
     9e8:	22 2e       	mov	r2, r18
     9ea:	16 c0       	rjmp	.+44     	; 0xa18 <vfprintf+0x192>
     9ec:	38 01       	movw	r6, r16
     9ee:	f2 e0       	ldi	r31, 0x02	; 2
     9f0:	6f 0e       	add	r6, r31
     9f2:	71 1c       	adc	r7, r1
     9f4:	f8 01       	movw	r30, r16
     9f6:	a0 80       	ld	r10, Z
     9f8:	b1 80       	ldd	r11, Z+1	; 0x01
     9fa:	26 ff       	sbrs	r18, 6
     9fc:	03 c0       	rjmp	.+6      	; 0xa04 <vfprintf+0x17e>
     9fe:	65 2d       	mov	r22, r5
     a00:	70 e0       	ldi	r23, 0x00	; 0
     a02:	02 c0       	rjmp	.+4      	; 0xa08 <vfprintf+0x182>
     a04:	6f ef       	ldi	r22, 0xFF	; 255
     a06:	7f ef       	ldi	r23, 0xFF	; 255
     a08:	c5 01       	movw	r24, r10
     a0a:	2c 87       	std	Y+12, r18	; 0x0c
     a0c:	6b d2       	rcall	.+1238   	; 0xee4 <strnlen_P>
     a0e:	2c 01       	movw	r4, r24
     a10:	2c 85       	ldd	r18, Y+12	; 0x0c
     a12:	20 68       	ori	r18, 0x80	; 128
     a14:	22 2e       	mov	r2, r18
     a16:	83 01       	movw	r16, r6
     a18:	23 fc       	sbrc	r2, 3
     a1a:	19 c0       	rjmp	.+50     	; 0xa4e <vfprintf+0x1c8>
     a1c:	83 2d       	mov	r24, r3
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	48 16       	cp	r4, r24
     a22:	59 06       	cpc	r5, r25
     a24:	a0 f4       	brcc	.+40     	; 0xa4e <vfprintf+0x1c8>
     a26:	b7 01       	movw	r22, r14
     a28:	80 e2       	ldi	r24, 0x20	; 32
     a2a:	90 e0       	ldi	r25, 0x00	; 0
     a2c:	78 d2       	rcall	.+1264   	; 0xf1e <fputc>
     a2e:	3a 94       	dec	r3
     a30:	f5 cf       	rjmp	.-22     	; 0xa1c <vfprintf+0x196>
     a32:	f5 01       	movw	r30, r10
     a34:	27 fc       	sbrc	r2, 7
     a36:	85 91       	lpm	r24, Z+
     a38:	27 fe       	sbrs	r2, 7
     a3a:	81 91       	ld	r24, Z+
     a3c:	5f 01       	movw	r10, r30
     a3e:	b7 01       	movw	r22, r14
     a40:	90 e0       	ldi	r25, 0x00	; 0
     a42:	6d d2       	rcall	.+1242   	; 0xf1e <fputc>
     a44:	31 10       	cpse	r3, r1
     a46:	3a 94       	dec	r3
     a48:	f1 e0       	ldi	r31, 0x01	; 1
     a4a:	4f 1a       	sub	r4, r31
     a4c:	51 08       	sbc	r5, r1
     a4e:	41 14       	cp	r4, r1
     a50:	51 04       	cpc	r5, r1
     a52:	79 f7       	brne	.-34     	; 0xa32 <vfprintf+0x1ac>
     a54:	de c0       	rjmp	.+444    	; 0xc12 <vfprintf+0x38c>
     a56:	84 36       	cpi	r24, 0x64	; 100
     a58:	11 f0       	breq	.+4      	; 0xa5e <vfprintf+0x1d8>
     a5a:	89 36       	cpi	r24, 0x69	; 105
     a5c:	31 f5       	brne	.+76     	; 0xaaa <vfprintf+0x224>
     a5e:	f8 01       	movw	r30, r16
     a60:	27 ff       	sbrs	r18, 7
     a62:	07 c0       	rjmp	.+14     	; 0xa72 <vfprintf+0x1ec>
     a64:	60 81       	ld	r22, Z
     a66:	71 81       	ldd	r23, Z+1	; 0x01
     a68:	82 81       	ldd	r24, Z+2	; 0x02
     a6a:	93 81       	ldd	r25, Z+3	; 0x03
     a6c:	0c 5f       	subi	r16, 0xFC	; 252
     a6e:	1f 4f       	sbci	r17, 0xFF	; 255
     a70:	08 c0       	rjmp	.+16     	; 0xa82 <vfprintf+0x1fc>
     a72:	60 81       	ld	r22, Z
     a74:	71 81       	ldd	r23, Z+1	; 0x01
     a76:	88 27       	eor	r24, r24
     a78:	77 fd       	sbrc	r23, 7
     a7a:	80 95       	com	r24
     a7c:	98 2f       	mov	r25, r24
     a7e:	0e 5f       	subi	r16, 0xFE	; 254
     a80:	1f 4f       	sbci	r17, 0xFF	; 255
     a82:	2f 76       	andi	r18, 0x6F	; 111
     a84:	b2 2e       	mov	r11, r18
     a86:	97 ff       	sbrs	r25, 7
     a88:	09 c0       	rjmp	.+18     	; 0xa9c <vfprintf+0x216>
     a8a:	90 95       	com	r25
     a8c:	80 95       	com	r24
     a8e:	70 95       	com	r23
     a90:	61 95       	neg	r22
     a92:	7f 4f       	sbci	r23, 0xFF	; 255
     a94:	8f 4f       	sbci	r24, 0xFF	; 255
     a96:	9f 4f       	sbci	r25, 0xFF	; 255
     a98:	20 68       	ori	r18, 0x80	; 128
     a9a:	b2 2e       	mov	r11, r18
     a9c:	2a e0       	ldi	r18, 0x0A	; 10
     a9e:	30 e0       	ldi	r19, 0x00	; 0
     aa0:	a4 01       	movw	r20, r8
     aa2:	6f d2       	rcall	.+1246   	; 0xf82 <__ultoa_invert>
     aa4:	a8 2e       	mov	r10, r24
     aa6:	a8 18       	sub	r10, r8
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <vfprintf+0x2aa>
     aaa:	85 37       	cpi	r24, 0x75	; 117
     aac:	29 f4       	brne	.+10     	; 0xab8 <vfprintf+0x232>
     aae:	2f 7e       	andi	r18, 0xEF	; 239
     ab0:	b2 2e       	mov	r11, r18
     ab2:	2a e0       	ldi	r18, 0x0A	; 10
     ab4:	30 e0       	ldi	r19, 0x00	; 0
     ab6:	25 c0       	rjmp	.+74     	; 0xb02 <vfprintf+0x27c>
     ab8:	f2 2f       	mov	r31, r18
     aba:	f9 7f       	andi	r31, 0xF9	; 249
     abc:	bf 2e       	mov	r11, r31
     abe:	8f 36       	cpi	r24, 0x6F	; 111
     ac0:	c1 f0       	breq	.+48     	; 0xaf2 <vfprintf+0x26c>
     ac2:	18 f4       	brcc	.+6      	; 0xaca <vfprintf+0x244>
     ac4:	88 35       	cpi	r24, 0x58	; 88
     ac6:	79 f0       	breq	.+30     	; 0xae6 <vfprintf+0x260>
     ac8:	ad c0       	rjmp	.+346    	; 0xc24 <vfprintf+0x39e>
     aca:	80 37       	cpi	r24, 0x70	; 112
     acc:	19 f0       	breq	.+6      	; 0xad4 <vfprintf+0x24e>
     ace:	88 37       	cpi	r24, 0x78	; 120
     ad0:	21 f0       	breq	.+8      	; 0xada <vfprintf+0x254>
     ad2:	a8 c0       	rjmp	.+336    	; 0xc24 <vfprintf+0x39e>
     ad4:	2f 2f       	mov	r18, r31
     ad6:	20 61       	ori	r18, 0x10	; 16
     ad8:	b2 2e       	mov	r11, r18
     ada:	b4 fe       	sbrs	r11, 4
     adc:	0d c0       	rjmp	.+26     	; 0xaf8 <vfprintf+0x272>
     ade:	8b 2d       	mov	r24, r11
     ae0:	84 60       	ori	r24, 0x04	; 4
     ae2:	b8 2e       	mov	r11, r24
     ae4:	09 c0       	rjmp	.+18     	; 0xaf8 <vfprintf+0x272>
     ae6:	24 ff       	sbrs	r18, 4
     ae8:	0a c0       	rjmp	.+20     	; 0xafe <vfprintf+0x278>
     aea:	9f 2f       	mov	r25, r31
     aec:	96 60       	ori	r25, 0x06	; 6
     aee:	b9 2e       	mov	r11, r25
     af0:	06 c0       	rjmp	.+12     	; 0xafe <vfprintf+0x278>
     af2:	28 e0       	ldi	r18, 0x08	; 8
     af4:	30 e0       	ldi	r19, 0x00	; 0
     af6:	05 c0       	rjmp	.+10     	; 0xb02 <vfprintf+0x27c>
     af8:	20 e1       	ldi	r18, 0x10	; 16
     afa:	30 e0       	ldi	r19, 0x00	; 0
     afc:	02 c0       	rjmp	.+4      	; 0xb02 <vfprintf+0x27c>
     afe:	20 e1       	ldi	r18, 0x10	; 16
     b00:	32 e0       	ldi	r19, 0x02	; 2
     b02:	f8 01       	movw	r30, r16
     b04:	b7 fe       	sbrs	r11, 7
     b06:	07 c0       	rjmp	.+14     	; 0xb16 <vfprintf+0x290>
     b08:	60 81       	ld	r22, Z
     b0a:	71 81       	ldd	r23, Z+1	; 0x01
     b0c:	82 81       	ldd	r24, Z+2	; 0x02
     b0e:	93 81       	ldd	r25, Z+3	; 0x03
     b10:	0c 5f       	subi	r16, 0xFC	; 252
     b12:	1f 4f       	sbci	r17, 0xFF	; 255
     b14:	06 c0       	rjmp	.+12     	; 0xb22 <vfprintf+0x29c>
     b16:	60 81       	ld	r22, Z
     b18:	71 81       	ldd	r23, Z+1	; 0x01
     b1a:	80 e0       	ldi	r24, 0x00	; 0
     b1c:	90 e0       	ldi	r25, 0x00	; 0
     b1e:	0e 5f       	subi	r16, 0xFE	; 254
     b20:	1f 4f       	sbci	r17, 0xFF	; 255
     b22:	a4 01       	movw	r20, r8
     b24:	2e d2       	rcall	.+1116   	; 0xf82 <__ultoa_invert>
     b26:	a8 2e       	mov	r10, r24
     b28:	a8 18       	sub	r10, r8
     b2a:	fb 2d       	mov	r31, r11
     b2c:	ff 77       	andi	r31, 0x7F	; 127
     b2e:	bf 2e       	mov	r11, r31
     b30:	b6 fe       	sbrs	r11, 6
     b32:	0b c0       	rjmp	.+22     	; 0xb4a <vfprintf+0x2c4>
     b34:	2b 2d       	mov	r18, r11
     b36:	2e 7f       	andi	r18, 0xFE	; 254
     b38:	a5 14       	cp	r10, r5
     b3a:	50 f4       	brcc	.+20     	; 0xb50 <vfprintf+0x2ca>
     b3c:	b4 fe       	sbrs	r11, 4
     b3e:	0a c0       	rjmp	.+20     	; 0xb54 <vfprintf+0x2ce>
     b40:	b2 fc       	sbrc	r11, 2
     b42:	08 c0       	rjmp	.+16     	; 0xb54 <vfprintf+0x2ce>
     b44:	2b 2d       	mov	r18, r11
     b46:	2e 7e       	andi	r18, 0xEE	; 238
     b48:	05 c0       	rjmp	.+10     	; 0xb54 <vfprintf+0x2ce>
     b4a:	7a 2c       	mov	r7, r10
     b4c:	2b 2d       	mov	r18, r11
     b4e:	03 c0       	rjmp	.+6      	; 0xb56 <vfprintf+0x2d0>
     b50:	7a 2c       	mov	r7, r10
     b52:	01 c0       	rjmp	.+2      	; 0xb56 <vfprintf+0x2d0>
     b54:	75 2c       	mov	r7, r5
     b56:	24 ff       	sbrs	r18, 4
     b58:	0d c0       	rjmp	.+26     	; 0xb74 <vfprintf+0x2ee>
     b5a:	fe 01       	movw	r30, r28
     b5c:	ea 0d       	add	r30, r10
     b5e:	f1 1d       	adc	r31, r1
     b60:	80 81       	ld	r24, Z
     b62:	80 33       	cpi	r24, 0x30	; 48
     b64:	11 f4       	brne	.+4      	; 0xb6a <vfprintf+0x2e4>
     b66:	29 7e       	andi	r18, 0xE9	; 233
     b68:	09 c0       	rjmp	.+18     	; 0xb7c <vfprintf+0x2f6>
     b6a:	22 ff       	sbrs	r18, 2
     b6c:	06 c0       	rjmp	.+12     	; 0xb7a <vfprintf+0x2f4>
     b6e:	73 94       	inc	r7
     b70:	73 94       	inc	r7
     b72:	04 c0       	rjmp	.+8      	; 0xb7c <vfprintf+0x2f6>
     b74:	82 2f       	mov	r24, r18
     b76:	86 78       	andi	r24, 0x86	; 134
     b78:	09 f0       	breq	.+2      	; 0xb7c <vfprintf+0x2f6>
     b7a:	73 94       	inc	r7
     b7c:	23 fd       	sbrc	r18, 3
     b7e:	12 c0       	rjmp	.+36     	; 0xba4 <vfprintf+0x31e>
     b80:	20 ff       	sbrs	r18, 0
     b82:	06 c0       	rjmp	.+12     	; 0xb90 <vfprintf+0x30a>
     b84:	5a 2c       	mov	r5, r10
     b86:	73 14       	cp	r7, r3
     b88:	18 f4       	brcc	.+6      	; 0xb90 <vfprintf+0x30a>
     b8a:	53 0c       	add	r5, r3
     b8c:	57 18       	sub	r5, r7
     b8e:	73 2c       	mov	r7, r3
     b90:	73 14       	cp	r7, r3
     b92:	60 f4       	brcc	.+24     	; 0xbac <vfprintf+0x326>
     b94:	b7 01       	movw	r22, r14
     b96:	80 e2       	ldi	r24, 0x20	; 32
     b98:	90 e0       	ldi	r25, 0x00	; 0
     b9a:	2c 87       	std	Y+12, r18	; 0x0c
     b9c:	c0 d1       	rcall	.+896    	; 0xf1e <fputc>
     b9e:	73 94       	inc	r7
     ba0:	2c 85       	ldd	r18, Y+12	; 0x0c
     ba2:	f6 cf       	rjmp	.-20     	; 0xb90 <vfprintf+0x30a>
     ba4:	73 14       	cp	r7, r3
     ba6:	10 f4       	brcc	.+4      	; 0xbac <vfprintf+0x326>
     ba8:	37 18       	sub	r3, r7
     baa:	01 c0       	rjmp	.+2      	; 0xbae <vfprintf+0x328>
     bac:	31 2c       	mov	r3, r1
     bae:	24 ff       	sbrs	r18, 4
     bb0:	11 c0       	rjmp	.+34     	; 0xbd4 <vfprintf+0x34e>
     bb2:	b7 01       	movw	r22, r14
     bb4:	80 e3       	ldi	r24, 0x30	; 48
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	2c 87       	std	Y+12, r18	; 0x0c
     bba:	b1 d1       	rcall	.+866    	; 0xf1e <fputc>
     bbc:	2c 85       	ldd	r18, Y+12	; 0x0c
     bbe:	22 ff       	sbrs	r18, 2
     bc0:	16 c0       	rjmp	.+44     	; 0xbee <vfprintf+0x368>
     bc2:	21 ff       	sbrs	r18, 1
     bc4:	03 c0       	rjmp	.+6      	; 0xbcc <vfprintf+0x346>
     bc6:	88 e5       	ldi	r24, 0x58	; 88
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	02 c0       	rjmp	.+4      	; 0xbd0 <vfprintf+0x34a>
     bcc:	88 e7       	ldi	r24, 0x78	; 120
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	b7 01       	movw	r22, r14
     bd2:	0c c0       	rjmp	.+24     	; 0xbec <vfprintf+0x366>
     bd4:	82 2f       	mov	r24, r18
     bd6:	86 78       	andi	r24, 0x86	; 134
     bd8:	51 f0       	breq	.+20     	; 0xbee <vfprintf+0x368>
     bda:	21 fd       	sbrc	r18, 1
     bdc:	02 c0       	rjmp	.+4      	; 0xbe2 <vfprintf+0x35c>
     bde:	80 e2       	ldi	r24, 0x20	; 32
     be0:	01 c0       	rjmp	.+2      	; 0xbe4 <vfprintf+0x35e>
     be2:	8b e2       	ldi	r24, 0x2B	; 43
     be4:	27 fd       	sbrc	r18, 7
     be6:	8d e2       	ldi	r24, 0x2D	; 45
     be8:	b7 01       	movw	r22, r14
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	98 d1       	rcall	.+816    	; 0xf1e <fputc>
     bee:	a5 14       	cp	r10, r5
     bf0:	30 f4       	brcc	.+12     	; 0xbfe <vfprintf+0x378>
     bf2:	b7 01       	movw	r22, r14
     bf4:	80 e3       	ldi	r24, 0x30	; 48
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	92 d1       	rcall	.+804    	; 0xf1e <fputc>
     bfa:	5a 94       	dec	r5
     bfc:	f8 cf       	rjmp	.-16     	; 0xbee <vfprintf+0x368>
     bfe:	aa 94       	dec	r10
     c00:	f4 01       	movw	r30, r8
     c02:	ea 0d       	add	r30, r10
     c04:	f1 1d       	adc	r31, r1
     c06:	80 81       	ld	r24, Z
     c08:	b7 01       	movw	r22, r14
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	88 d1       	rcall	.+784    	; 0xf1e <fputc>
     c0e:	a1 10       	cpse	r10, r1
     c10:	f6 cf       	rjmp	.-20     	; 0xbfe <vfprintf+0x378>
     c12:	33 20       	and	r3, r3
     c14:	09 f4       	brne	.+2      	; 0xc18 <vfprintf+0x392>
     c16:	5d ce       	rjmp	.-838    	; 0x8d2 <vfprintf+0x4c>
     c18:	b7 01       	movw	r22, r14
     c1a:	80 e2       	ldi	r24, 0x20	; 32
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	7f d1       	rcall	.+766    	; 0xf1e <fputc>
     c20:	3a 94       	dec	r3
     c22:	f7 cf       	rjmp	.-18     	; 0xc12 <vfprintf+0x38c>
     c24:	f7 01       	movw	r30, r14
     c26:	86 81       	ldd	r24, Z+6	; 0x06
     c28:	97 81       	ldd	r25, Z+7	; 0x07
     c2a:	02 c0       	rjmp	.+4      	; 0xc30 <vfprintf+0x3aa>
     c2c:	8f ef       	ldi	r24, 0xFF	; 255
     c2e:	9f ef       	ldi	r25, 0xFF	; 255
     c30:	2c 96       	adiw	r28, 0x0c	; 12
     c32:	0f b6       	in	r0, 0x3f	; 63
     c34:	f8 94       	cli
     c36:	de bf       	out	0x3e, r29	; 62
     c38:	0f be       	out	0x3f, r0	; 63
     c3a:	cd bf       	out	0x3d, r28	; 61
     c3c:	df 91       	pop	r29
     c3e:	cf 91       	pop	r28
     c40:	1f 91       	pop	r17
     c42:	0f 91       	pop	r16
     c44:	ff 90       	pop	r15
     c46:	ef 90       	pop	r14
     c48:	df 90       	pop	r13
     c4a:	cf 90       	pop	r12
     c4c:	bf 90       	pop	r11
     c4e:	af 90       	pop	r10
     c50:	9f 90       	pop	r9
     c52:	8f 90       	pop	r8
     c54:	7f 90       	pop	r7
     c56:	6f 90       	pop	r6
     c58:	5f 90       	pop	r5
     c5a:	4f 90       	pop	r4
     c5c:	3f 90       	pop	r3
     c5e:	2f 90       	pop	r2
     c60:	08 95       	ret

00000c62 <calloc>:
     c62:	0f 93       	push	r16
     c64:	1f 93       	push	r17
     c66:	cf 93       	push	r28
     c68:	df 93       	push	r29
     c6a:	86 9f       	mul	r24, r22
     c6c:	80 01       	movw	r16, r0
     c6e:	87 9f       	mul	r24, r23
     c70:	10 0d       	add	r17, r0
     c72:	96 9f       	mul	r25, r22
     c74:	10 0d       	add	r17, r0
     c76:	11 24       	eor	r1, r1
     c78:	c8 01       	movw	r24, r16
     c7a:	0d d0       	rcall	.+26     	; 0xc96 <malloc>
     c7c:	ec 01       	movw	r28, r24
     c7e:	00 97       	sbiw	r24, 0x00	; 0
     c80:	21 f0       	breq	.+8      	; 0xc8a <calloc+0x28>
     c82:	a8 01       	movw	r20, r16
     c84:	60 e0       	ldi	r22, 0x00	; 0
     c86:	70 e0       	ldi	r23, 0x00	; 0
     c88:	38 d1       	rcall	.+624    	; 0xefa <memset>
     c8a:	ce 01       	movw	r24, r28
     c8c:	df 91       	pop	r29
     c8e:	cf 91       	pop	r28
     c90:	1f 91       	pop	r17
     c92:	0f 91       	pop	r16
     c94:	08 95       	ret

00000c96 <malloc>:
     c96:	cf 93       	push	r28
     c98:	df 93       	push	r29
     c9a:	82 30       	cpi	r24, 0x02	; 2
     c9c:	91 05       	cpc	r25, r1
     c9e:	10 f4       	brcc	.+4      	; 0xca4 <malloc+0xe>
     ca0:	82 e0       	ldi	r24, 0x02	; 2
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	e0 91 8a 02 	lds	r30, 0x028A
     ca8:	f0 91 8b 02 	lds	r31, 0x028B
     cac:	20 e0       	ldi	r18, 0x00	; 0
     cae:	30 e0       	ldi	r19, 0x00	; 0
     cb0:	a0 e0       	ldi	r26, 0x00	; 0
     cb2:	b0 e0       	ldi	r27, 0x00	; 0
     cb4:	30 97       	sbiw	r30, 0x00	; 0
     cb6:	39 f1       	breq	.+78     	; 0xd06 <malloc+0x70>
     cb8:	40 81       	ld	r20, Z
     cba:	51 81       	ldd	r21, Z+1	; 0x01
     cbc:	48 17       	cp	r20, r24
     cbe:	59 07       	cpc	r21, r25
     cc0:	b8 f0       	brcs	.+46     	; 0xcf0 <malloc+0x5a>
     cc2:	48 17       	cp	r20, r24
     cc4:	59 07       	cpc	r21, r25
     cc6:	71 f4       	brne	.+28     	; 0xce4 <malloc+0x4e>
     cc8:	82 81       	ldd	r24, Z+2	; 0x02
     cca:	93 81       	ldd	r25, Z+3	; 0x03
     ccc:	10 97       	sbiw	r26, 0x00	; 0
     cce:	29 f0       	breq	.+10     	; 0xcda <malloc+0x44>
     cd0:	13 96       	adiw	r26, 0x03	; 3
     cd2:	9c 93       	st	X, r25
     cd4:	8e 93       	st	-X, r24
     cd6:	12 97       	sbiw	r26, 0x02	; 2
     cd8:	2c c0       	rjmp	.+88     	; 0xd32 <malloc+0x9c>
     cda:	90 93 8b 02 	sts	0x028B, r25
     cde:	80 93 8a 02 	sts	0x028A, r24
     ce2:	27 c0       	rjmp	.+78     	; 0xd32 <malloc+0x9c>
     ce4:	21 15       	cp	r18, r1
     ce6:	31 05       	cpc	r19, r1
     ce8:	31 f0       	breq	.+12     	; 0xcf6 <malloc+0x60>
     cea:	42 17       	cp	r20, r18
     cec:	53 07       	cpc	r21, r19
     cee:	18 f0       	brcs	.+6      	; 0xcf6 <malloc+0x60>
     cf0:	a9 01       	movw	r20, r18
     cf2:	db 01       	movw	r26, r22
     cf4:	01 c0       	rjmp	.+2      	; 0xcf8 <malloc+0x62>
     cf6:	ef 01       	movw	r28, r30
     cf8:	9a 01       	movw	r18, r20
     cfa:	bd 01       	movw	r22, r26
     cfc:	df 01       	movw	r26, r30
     cfe:	02 80       	ldd	r0, Z+2	; 0x02
     d00:	f3 81       	ldd	r31, Z+3	; 0x03
     d02:	e0 2d       	mov	r30, r0
     d04:	d7 cf       	rjmp	.-82     	; 0xcb4 <malloc+0x1e>
     d06:	21 15       	cp	r18, r1
     d08:	31 05       	cpc	r19, r1
     d0a:	f9 f0       	breq	.+62     	; 0xd4a <malloc+0xb4>
     d0c:	28 1b       	sub	r18, r24
     d0e:	39 0b       	sbc	r19, r25
     d10:	24 30       	cpi	r18, 0x04	; 4
     d12:	31 05       	cpc	r19, r1
     d14:	80 f4       	brcc	.+32     	; 0xd36 <malloc+0xa0>
     d16:	8a 81       	ldd	r24, Y+2	; 0x02
     d18:	9b 81       	ldd	r25, Y+3	; 0x03
     d1a:	61 15       	cp	r22, r1
     d1c:	71 05       	cpc	r23, r1
     d1e:	21 f0       	breq	.+8      	; 0xd28 <malloc+0x92>
     d20:	fb 01       	movw	r30, r22
     d22:	93 83       	std	Z+3, r25	; 0x03
     d24:	82 83       	std	Z+2, r24	; 0x02
     d26:	04 c0       	rjmp	.+8      	; 0xd30 <malloc+0x9a>
     d28:	90 93 8b 02 	sts	0x028B, r25
     d2c:	80 93 8a 02 	sts	0x028A, r24
     d30:	fe 01       	movw	r30, r28
     d32:	32 96       	adiw	r30, 0x02	; 2
     d34:	44 c0       	rjmp	.+136    	; 0xdbe <malloc+0x128>
     d36:	fe 01       	movw	r30, r28
     d38:	e2 0f       	add	r30, r18
     d3a:	f3 1f       	adc	r31, r19
     d3c:	81 93       	st	Z+, r24
     d3e:	91 93       	st	Z+, r25
     d40:	22 50       	subi	r18, 0x02	; 2
     d42:	31 09       	sbc	r19, r1
     d44:	39 83       	std	Y+1, r19	; 0x01
     d46:	28 83       	st	Y, r18
     d48:	3a c0       	rjmp	.+116    	; 0xdbe <malloc+0x128>
     d4a:	20 91 88 02 	lds	r18, 0x0288
     d4e:	30 91 89 02 	lds	r19, 0x0289
     d52:	23 2b       	or	r18, r19
     d54:	41 f4       	brne	.+16     	; 0xd66 <malloc+0xd0>
     d56:	20 91 02 02 	lds	r18, 0x0202
     d5a:	30 91 03 02 	lds	r19, 0x0203
     d5e:	30 93 89 02 	sts	0x0289, r19
     d62:	20 93 88 02 	sts	0x0288, r18
     d66:	20 91 00 02 	lds	r18, 0x0200
     d6a:	30 91 01 02 	lds	r19, 0x0201
     d6e:	21 15       	cp	r18, r1
     d70:	31 05       	cpc	r19, r1
     d72:	41 f4       	brne	.+16     	; 0xd84 <malloc+0xee>
     d74:	2d b7       	in	r18, 0x3d	; 61
     d76:	3e b7       	in	r19, 0x3e	; 62
     d78:	40 91 04 02 	lds	r20, 0x0204
     d7c:	50 91 05 02 	lds	r21, 0x0205
     d80:	24 1b       	sub	r18, r20
     d82:	35 0b       	sbc	r19, r21
     d84:	e0 91 88 02 	lds	r30, 0x0288
     d88:	f0 91 89 02 	lds	r31, 0x0289
     d8c:	e2 17       	cp	r30, r18
     d8e:	f3 07       	cpc	r31, r19
     d90:	a0 f4       	brcc	.+40     	; 0xdba <malloc+0x124>
     d92:	2e 1b       	sub	r18, r30
     d94:	3f 0b       	sbc	r19, r31
     d96:	28 17       	cp	r18, r24
     d98:	39 07       	cpc	r19, r25
     d9a:	78 f0       	brcs	.+30     	; 0xdba <malloc+0x124>
     d9c:	ac 01       	movw	r20, r24
     d9e:	4e 5f       	subi	r20, 0xFE	; 254
     da0:	5f 4f       	sbci	r21, 0xFF	; 255
     da2:	24 17       	cp	r18, r20
     da4:	35 07       	cpc	r19, r21
     da6:	48 f0       	brcs	.+18     	; 0xdba <malloc+0x124>
     da8:	4e 0f       	add	r20, r30
     daa:	5f 1f       	adc	r21, r31
     dac:	50 93 89 02 	sts	0x0289, r21
     db0:	40 93 88 02 	sts	0x0288, r20
     db4:	81 93       	st	Z+, r24
     db6:	91 93       	st	Z+, r25
     db8:	02 c0       	rjmp	.+4      	; 0xdbe <malloc+0x128>
     dba:	e0 e0       	ldi	r30, 0x00	; 0
     dbc:	f0 e0       	ldi	r31, 0x00	; 0
     dbe:	cf 01       	movw	r24, r30
     dc0:	df 91       	pop	r29
     dc2:	cf 91       	pop	r28
     dc4:	08 95       	ret

00000dc6 <free>:
     dc6:	cf 93       	push	r28
     dc8:	df 93       	push	r29
     dca:	00 97       	sbiw	r24, 0x00	; 0
     dcc:	09 f4       	brne	.+2      	; 0xdd0 <free+0xa>
     dce:	87 c0       	rjmp	.+270    	; 0xede <free+0x118>
     dd0:	fc 01       	movw	r30, r24
     dd2:	32 97       	sbiw	r30, 0x02	; 2
     dd4:	13 82       	std	Z+3, r1	; 0x03
     dd6:	12 82       	std	Z+2, r1	; 0x02
     dd8:	c0 91 8a 02 	lds	r28, 0x028A
     ddc:	d0 91 8b 02 	lds	r29, 0x028B
     de0:	20 97       	sbiw	r28, 0x00	; 0
     de2:	81 f4       	brne	.+32     	; 0xe04 <free+0x3e>
     de4:	20 81       	ld	r18, Z
     de6:	31 81       	ldd	r19, Z+1	; 0x01
     de8:	28 0f       	add	r18, r24
     dea:	39 1f       	adc	r19, r25
     dec:	80 91 88 02 	lds	r24, 0x0288
     df0:	90 91 89 02 	lds	r25, 0x0289
     df4:	82 17       	cp	r24, r18
     df6:	93 07       	cpc	r25, r19
     df8:	79 f5       	brne	.+94     	; 0xe58 <free+0x92>
     dfa:	f0 93 89 02 	sts	0x0289, r31
     dfe:	e0 93 88 02 	sts	0x0288, r30
     e02:	6d c0       	rjmp	.+218    	; 0xede <free+0x118>
     e04:	de 01       	movw	r26, r28
     e06:	20 e0       	ldi	r18, 0x00	; 0
     e08:	30 e0       	ldi	r19, 0x00	; 0
     e0a:	ae 17       	cp	r26, r30
     e0c:	bf 07       	cpc	r27, r31
     e0e:	50 f4       	brcc	.+20     	; 0xe24 <free+0x5e>
     e10:	12 96       	adiw	r26, 0x02	; 2
     e12:	4d 91       	ld	r20, X+
     e14:	5c 91       	ld	r21, X
     e16:	13 97       	sbiw	r26, 0x03	; 3
     e18:	9d 01       	movw	r18, r26
     e1a:	41 15       	cp	r20, r1
     e1c:	51 05       	cpc	r21, r1
     e1e:	09 f1       	breq	.+66     	; 0xe62 <free+0x9c>
     e20:	da 01       	movw	r26, r20
     e22:	f3 cf       	rjmp	.-26     	; 0xe0a <free+0x44>
     e24:	b3 83       	std	Z+3, r27	; 0x03
     e26:	a2 83       	std	Z+2, r26	; 0x02
     e28:	40 81       	ld	r20, Z
     e2a:	51 81       	ldd	r21, Z+1	; 0x01
     e2c:	84 0f       	add	r24, r20
     e2e:	95 1f       	adc	r25, r21
     e30:	8a 17       	cp	r24, r26
     e32:	9b 07       	cpc	r25, r27
     e34:	71 f4       	brne	.+28     	; 0xe52 <free+0x8c>
     e36:	8d 91       	ld	r24, X+
     e38:	9c 91       	ld	r25, X
     e3a:	11 97       	sbiw	r26, 0x01	; 1
     e3c:	84 0f       	add	r24, r20
     e3e:	95 1f       	adc	r25, r21
     e40:	02 96       	adiw	r24, 0x02	; 2
     e42:	91 83       	std	Z+1, r25	; 0x01
     e44:	80 83       	st	Z, r24
     e46:	12 96       	adiw	r26, 0x02	; 2
     e48:	8d 91       	ld	r24, X+
     e4a:	9c 91       	ld	r25, X
     e4c:	13 97       	sbiw	r26, 0x03	; 3
     e4e:	93 83       	std	Z+3, r25	; 0x03
     e50:	82 83       	std	Z+2, r24	; 0x02
     e52:	21 15       	cp	r18, r1
     e54:	31 05       	cpc	r19, r1
     e56:	29 f4       	brne	.+10     	; 0xe62 <free+0x9c>
     e58:	f0 93 8b 02 	sts	0x028B, r31
     e5c:	e0 93 8a 02 	sts	0x028A, r30
     e60:	3e c0       	rjmp	.+124    	; 0xede <free+0x118>
     e62:	d9 01       	movw	r26, r18
     e64:	13 96       	adiw	r26, 0x03	; 3
     e66:	fc 93       	st	X, r31
     e68:	ee 93       	st	-X, r30
     e6a:	12 97       	sbiw	r26, 0x02	; 2
     e6c:	4d 91       	ld	r20, X+
     e6e:	5d 91       	ld	r21, X+
     e70:	a4 0f       	add	r26, r20
     e72:	b5 1f       	adc	r27, r21
     e74:	ea 17       	cp	r30, r26
     e76:	fb 07       	cpc	r31, r27
     e78:	79 f4       	brne	.+30     	; 0xe98 <free+0xd2>
     e7a:	80 81       	ld	r24, Z
     e7c:	91 81       	ldd	r25, Z+1	; 0x01
     e7e:	84 0f       	add	r24, r20
     e80:	95 1f       	adc	r25, r21
     e82:	02 96       	adiw	r24, 0x02	; 2
     e84:	d9 01       	movw	r26, r18
     e86:	11 96       	adiw	r26, 0x01	; 1
     e88:	9c 93       	st	X, r25
     e8a:	8e 93       	st	-X, r24
     e8c:	82 81       	ldd	r24, Z+2	; 0x02
     e8e:	93 81       	ldd	r25, Z+3	; 0x03
     e90:	13 96       	adiw	r26, 0x03	; 3
     e92:	9c 93       	st	X, r25
     e94:	8e 93       	st	-X, r24
     e96:	12 97       	sbiw	r26, 0x02	; 2
     e98:	e0 e0       	ldi	r30, 0x00	; 0
     e9a:	f0 e0       	ldi	r31, 0x00	; 0
     e9c:	8a 81       	ldd	r24, Y+2	; 0x02
     e9e:	9b 81       	ldd	r25, Y+3	; 0x03
     ea0:	00 97       	sbiw	r24, 0x00	; 0
     ea2:	19 f0       	breq	.+6      	; 0xeaa <free+0xe4>
     ea4:	fe 01       	movw	r30, r28
     ea6:	ec 01       	movw	r28, r24
     ea8:	f9 cf       	rjmp	.-14     	; 0xe9c <free+0xd6>
     eaa:	ce 01       	movw	r24, r28
     eac:	02 96       	adiw	r24, 0x02	; 2
     eae:	28 81       	ld	r18, Y
     eb0:	39 81       	ldd	r19, Y+1	; 0x01
     eb2:	82 0f       	add	r24, r18
     eb4:	93 1f       	adc	r25, r19
     eb6:	20 91 88 02 	lds	r18, 0x0288
     eba:	30 91 89 02 	lds	r19, 0x0289
     ebe:	28 17       	cp	r18, r24
     ec0:	39 07       	cpc	r19, r25
     ec2:	69 f4       	brne	.+26     	; 0xede <free+0x118>
     ec4:	30 97       	sbiw	r30, 0x00	; 0
     ec6:	29 f4       	brne	.+10     	; 0xed2 <free+0x10c>
     ec8:	10 92 8b 02 	sts	0x028B, r1
     ecc:	10 92 8a 02 	sts	0x028A, r1
     ed0:	02 c0       	rjmp	.+4      	; 0xed6 <free+0x110>
     ed2:	13 82       	std	Z+3, r1	; 0x03
     ed4:	12 82       	std	Z+2, r1	; 0x02
     ed6:	d0 93 89 02 	sts	0x0289, r29
     eda:	c0 93 88 02 	sts	0x0288, r28
     ede:	df 91       	pop	r29
     ee0:	cf 91       	pop	r28
     ee2:	08 95       	ret

00000ee4 <strnlen_P>:
     ee4:	fc 01       	movw	r30, r24
     ee6:	05 90       	lpm	r0, Z+
     ee8:	61 50       	subi	r22, 0x01	; 1
     eea:	70 40       	sbci	r23, 0x00	; 0
     eec:	01 10       	cpse	r0, r1
     eee:	d8 f7       	brcc	.-10     	; 0xee6 <strnlen_P+0x2>
     ef0:	80 95       	com	r24
     ef2:	90 95       	com	r25
     ef4:	8e 0f       	add	r24, r30
     ef6:	9f 1f       	adc	r25, r31
     ef8:	08 95       	ret

00000efa <memset>:
     efa:	dc 01       	movw	r26, r24
     efc:	01 c0       	rjmp	.+2      	; 0xf00 <memset+0x6>
     efe:	6d 93       	st	X+, r22
     f00:	41 50       	subi	r20, 0x01	; 1
     f02:	50 40       	sbci	r21, 0x00	; 0
     f04:	e0 f7       	brcc	.-8      	; 0xefe <memset+0x4>
     f06:	08 95       	ret

00000f08 <strnlen>:
     f08:	fc 01       	movw	r30, r24
     f0a:	61 50       	subi	r22, 0x01	; 1
     f0c:	70 40       	sbci	r23, 0x00	; 0
     f0e:	01 90       	ld	r0, Z+
     f10:	01 10       	cpse	r0, r1
     f12:	d8 f7       	brcc	.-10     	; 0xf0a <strnlen+0x2>
     f14:	80 95       	com	r24
     f16:	90 95       	com	r25
     f18:	8e 0f       	add	r24, r30
     f1a:	9f 1f       	adc	r25, r31
     f1c:	08 95       	ret

00000f1e <fputc>:
     f1e:	0f 93       	push	r16
     f20:	1f 93       	push	r17
     f22:	cf 93       	push	r28
     f24:	df 93       	push	r29
     f26:	18 2f       	mov	r17, r24
     f28:	09 2f       	mov	r16, r25
     f2a:	eb 01       	movw	r28, r22
     f2c:	8b 81       	ldd	r24, Y+3	; 0x03
     f2e:	81 fd       	sbrc	r24, 1
     f30:	03 c0       	rjmp	.+6      	; 0xf38 <fputc+0x1a>
     f32:	8f ef       	ldi	r24, 0xFF	; 255
     f34:	9f ef       	ldi	r25, 0xFF	; 255
     f36:	20 c0       	rjmp	.+64     	; 0xf78 <fputc+0x5a>
     f38:	82 ff       	sbrs	r24, 2
     f3a:	10 c0       	rjmp	.+32     	; 0xf5c <fputc+0x3e>
     f3c:	4e 81       	ldd	r20, Y+6	; 0x06
     f3e:	5f 81       	ldd	r21, Y+7	; 0x07
     f40:	2c 81       	ldd	r18, Y+4	; 0x04
     f42:	3d 81       	ldd	r19, Y+5	; 0x05
     f44:	42 17       	cp	r20, r18
     f46:	53 07       	cpc	r21, r19
     f48:	7c f4       	brge	.+30     	; 0xf68 <fputc+0x4a>
     f4a:	e8 81       	ld	r30, Y
     f4c:	f9 81       	ldd	r31, Y+1	; 0x01
     f4e:	9f 01       	movw	r18, r30
     f50:	2f 5f       	subi	r18, 0xFF	; 255
     f52:	3f 4f       	sbci	r19, 0xFF	; 255
     f54:	39 83       	std	Y+1, r19	; 0x01
     f56:	28 83       	st	Y, r18
     f58:	10 83       	st	Z, r17
     f5a:	06 c0       	rjmp	.+12     	; 0xf68 <fputc+0x4a>
     f5c:	e8 85       	ldd	r30, Y+8	; 0x08
     f5e:	f9 85       	ldd	r31, Y+9	; 0x09
     f60:	81 2f       	mov	r24, r17
     f62:	19 95       	eicall
     f64:	89 2b       	or	r24, r25
     f66:	29 f7       	brne	.-54     	; 0xf32 <fputc+0x14>
     f68:	2e 81       	ldd	r18, Y+6	; 0x06
     f6a:	3f 81       	ldd	r19, Y+7	; 0x07
     f6c:	2f 5f       	subi	r18, 0xFF	; 255
     f6e:	3f 4f       	sbci	r19, 0xFF	; 255
     f70:	3f 83       	std	Y+7, r19	; 0x07
     f72:	2e 83       	std	Y+6, r18	; 0x06
     f74:	81 2f       	mov	r24, r17
     f76:	90 2f       	mov	r25, r16
     f78:	df 91       	pop	r29
     f7a:	cf 91       	pop	r28
     f7c:	1f 91       	pop	r17
     f7e:	0f 91       	pop	r16
     f80:	08 95       	ret

00000f82 <__ultoa_invert>:
     f82:	fa 01       	movw	r30, r20
     f84:	aa 27       	eor	r26, r26
     f86:	28 30       	cpi	r18, 0x08	; 8
     f88:	51 f1       	breq	.+84     	; 0xfde <__ultoa_invert+0x5c>
     f8a:	20 31       	cpi	r18, 0x10	; 16
     f8c:	81 f1       	breq	.+96     	; 0xfee <__ultoa_invert+0x6c>
     f8e:	e8 94       	clt
     f90:	6f 93       	push	r22
     f92:	6e 7f       	andi	r22, 0xFE	; 254
     f94:	6e 5f       	subi	r22, 0xFE	; 254
     f96:	7f 4f       	sbci	r23, 0xFF	; 255
     f98:	8f 4f       	sbci	r24, 0xFF	; 255
     f9a:	9f 4f       	sbci	r25, 0xFF	; 255
     f9c:	af 4f       	sbci	r26, 0xFF	; 255
     f9e:	b1 e0       	ldi	r27, 0x01	; 1
     fa0:	3e d0       	rcall	.+124    	; 0x101e <__ultoa_invert+0x9c>
     fa2:	b4 e0       	ldi	r27, 0x04	; 4
     fa4:	3c d0       	rcall	.+120    	; 0x101e <__ultoa_invert+0x9c>
     fa6:	67 0f       	add	r22, r23
     fa8:	78 1f       	adc	r23, r24
     faa:	89 1f       	adc	r24, r25
     fac:	9a 1f       	adc	r25, r26
     fae:	a1 1d       	adc	r26, r1
     fb0:	68 0f       	add	r22, r24
     fb2:	79 1f       	adc	r23, r25
     fb4:	8a 1f       	adc	r24, r26
     fb6:	91 1d       	adc	r25, r1
     fb8:	a1 1d       	adc	r26, r1
     fba:	6a 0f       	add	r22, r26
     fbc:	71 1d       	adc	r23, r1
     fbe:	81 1d       	adc	r24, r1
     fc0:	91 1d       	adc	r25, r1
     fc2:	a1 1d       	adc	r26, r1
     fc4:	20 d0       	rcall	.+64     	; 0x1006 <__ultoa_invert+0x84>
     fc6:	09 f4       	brne	.+2      	; 0xfca <__ultoa_invert+0x48>
     fc8:	68 94       	set
     fca:	3f 91       	pop	r19
     fcc:	2a e0       	ldi	r18, 0x0A	; 10
     fce:	26 9f       	mul	r18, r22
     fd0:	11 24       	eor	r1, r1
     fd2:	30 19       	sub	r19, r0
     fd4:	30 5d       	subi	r19, 0xD0	; 208
     fd6:	31 93       	st	Z+, r19
     fd8:	de f6       	brtc	.-74     	; 0xf90 <__ultoa_invert+0xe>
     fda:	cf 01       	movw	r24, r30
     fdc:	08 95       	ret
     fde:	46 2f       	mov	r20, r22
     fe0:	47 70       	andi	r20, 0x07	; 7
     fe2:	40 5d       	subi	r20, 0xD0	; 208
     fe4:	41 93       	st	Z+, r20
     fe6:	b3 e0       	ldi	r27, 0x03	; 3
     fe8:	0f d0       	rcall	.+30     	; 0x1008 <__ultoa_invert+0x86>
     fea:	c9 f7       	brne	.-14     	; 0xfde <__ultoa_invert+0x5c>
     fec:	f6 cf       	rjmp	.-20     	; 0xfda <__ultoa_invert+0x58>
     fee:	46 2f       	mov	r20, r22
     ff0:	4f 70       	andi	r20, 0x0F	; 15
     ff2:	40 5d       	subi	r20, 0xD0	; 208
     ff4:	4a 33       	cpi	r20, 0x3A	; 58
     ff6:	18 f0       	brcs	.+6      	; 0xffe <__ultoa_invert+0x7c>
     ff8:	49 5d       	subi	r20, 0xD9	; 217
     ffa:	31 fd       	sbrc	r19, 1
     ffc:	40 52       	subi	r20, 0x20	; 32
     ffe:	41 93       	st	Z+, r20
    1000:	02 d0       	rcall	.+4      	; 0x1006 <__ultoa_invert+0x84>
    1002:	a9 f7       	brne	.-22     	; 0xfee <__ultoa_invert+0x6c>
    1004:	ea cf       	rjmp	.-44     	; 0xfda <__ultoa_invert+0x58>
    1006:	b4 e0       	ldi	r27, 0x04	; 4
    1008:	a6 95       	lsr	r26
    100a:	97 95       	ror	r25
    100c:	87 95       	ror	r24
    100e:	77 95       	ror	r23
    1010:	67 95       	ror	r22
    1012:	ba 95       	dec	r27
    1014:	c9 f7       	brne	.-14     	; 0x1008 <__ultoa_invert+0x86>
    1016:	00 97       	sbiw	r24, 0x00	; 0
    1018:	61 05       	cpc	r22, r1
    101a:	71 05       	cpc	r23, r1
    101c:	08 95       	ret
    101e:	9b 01       	movw	r18, r22
    1020:	ac 01       	movw	r20, r24
    1022:	0a 2e       	mov	r0, r26
    1024:	06 94       	lsr	r0
    1026:	57 95       	ror	r21
    1028:	47 95       	ror	r20
    102a:	37 95       	ror	r19
    102c:	27 95       	ror	r18
    102e:	ba 95       	dec	r27
    1030:	c9 f7       	brne	.-14     	; 0x1024 <__ultoa_invert+0xa2>
    1032:	62 0f       	add	r22, r18
    1034:	73 1f       	adc	r23, r19
    1036:	84 1f       	adc	r24, r20
    1038:	95 1f       	adc	r25, r21
    103a:	a0 1d       	adc	r26, r0
    103c:	08 95       	ret

0000103e <_exit>:
    103e:	f8 94       	cli

00001040 <__stop_program>:
    1040:	ff cf       	rjmp	.-2      	; 0x1040 <__stop_program>
